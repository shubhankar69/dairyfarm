{"version":3,"sources":["serviceWorker.js","store/monitorReducers.js","store/logger.js","store/txnMiddleware.js","store/localStorage.js","utilities/parseDate.js","modules/party/data/model.js","modules/party/data/selectors.js","modules/party/data/types.js","modules/party/data/actions.js","modules/app/serverError.js","store/path.js","modules/party/data/sagas.js","modules/bank/data/model.js","modules/bank/data/selectors.js","modules/bank/data/types.js","modules/bank/data/actions.js","modules/bank/data/sagas.js","modules/group/data/model.js","modules/group/data/selectors.js","modules/group/data/types.js","modules/group/data/actions.js","modules/group/data/sagas.js","modules/finyear/data/types.js","modules/finyear/data/actions.js","modules/finyear/data/sagas.js","modules/standard/data/types.js","modules/standard/data/actions.js","modules/standard/data/sagas.js","modules/milkRates/data/types.js","modules/milkRates/data/actions.js","modules/milkRates/data/sagas.js","modules/purchase/data/types.js","modules/purchase/data/actions.js","modules/purchase/data/sagas.js","modules/misc/data/types.js","modules/misc/data/actions.js","modules/misc/data/sagas.js","modules/register/data/sagas.js","modules/combination/data/types.js","modules/combination/data/actions.js","modules/combination/data/sagas.js","store/sagas.js","modules/party/data/reducers.js","modules/bank/data/reducers.js","modules/group/data/reducers.js","modules/finyear/data/reducers.js","modules/standard/data/reducers.js","modules/milkRates/data/reducers.js","modules/purchase/data/reducers.js","modules/misc/data/reducers.js","modules/combination/data/reducers.js","reducers.js","configureStore.js","modules/app/menu.js","utilities/notificationUtils.js","modules/party/components/partyList.js","utilities/dateUtils.js","utilities/formUtils.js","modules/party/components/plantSelect.js","modules/group/components/groupSelect.js","modules/bank/components/bankSelect.js","modules/group/components/groupPopup.js","modules/bank/components/bankPopup.js","modules/party/components/partyForm.js","modules/party/index.js","modules/bank/components/bankList.js","modules/bank/components/bankForm.js","modules/bank/index.js","modules/group/components/groupList.js","modules/group/components/groupForm.js","modules/group/index.js","modules/milkRates/data/model.js","modules/milkRates/data/selectors.js","modules/milkRates/components/typeSelect.js","modules/milkRates/components/milkRatesForm.js","modules/milkRates/index.js","modules/standard/data/model.js","modules/standard/data/selectors.js","modules/standard/components/typeSelect.js","modules/standard/components/standardForm.js","modules/standard/index.js","modules/misc/data/model.js","modules/misc/data/selectors.js","modules/misc/components/miscNameType.js","modules/misc/components/miscOperationType.js","modules/misc/components/miscForm.js","modules/misc/index.js","modules/finyear/data/model.js","modules/finyear/data/selectors.js","modules/finyear/components/finYearForm.js","modules/finyear/index.js","modules/purchase/data/selectors.js","modules/purchase/data/model.js","modules/party/components/partySelect.js","modules/purchase/components/listSearchType.js","modules/purchase/components/purchaseList.js","modules/party/components/partyDisplayView.js","modules/purchase/components/typeTxnSelect.js","modules/purchase/components/shiftSelect.js","modules/purchase/components/qualitySelect.js","modules/combination/data/selectors.js","modules/purchase/components/addQuickVdetails.js","modules/purchase/components/vdetailsNonEditable.js","modules/purchase/components/addNotePopUpCommon.js","modules/purchase/components/addHeadLoadPopup.js","modules/purchase/components/purchaseForm.js","modules/purchase/index.js","modules/register/data/types.js","modules/party/components/multiPartySelect.js","modules/register/components/register.js","modules/register/data/actions.js","modules/register/data/model.js","modules/register/index.js","modules/combination/data/model.js","modules/combination/components/typeSelect.js","modules/combination/components/combinationForm.js","modules/combination/index.js","modules/finyear/components/sessionDisplay.js","modules/app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","loggerMiddleware","store","next","group","type","info","result","getState","groupEnd","txnMiddleware","prevState","nextState","hasOwnProperty","txnid","v4","payload","error","err","difference","JSON","stringify","txn","id","fromAction","txnStatus","dt","moment","toJSON","dispatch","txns","combineReducers","txnLog","arguments","length","undefined","Object","objectSpread","defineProperty","loadState","serializedState","localStorage","getItem","parse","saveState","setItem","parseDateFromFormats","formats","parseStrict","Yup","transform","value","originalValue","isType","isValid","toDate","partySchema","shape","partyName","required","getIsPartyFetched","props","party","params","partyFetched","getPartyList","prop","byId","getPartyObjById","getNotification","notifications","selectParty","createSelector","keys","map","key","parseInt","text","CREATE_PARTY","SAVED_PARTY","EDIT_PARTY","EDITED_PARTY","FETCH_PARTY","FETCHED_PARTY","FETCHED_PARTY_BY_ID","NOTIFICATION_DONE_PARTY","DELETE_PARTY","DELETED_PARTY","PRINT_PARTY","fetchParty","setNotifyDoneParty","parseError","url","config","headers","data","response","status","statusText","message","stack","handlError","URL","createParty","saveParty","editParty","saveEditedParty","fetchPartyById","saveFetchedPartyById","requestParty","deleteParty","saveDeleteParty","postPartyPrint","sendPartyPrint","partySaga","regenerator_default","a","wrap","_context","prev","takeEvery","stop","_marked","_ref","_context2","call","savePartyAPI","sent","put","msg","sagaErrorMessage","_marked2","axios","post","crossDomain","then","catch","_context3","_marked3","_ref2","_context4","editPartyAPI","_marked4","_context5","_marked5","_ref3","_context6","fetchPartyByIdAPI","_marked6","get","_context7","_marked7","_ref4","_context8","select","requestPartyAPI","_marked8","_context9","_marked9","_ref5","_context10","deletePartyAPI","_marked10","_context11","_marked11","_context12","sendPartyPrintAPI","_marked12","open","partyEnd","_context13","all","_marked13","bankSchema","bankName","getIsBankFetched","bank","bankFetched","getBankList","getBankById","selectBank","CREATE_BANK","SAVED_BANK","EDIT_BANK","EDITED_BANK","FETCH_BANK","FETCHED_BANK","FETCHED_BANK_BY_ID","NOTIFICATION_DONE_BANK","DELETE_BANK","DELETED_BANK","createBank","fetchBank","setNotifyDoneBank","saveBank","editBank","saveEditedBank","fetchBankById","saveFetchedBankById","requestBank","deleteBank","saveDeleteBank","bankSaga","sagas_marked","saveBankAPI","sagas_marked2","sagas_marked3","editBankAPI","sagas_marked4","sagas_marked5","fetchBankByIdAPI","sagas_marked6","sagas_marked7","requestBankAPI","sagas_marked8","sagas_marked9","deleteBankAPI","sagas_marked10","sagas_marked11","groupSchema","groupName","getIsGroupFetched","groupFetched","getGroupList","getGroupById","selectGroup","CREATE_GROUP","SAVED_GROUP","EDIT_GROUP","EDITED_GROUP","FETCH_GROUP","FETCHED_GROUP","FETCHED_GROUP_BY_ID","NOTIFICATION_DONE_GROUP","DELETE_GROUP","DELETED_GROUP","createGroup","fetchGroup","setNotifyDoneGroup","saveGroup","editGroup","saveEditedGroup","fetchGroupById","saveFetchedGroupById","requestGroup","deleteGroup","saveDeleteGroup","groupSaga","data_sagas_marked","saveGroupAPI","data_sagas_marked2","data_sagas_marked3","editGroupAPI","data_sagas_marked4","data_sagas_marked5","fetchGroupByIdAPI","data_sagas_marked6","_id","data_sagas_marked7","requestGroupAPI","data_sagas_marked8","data_sagas_marked9","deleteGroupAPI","data_sagas_marked10","data_sagas_marked11","CREATE_FINYEAR","SAVED_FINYEAR","FETCH_FINYEAR","FETCHED_FINYEAR","FETCH_ACTIVE_YEAR","FETCHED_ACTIVE_YEAR","FETCHED_FINYEAR_BY_ID","NOTIFICATION_DONE_FINYEAR","savedFinYear","finYear","setNotifyDoneFinYear","createFinYear","saveFinYear","editFinYear","saveEditedFinYear","fetchFinYearById","saveFetchedFinYearById","fetchFinYear","requestFinYear","fetchActiveYear","requestActiveYear","finYearSaga","finyear_data_sagas_marked","saveFinYearAPI","finyear_data_sagas_marked2","finyear_data_sagas_marked3","editFinYearAPI","finyear_data_sagas_marked4","finyear_data_sagas_marked5","fetchFinYearByIdAPI","finyear_data_sagas_marked6","finyear_data_sagas_marked7","requestFinYearAPI","finyear_data_sagas_marked8","finyear_data_sagas_marked9","requestActiveYearAPI","finyear_data_sagas_marked10","finyear_data_sagas_marked11","SAVED_STANDARD","EDIT_STANDARD","FETCH_STANDARD","FETCHED_STANDARD","FETCHED_STANDARD_BY_ID","NOTIFICATION_DONE_STANDARD","savedStandard","standard","setNotifyDoneStandard","createStandard","saveStandard","editStandard","saveEditedStandard","fetchStandardById","saveFetchedStandardById","fetchStandard","requestStandard","standardSaga","standard_data_sagas_marked","saveStandardAPI","standard_data_sagas_marked2","standard_data_sagas_marked3","editStandardAPI","standard_data_sagas_marked4","standard_data_sagas_marked5","fetchStandardByIdAPI","standard_data_sagas_marked6","standard_data_sagas_marked7","requestStandardAPI","standard_data_sagas_marked8","standard_data_sagas_marked9","SAVED_MILKRATES","EDIT_MILKRATES","FETCH_MILKRATES","FETCHED_MILKRATES","FETCHED_MILKRATES_BY_ID","NOTIFICATION_DONE_MILKRATES","savedMilkRates","milkRates","setNotifyDoneMilkRates","createMilkRates","saveMilkRates","editMilkRates","saveEditedMilkRates","fetchMilkRatesById","saveFetchedMilkRatesById","fetchMilkRates","requestMilkRates","milkRatesSaga","milkRates_data_sagas_marked","saveMilkRatesAPI","milkRates_data_sagas_marked2","milkRates_data_sagas_marked3","editMilkRatesAPI","milkRates_data_sagas_marked4","milkRates_data_sagas_marked5","fetchMilkRatesByIdAPI","milkRates_data_sagas_marked6","milkRates_data_sagas_marked7","requestMilkRatesAPI","milkRates_data_sagas_marked8","milkRates_data_sagas_marked9","CREATE_PURCHASE","SAVED_PURCHASE","EDIT_PURCHASE","EDITED_PURCHASE","FETCH_PURCHASE","FETCH_PURCHASE_PERIOD","FETCHED_PURCHASE","FETCH_ALL_PURCHASE","FETCHED_ALL_PURCHASE","FETCHED_PURCHASE_BY_ID","NOTIFICATION_DONE_PURCHASE","DELETE_PURCHASE","DELETED_PURCHASE","PRINT_PURCHASE","MULTIPLE_PRINT_PURCHASE","MULTIPLE_DELETE_PURCHASE","MULTIPLE_DELETED_PURCHASE","FETCH_MAX_BILLNO","FETCHED_MAX_BILLNO","CLEAR_SAVED_ID","fetchedPurchase","purchase","fetchMaxBillNo","setNotifyDonePurchase","createPurchase","savePurchase","editPurchase","saveEditedPurchase","fetchPurchaseById","saveFetchedPurchaseById","fetchPurchase","requestPurchase","fetchPurchasePeriod","requestPurchasePeriod","fetchAllPurchase","requestAllPurchase","fetchMaxBillNoR","requestMaxBillNo","deletePurchase","saveDeletePurchase","deleteMultiPurchase","saveDeleteMultiPurchase","postPurchasePrint","sendPurchasePrint","postPurchaseMultiPrint","sendPurchaseMultiPrint","purchaseSaga","purchase_data_sagas_marked","savePurchaseAPI","purchase_data_sagas_marked2","purchase_data_sagas_marked3","editPurchaseAPI","removeid","purchase_data_sagas_marked4","purchase_data_sagas_marked5","fetchPurchaseByIdAPI","purchase_data_sagas_marked6","purchase_data_sagas_marked7","requestPurchaseAPI","purchase_data_sagas_marked8","purchase_data_sagas_marked9","requestPurchasePeriodAPI","purchase_data_sagas_marked10","purchase_data_sagas_marked11","_ref6","requestAllPurchaseAPI","sagas_marked12","sagas_marked13","_ref7","_context14","requestMaxBillNoAPI","_marked14","_context15","_marked15","_ref8","_context16","deletePurchaseAPI","_marked16","_context17","_marked17","_ref9","_context18","deleteMultiPurchaseAPI","_marked18","_context19","_marked19","_context20","sendPurchasePrintAPI","_marked20","_context21","_marked21","_context22","sendPurchaseMultiPrintAPI","_marked22","_context23","_marked23","SAVED_MISC","EDIT_MISC","FETCH_MISC","FETCHED_MISC","NOTIFICATION_DONE_MISC","setNotifyDoneMisc","editMisc","saveEditedMisc","fetchMisc","requestMisc","miscSaga","misc_data_sagas_marked","editMiscAPI","misc","misc_data_sagas_marked2","misc_data_sagas_marked3","requestMiscAPI","misc_data_sagas_marked4","misc_data_sagas_marked5","postSummaryRegister","sendSummaryRegister","postAllPartyRegister","sendAllPartyRegister","postSinglePartyRegister","sendSinglePartyRegister","registerSaga","register_data_sagas_marked","sendSummaryRegisterAPI","register_data_sagas_marked2","register_data_sagas_marked3","sendAllPartyRegisterAPI","register_data_sagas_marked4","register_data_sagas_marked5","sendSinglePartyRegisterAPI","register_data_sagas_marked6","register_data_sagas_marked7","SAVED_COMBINATION","EDIT_COMBINATION","FETCH_COMBINATION","FETCHED_COMBINATION","FETCHED_COMBINATION_BY_ID","NOTIFICATION_DONE_COMBINATION","savedCombination","combination","setNotifyDoneCombination","createCombination","saveCombination","editCombination","saveEditedCombination","fetchCombinationById","saveFetchedCombinationById","fetchCombination","requestCombination","combinationSaga","combination_data_sagas_marked","saveCombinationAPI","combination_data_sagas_marked2","combination_data_sagas_marked3","editCombinationAPI","combination_data_sagas_marked4","combination_data_sagas_marked5","fetchCombinationByIdAPI","combination_data_sagas_marked6","combination_data_sagas_marked7","requestCombinationAPI","combination_data_sagas_marked8","combination_data_sagas_marked9","rootSaga","store_sagas_marked","schema","Entity","idAttribute","partyListSchema","defaultPartyParams","createTitle","createSubmitButtonText","editTitle","editSubmitButtonText","savedPartyId","partyID","normalizedParty","normalize","merge","entities","partys","finalState","byListId","searchParams","delete","save","_action$payload","idValue","restOfState","objectWithoutProperties","_toPropertyKey","restOfId","bankListSchema","defaultBankParams","savedBankId","reducers_toPropertyKey","bankID","normalizedBank","banks","groupListSchema","defaultGroupParams","savedGroupId","groupID","normalizedGroup","groups","data_reducers_toPropertyKey","finYearSchema","finYearListSchema","defaultFinYearParams","finYearFetched","savedFinYearId","activeSessionYear","finYearID","normalizedFinYear","finYears","finyear_data_reducers_toPropertyKey","standardSchema","standardListSchema","defaultStandardParams","savedStandardId","standardID","normalizedStandard","standards","standard_data_reducers_toPropertyKey","milkRatesSchema","milkRatesListSchema","defaultMilkRatesParams","savedMilkRatesId","milkRatesID","normalizedMilkRates","milkRates_data_reducers_toPropertyKey","purchaseSchema","purchaseListSchema","defaultPurchaseParams","purchaseFetched","purchaseDeleted","savedPurchaseId","maxBillNo","purchaseID","removeID","normalizedPurchase","purchases","idObj","split","i","purchase_data_reducers_toPropertyKey","miscListSchema","defaultMiscParams","savedMiscId","miscID","name","normalizedMisc","miscs","misc_data_reducers_toPropertyKey","combinationSchema","combinationListSchema","defaultCombinationParams","savedCombinationId","combinationID","normalizedCombination","combination_data_reducers_toPropertyKey","rootReducer","history","router","connectRouter","sagaMiddleware","createSagaMiddleware","createBrowserHistory","basename","menu","icon","title","submenu","list","label","Notification","notifySelector","notifyDoneAction","notifyObj","useSelector","useDispatch","useEffect","getNotObj","edit","toast","position","autoClose","hideProgressBar","react_default","createElement","react_toastify","transition","Slide","Party","isNegative","_useState","useState","_useState2","slicedToArray","deletePartyId","setDeletePartyId","_useState3","_useState4","modalOption","setModalOption","groupMaster","bankMaster","deletePartyFromList","values","Table","Row","negative","Cell","index","phone","partyBankAccNo","textAlign","style","width","balance","parseFloat","Fragment","Link","to","cursor","color","onClick","notificationUtils","Modal","size","onClose","Header","Content","Actions","Button","positive","labelPosition","content","PartyList","printPartyDetails","Container","Grid","columns","className","Column","as","align","floated","push","Icon","selectable","basic","TableHeader","HeaderCell","TableBody","partyList_Party","colSpan","checkValidDateFormats","str","split_str","replace","DD","MM","YY","isDD","isNaN","isMM","isYY","currDate","format","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","getCurrentDate","isValidDay1","checkDay","isValidMonth1","checkMonth","yyStrLen","prefixStr","reqDate","setYear","isValidDay2","isValidMonth2","vfDt","yy","nextYY","calDate","nextDate","diff1","diff2","dateDiff","getYear","nextMM","prevMM","prevYY","prevDate","getMonthYear","validDateRange","yr","isleap","getDateInYYYYMMDD","date","date_split","date1","date2","dt1","dt2","ceil","getTime","FormikInputComponent","validateInput","isLabel","isTxn","placeholder","focus","disabled","isReadonly","field","_ref$form","form","touched","errors","handleChange","submitCount","Form","Field","validate","debounce","startCase","toLower","Input","onChange","autoFocus","readOnly","formik_esm","render","Label","pointing","prompt","FormikDateComponent","setDateManually","_ref2$form","setFieldValue","dirty","setDt","rawEvent","react_datepicker_min_default","placeholderText","dateFormat","scrollableYearDropdown","selected","e","target","onChangeRaw","autoComplete","FormikAmountComponent","decimal","saveOnBlur","compute","path","setValue","setStateValue","onChangeFunc","onchangeset","tabindex","_ref3$form","handleSubmit","handleBlur","react_number_format_es","thousandSeparator","thousandsGroupStyle","decimalScale","onValueChange","val","setValueChange","floatValue","tabIndex","onBlur","FormikCheckBoxComponent","userProps","_ref4$form","Radio","checked","FormikSelectComponent","isSelection","_ref5$form","setField","Dropdown","search","selection","options","isLowerCaseEnable","getValue","clearable","isDisable","FormikMultiSelectComponent","_React$createElement","_ref7$form","fluid","multiple","allowAdditions","FormikTextAreaComponent","_ref12","_ref12$form","HeaderClick","count","setCount","displayCount","height","isFloatLeft","float","maxLength","TextArea","resize","syntheticEvent","rows","getholder","PlantSelect","component","GroupSelect","opt","BankSelect","GroupPopup","setFieldVal","displayStatus","setDisplayStatus","trigger","initialValues","validationSchema","onSubmit","FormikForm","Body","Group","widths","BankPopup","resetForm","PartyForm","plantNo","address","nickName","bankM","groupM","plantName","obj","cloneDeep","bankId","groupId","getParty","getSavedPartyId","submitButtonText","getPartyParams","bankMst","groupMst","plantSelect","setName","bankSelect","bankPopup","groupSelect","groupPopup","fixed","Route","withRouter","Bank","deleteBankId","setDeleteBankId","deleteBankFromList","getVlaue","BankList","bankList_Bank","BankForm","getBank","getSavedBankId","getBankParams","deleteGroupId","setDeleteGroupId","deleteGroupFromList","GroupList","groupList_Group","GroupForm","getGroup","getSavedGroupId","getGroupParams","pageName","goodFat","goodSnf","badFat","badSnf","getMilkRatesList","TypeSelect","settings","MilkRatesForm","typeSelect","MilkRates","getStandardList","StandardForm","components_typeSelect","Standard","miscSchema","operationOn","getMiscListByName","MiscNameTypeSelect","trim","typeName","operation","description","MiscOperationType","MiscForm","updatedOn","createdOn","saveMisc","miscNameType","miscOperationType","Misc","fdt","tdt","selectFinYearList","sessionName","FinYearForm","addFinYear","onchangeDD","FinYear","getSavedPurchaseId","periodFromDate","periodToDate","billDate","billNo","partyM","getPurchaseList","listingPurchaseBySid","purchaseName","sort","b","sId","PartySelect","setState","ListSearchType","setListSearch","Purchase","deletePurchaseId","setDeletePurchaseId","partyMaster","deletePurchaseFromList","printPurchaseFromList","onDoubleClick","selectClickRow","onDoubleClickEvent","active","selectRow","Checkbox","totalQty","toFixed","totalKgfat","totalKgsnf","totalAvgKg","totalAdditions","totalDeductions","billTotal","totalRejected","totalSour","PurchaseList","isPurchaseDeleted","_useState5","isOpen","keyWord","_useState6","modalState","setModalState","_useState7","_useState8","modal","setModal","_useState9","_useState10","checkedIds","setCheckedIds","_useState11","_useState12","setSelectRow","_useState13","_useState14","listSearch","top","document","getElementById","getBoundingClientRect","scrollTo","calculateTotal","fetchList","fromDt","toDt","linkCreate","link","addPurchaseBulkPrint","callToDeleteData","pid","Dimmer","Loader","padding","listSearchType","partySelect","shadesEl","querySelectorAll","classList","contains","lastChild","click","unCheckAllCheckBox","purchaseList_Purchase","PartyDisplayView","partyObj","partyId","closeIcon","TypeTxnSelect","ShiftSelect","session","QualitySelect","AddQuickVdetails","setItemObject","setNextDate","voucherObj","vdetails","qty","netQty","setNetQty","isAuto","setIsAuto","clrP","isCLRhas","setIsCLRhas","popNextDate","setPopNextDate","onOpen","setOnOpen","getCombinationById","object","getId","getIndex","sourQty","kgFat","snfRate","rejectedQty","snfP","fatRate","fatAmount","pvid","fatP","snfAmount","kgSnf","milkPrice","remarks","milkRate","setStandard","setRate","shift","fatQuality","snfQuality","purchaseDetails","purchaseVoucherDetails","filter","element","getVdetailsObj","getAuto","shiftGet","saveItems","flag","rejectQty","new_date","add","day","month","year","onChangeQty","onChangeCLR","react_draggable_min_default","handle","dimmer","closeOnEscape","closeOnDimmerClick","getOpenPopup","typeTxnSelect","ischeck","setAutoTiming","shiftSelect","margin","qualitySelect","getStandard","getMilkRate","standardObj","milkRateObj","qtyGet","fat","clr","snf","fatType","snfType","fatAmt","snfAmt","totalRs","calculateRate","VdetailsNonEditable","move","swap","insert","unshift","pop","remove","arrKeys","fieldName","isActive","setIsActive","dist","stickyHeaderCount","stickyColumnCount","concat","set","onclickRow","AddNotesCommon","setValueFor","addNote","addNotes","AddHeadLoad","afterWork","sendValue","headLoad","addHeadLoad","PurchaseForm","totalFatAmount","totalSnfAmount","deductOthersType","adjustmentType","addAdvanceNarration","shareType","commissionValue","sourMilkType","headLoadType","deductAdvanceNarration","testEquipMentValue","sourMilkNarration","commissionNarration","cattleFeedType","addOthersNarration","testEquipMentType","lateArrivalType","addOthersValue","vaccineType","mtevalue","splIncentiveNarration","fodderNarration","splIncentiveValue","sourMilkValue","addAdvanceType","shareValue","arrearNarration","adjustment","headLoadNarration","deductOthersValue","arrearValue","shareNarration","cowLoanNarration","fodderType","headLoadValue","deductAdvanceType","vaccineValue","totalMilkprice","mtenarration","cowLoanValue","addOthersType","vaccineNarration","deductAdvanceValue","cattleFeedNarration","netAmount","mtetype","addAdvanceValue","testEquipMentNarration","lateArrivalValue","lateArrivalNarration","commissionType","splIncentiveType","arrearType","fodderValue","cowLoanType","adjustmentValue","adjustmentNarration","cattleFeedValue","deductOthersNarration","totalAvgRateKg","totalGoodFat","totalGoodSnf","totalBadFat","totalBadSnf","headLoadCalVal","getPurchase","getPurchaseParams","commisionMisc","sourMilkMisc","getMaxBillNo","commissionValGet","setCommissionValGet","commissionOn","setCommissionOn","sourValGet","setSourValGet","sourOn","setSourOn","headLoadOn","setHeadLoadOn","_useState15","_useState16","setPartyId","initialValue","setItemObjectAdd","callSetAllData","setItemObjectEdit","totalRejectedQty","totalSourQty","totalKgFat","totalKgSnf","totalFatAmt","totalSnfAmt","ratePerKg","pDetails","computeHeadLoad","computeCommission","computeSourMilk","nowSetTotalValue","totalAdditionAndDeduction","purchaseV","totalAddition","totalDeduction","additionOnChange","autoAdj","getAdj","commisionValue","commissionVal","milkP","kgFatSNF","sourMilkVal","partyDisplayView","visibility","addQuickVdetails","newPurchaseDetails","setItemObjectDelete","addNotePopUpCommon","addHeadLoadPopup","POST_REGISTER_SUMMARY","POST_REGISTER_ALLPARTY","MultiPartySelect","RegisterForm","postRegister","fromDate","summaryData","partytype","allPartyData","register","postAllPartyDetails","partyid","toString","singlePartyData","postSinglePartyDetails","defaultCheck","multiPartySelect","Register","CombinationForm","combination_components_typeSelect","Combination","SessionDisplay","getAtiveSessionObj","App","stores","es","esm","Menu","attached","Item","item","simple","m","s","sindex","sessionDisplay","preloadedState","configureStore","middleware","routerMiddleware","toConsumableArray","getDefaultMiddleware","enhancers","monitorReducersEnhancer","run","subscribe","throttle","ReactDOM","app_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3f584b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve dairy farm; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const loggerMiddleware = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default loggerMiddleware","import diff from 'deep-diff';\nimport v4 from 'uuid';\nimport { combineReducers } from 'redux'\nimport moment  from 'moment'\n\nexport const txnMiddleware = store => next => action => {\n\n  const prevState = store.getState();\n  const result = next(action)\n  const nextState = store.getState();\n\n  if (action.hasOwnProperty('diff') || action.hasOwnProperty('txn')){\n\n        let txnid = v4()        \n        if (action.hasOwnProperty('txn'))\n            txnid = action.payload.txnid\n\n        let error = '';\n        if (action.hasOwnProperty('err'))\n            error = action.err\n\n        let difference = '';\n        if (action.hasOwnProperty('diff'))\n            difference = JSON.stringify(diff(prevState, nextState));\n\n        const txn = { \n                id: txnid,\n                type: action.type !== 'SERVER_ERROR' ? action.type : action.fromAction,\n                payload : action.payload,\n                txnStatus: action.txn,\n                err : error,\n                diff: difference,\n                dt: moment().toJSON() \n            }\n\n        store.dispatch ( {type:'STORE_TXN', payload: txn } )\n    }\n  return result\n}\n  \nfunction txnLog (state = {}, action) {\n    if (action.type === 'STORE_TXN') { \n        const txnid = action.payload.id;   \n        return { ...state, \n            [txnid]: action.payload }        \n    } else {\n        return state\n    }\n}\n\nexport const txns = combineReducers({\n    txnLog\n});\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('taskState')\n      if (serializedState === null){\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  };\n  \n  export const saveState = (state) => {\n    try{\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('taskState',serializedState)\n    } catch (err) {\n      // ignore write error\n    }\n  }","import moment from 'moment'\nimport * as Yup from 'yup';\n\nexport function parseDateFromFormats (formats, parseStrict) {\n  return Yup.date().transform(function(value, originalValue) {\n    if (Yup.date().isType(value)) return value;\n\n    value = moment(originalValue, formats, parseStrict);\n    return value.isValid() ? value.toDate() : moment();\n  });\n}\n\n// export function parseNumberFromFormats (formats, parseStrict) {\n//   return Yup.number().transform(function(value, originalValue) {\n//     if (Yup.number().isType(value)) return value;\n\n//     value = moment(originalValue, formats, parseStrict);\n//     return value.isValid() ? value : Nan;\n//   });\n// }\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const party =  () => ( {\n  \"plantNo\": \"\",\n  \"address\": \"\",\n  \"nickName\": \"\",\n  \"bankMaster\": \"\",\n  \"bankM\": \"\",\n  \"balance\": \"\",\n  \"phone\": \"\",\n  \"partyName\": \"\",\n  \"groupMaster\": \"\",\n  \"groupM\": \"\",\n  \"partyBankAccNo\": \"\",\n  \"plantName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const partySchema = Yup.object().shape({\n      \n    partyName: Yup.string()\n                .required('This is a Required Field')    \n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { party } from './model'\n\nexport const getIsFetchingParty = (state, props) => state.party.params.isFetching\nexport const getIsPartyFetched = (state, props) => state.party.params.partyFetched\nexport const getSavedPartyId = (state, props) => state.party.params.savedPartyId\nexport const getPartyList = (state, prop) => state.party.byId\nexport const getPartyObjById = (state, id) => state.party.byId[id]\nexport const getNotification = (state, id) => state.party.notifications[id]\n\nexport const getParty = (state, props) => {\n    if (props.match.path === '/party/create') {\n        return party()\n    }\n    if (props.match.path === '/party/edit/:id') {\n        let id = props.match.params.id\n        let obj = cloneDeep(state.party.byId[id])\n        console.log(obj)\n        let bankId = obj.bankMaster ? obj.bankMaster.id : 0\n        obj.bankM = bankId\n        let groupId = obj.groupMaster ? obj.groupMaster.id : 0\n        obj.groupM = groupId\n        return obj\n    }\n}\n\nexport const getPartyParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/party/create') {\n        params.title = state.party.params.createTitle\n        params.submitButtonText = state.party.params.createSubmitButtonText\n    } else if (props.match.path === '/party/edit/:id') {\n        params.title = state.party.params.editTitle\n        params.submitButtonText = state.party.params.editSubmitButtonText\n    }\n    return params\n}\n\n\nexport const selectParty = createSelector(\n    getPartyList,\n    party => {\n        const keys = Object.keys(party)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: party[key].partyName } })\n        return obj\n    }\n)","export const CREATE_PARTY = 'CREATE_PARTY'\nexport const SAVED_PARTY = 'SAVED_PARTY'\nexport const EDIT_PARTY = 'EDIT_PARTY'\nexport const EDITED_PARTY = 'EDITED_PARTY'\nexport const FETCH_PARTY = 'FETCH_PARTY'\nexport const FETCHED_PARTY = 'FETCHED_PARTY'\nexport const FETCH_PARTY_BY_ID = 'FETCH_PARTY_BY_ID'\nexport const FETCHED_PARTY_BY_ID = 'FETCHED_PARTY_BY_ID'\nexport const NOTIFICATION_DONE_PARTY = 'NOTIFICATION_DONE_PARTY'\nexport const DELETE_PARTY = 'DELETE_PARTY'\nexport const DELETED_PARTY = 'DELETED_PARTY'\nexport const PRINT_PARTY = 'PRINT_PARTY'\n","import * as type from './types'\n\nexport function createParty(party) {\n    return {\n        type: type.CREATE_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function savedParty(party) {\n    return {\n        type: type.SAVED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function editParty(party) {\n    return {\n        type: type.EDIT_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function editedParty(party) {\n    return {\n        type: type.EDITED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchParty() {\n    return {\n        type: type.FETCH_PARTY\n    };\n}\n\nexport function fetchedParty(party) {\n    return {\n        type: type.FETCHED_PARTY,\n        payload: party\n    };\n}\n\n\nexport function fetchPartyById(party) {\n    return {\n        type: type.FETCH_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function fetchedPartyById(party) {\n    return {\n        type: type.FETCHED_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function setNotifyDoneParty(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PARTY,\n        payload: props\n    };\n}\n\n\nexport function deleteParty(party) {\n    return {\n        type: type.DELETE_PARTY,\n        payload: party\n    };\n}\n\nexport function deletedParty(party) {\n    return {\n        type: type.DELETED_PARTY,\n        payload: party\n    };\n}\n\nexport function partyPrint(){\n    return {\n        type: type.PRINT_PARTY\n    };\n}","\nexport const parseError = (err) => {\n    return  {\n        url : err.config.url,\n        headers : err.config.headers,\n        data : err.response.data,\n        status : err.status,\n        statusText : err.statusText,\n        message : err.message,\n        stack : err.stack\n    };\n}\n\nexport const handlError = (action, err) => {\n    return ({\n        type : 'SERVER_ERROR',\n        payload : action.payload,\n        fromAction : action.type,\n        txn : 'err',\n        err : err\n    })\n}\n\n","export default URL = 'http://localhost:8080/dairyfarm'","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsPartyFetched } from './selectors'\nimport { savedParty, fetchedParty, fetchedPartyById, deletedParty, editedParty } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Party \n\nfunction* createParty() {\n    yield takeEvery('CREATE_PARTY',saveParty)\n  }\n\nfunction* saveParty(action){\n  const { response, error } = yield call(savePartyAPI, action.payload)\n  if (response) yield put (savedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction savePartyAPI(data) {\n    return axios.post(URL+'/partymaster/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Party \n\nfunction* editParty() {\n  yield takeEvery('EDIT_PARTY',saveEditedParty)\n}\n\nfunction* saveEditedParty(action){\n  const { response, error } = yield call(editPartyAPI, action.payload)  \n  if (response) yield put (editedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editPartyAPI(data) {\n  return axios.post(URL+'/partymaster/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Party by ID\n\nfunction* fetchPartyById() {\n  yield takeEvery('FETCH_PARTY_BY_ID',saveFetchedPartyById)\n}\n\nfunction* saveFetchedPartyById(action){\n  const { response, error } = yield call(fetchPartyByIdAPI, action.payload)  \n  if (response) yield put (fetchedPartyById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchPartyByIdAPI(data) {\n  let id = data\n  return axios.get(URL+'/partymaster/fetch/'+ id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchParty() {\n\n  yield takeEvery('FETCH_PARTY',requestParty)\n\n}\n  \nfunction* requestParty(){\n  const isPartyFetched = yield select(getIsPartyFetched);\n  if(!isPartyFetched){\n    let { data } = yield call(requestPartyAPI)\n    yield put (fetchedParty(data.data))\n  }\n}\n\nfunction requestPartyAPI(data) {\n  return axios.get(URL+'/partymaster/fetch/all', {crossDomain: true})\n}\n\n//#endregion\n\n//#region Saga for Delete Party \n\nfunction* deleteParty() {\n  yield takeEvery('DELETE_PARTY',saveDeleteParty)\n}\n\nfunction* saveDeleteParty(action){\n  const { response, error } = yield call(deletePartyAPI, action.payload)\n  if (response) yield put (deletedParty({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction deletePartyAPI(data) {\n  return axios.post(URL+'/partymaster/delete', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Post Party Print\n\nfunction* postPartyPrint() {\n  yield takeEvery('PRINT_PARTY', sendPartyPrint)\n}\n\nfunction* sendPartyPrint() {\n  yield call(sendPartyPrintAPI)\n}\n\nfunction sendPartyPrintAPI() {\n  window.open(URL+'/report/partyprintlist', '_blank')\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.party(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.partyEnd()\n}\n\nexport default function* partySaga() {\n    yield all([\n        createParty(),\n        fetchParty(),\n        editParty(),\n        deleteParty(),\n        fetchPartyById(),\n        postPartyPrint()\n    ])\n  }  ","import * as Yup from 'yup'\n\nexport const bank =  () => ({\n    bankName: \"\"\n})\n\nexport const bankSchema = Yup.object().shape({\n\n    bankName: Yup.string()\n                .required('This is a Required Field')\n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { bank } from './model'\n\nexport const getIsFetchingBank = (state, props) => state.bank.params.isFetching;\nexport const getIsBankFetched = (state, props) => state.bank.params.bankFetched;\nexport const getSavedBankId = (state, props) => state.bank.params.savedBankId;\nexport const getBankList = (state, prop) => state.bank.byId\nexport const getBankById = (state, id) => state.bank.byId[id]\nexport const getNotification = (state, id) => state.bank.notifications[id]\n\nexport const getBank = (state, props) => {\n    if(props.match.path==='/bank/create'){\n        return bank()\n    }\n    if(props.match.path==='/bank/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.bank.byId[_id]);\n        return obj\n    }\n}\n\nexport const getBankParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/bank/create'){ \n        params.title = state.bank.params.createTitle\n        params.submitButtonText = state.bank.params.createSubmitButtonText        \n    }else if(props.match.path==='/bank/edit/:id'){ \n        params.title = state.bank.params.editTitle\n        params.submitButtonText = state.bank.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectBank = createSelector(\n    getBankList,\n    bank => { \n        const keys = Object.keys(bank)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : bank[key].bankName }})\n        return obj\n    }\n)","export const CREATE_BANK = 'CREATE_BANK'\nexport const SAVED_BANK = 'SAVED_BANK'\nexport const EDIT_BANK = 'EDIT_BANK'\nexport const EDITED_BANK = 'EDITED_BANK'\nexport const FETCH_BANK = 'FETCH_BANK'\nexport const FETCHED_BANK = 'FETCHED_BANK'\nexport const FETCH_BANK_BY_ID = 'FETCH_BANK_BY_ID'\nexport const FETCHED_BANK_BY_ID = 'FETCHED_BANK_BY_ID'\nexport const NOTIFICATION_DONE_BANK = 'NOTIFICATION_DONE_BANK'\nexport const DELETE_BANK = 'DELETE_BANK'\nexport const DELETED_BANK = 'DELETED_BANK'\n","import * as type from './types'\n\nexport function createBank(bank) {\n    return {\n        type: type.CREATE_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function savedBank(bank) {\n    return {\n        type: type.SAVED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function editBank(bank) {\n    return {\n        type: type.EDIT_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function editedBank(bank) {\n    return {\n        type: type.EDITED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchBank() {\n    return {\n        type: type.FETCH_BANK\n    };\n}\n\nexport function fetchedBank(bank) {\n    return {\n        type: type.FETCHED_BANK,\n        payload: bank\n    };\n}\n\n\nexport function fetchBankById(bank) {\n    return {\n        type: type.FETCH_BANK_BY_ID,\n        payload: bank\n    };\n}\n\nexport function fetchedBankById(bank) {\n    return {\n        type: type.FETCHED_BANK_BY_ID,\n        payload: bank\n    };\n}\n\n\nexport function setNotifyDoneBank(props) {\n    return {\n        type: type.NOTIFICATION_DONE_BANK,\n        payload: props\n    };\n}\n\n\nexport function deleteBank(bank) {\n    return {\n        type: type.DELETE_BANK,\n        payload: bank\n    };\n}\n\nexport function deletedBank(bank) {\n    return {\n        type: type.DELETED_BANK,\n        payload: bank\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsBankFetched } from './selectors'\nimport { savedBank, fetchedBank, fetchedBankById, deletedBank, editedBank } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Bank \n\nfunction* createBank() {\n  yield takeEvery('CREATE_BANK', saveBank)\n}\n\nfunction* saveBank(action) {\n  const { response, error } = yield call(saveBankAPI, action.payload)\n  if (response) yield put(savedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveBankAPI(data) {\n  return axios.post(URL + '/bankmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Bank \n\nfunction* editBank() {\n  yield takeEvery('EDIT_BANK', saveEditedBank)\n}\n\nfunction* saveEditedBank(action) {\n  const { response, error } = yield call(editBankAPI, action.payload)\n  console.log(response)\n  if (response) yield put(editedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editBankAPI(data) {\n  return axios.post(URL + '/bankmaster/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Bank by ID\n\nfunction* fetchBankById() {\n  yield takeEvery('FETCH_BANK_BY_ID', saveFetchedBankById)\n}\n\nfunction* saveFetchedBankById(action) {\n  const { response, error } = yield call(fetchBankByIdAPI, action.payload)\n  if (response) yield put(fetchedBankById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchBankByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/bankmaster/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchBank() {\n\n  yield takeEvery('FETCH_BANK', requestBank)\n\n}\n\nfunction* requestBank() {\n  const isBankFetched = yield select(getIsBankFetched);\n  if (!isBankFetched) {\n    let { data } = yield call(requestBankAPI)\n    yield put(fetchedBank(data.data))\n  }\n\n}\n\nfunction requestBankAPI() {\n  return axios.get(URL + '/bankmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Bank \n\nfunction* deleteBank() {\n  yield takeEvery('DELETE_BANK', saveDeleteBank)\n}\n\nfunction* saveDeleteBank(action) {\n  const { response, error } = yield call(deleteBankAPI, action.payload)\n  if (response) yield put(deletedBank({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteBankAPI(data) {\n  return axios.post(URL + '/bankmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* bankSaga() {\n  yield all([\n    createBank(),\n    fetchBank(),\n    editBank(),\n    fetchBankById(),\n    deleteBank()\n  ])\n}  ","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const group =  () => ({\n  \"groupName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const groupSchema = Yup.object().shape({\n\n  groupName: Yup.string()\n            .required('This is a Required Field')\n\n});\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { group } from './model'\n\nexport const getIsFetchingGroup = (state, props) => state.group.params.isFetching\nexport const getIsGroupFetched = (state, props) => state.group.params.groupFetched\nexport const getSavedGroupId = (state, props) => state.group.params.savedGroupId\nexport const getGroupList = (state, prop) => state.group.byId\nexport const getGroupById = (state, id) => state.group.byId[id]\nexport const getNotification = (state, id) => state.group.notifications[id]\n\nexport const getGroup = (state, props) => {\n    if (props.match.path === '/group/create') {\n        return group()\n    }\n    if (props.match.path === '/group/edit/:id') {\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.group.byId[_id]);\n        return obj\n    }\n}\nexport const getGroupParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/group/create') {\n        params.title = state.group.params.createTitle\n        params.submitButtonText = state.group.params.createSubmitButtonText\n    } else if (props.match.path === '/group/edit/:id') {\n        params.title = state.group.params.editTitle\n        params.submitButtonText = state.group.params.editSubmitButtonText\n    }\n    return params\n}\n\nexport const selectGroup = createSelector(\n    getGroupList,\n    group => {\n        const keys = Object.keys(group)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: group[key].groupName } })\n        return obj\n    }\n)","export const CREATE_GROUP = 'CREATE_GROUP'\nexport const SAVED_GROUP = 'SAVED_GROUP'\nexport const EDIT_GROUP = 'EDIT_GROUP'\nexport const EDITED_GROUP = 'EDITED_GROUP'\nexport const FETCH_GROUP = 'FETCH_GROUP'\nexport const FETCHED_GROUP = 'FETCHED_GROUP'\nexport const FETCH_GROUP_BY_ID = 'FETCH_GROUP_BY_ID'\nexport const FETCHED_GROUP_BY_ID = 'FETCHED_GROUP_BY_ID'\nexport const NOTIFICATION_DONE_GROUP = 'NOTIFICATION_DONE_GROUP'\nexport const DELETE_GROUP = 'DELETE_GROUP'\nexport const DELETED_GROUP = 'DELETED_GROUP'\n\n","import * as type from './types'\n\nexport function createGroup(group) {\n    return {\n        type: type.CREATE_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function savedGroup(group) {\n    return {\n        type: type.SAVED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function editGroup(group) {\n    return {\n        type: type.EDIT_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function editedGroup(group) {\n    return {\n        type: type.EDITED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchGroup() {\n    return {\n        type: type.FETCH_GROUP\n    };\n}\n\nexport function fetchedGroup(group) {\n    return {\n        type: type.FETCHED_GROUP,\n        payload: group\n    };\n}\n\n\nexport function fetchGroupById(group) {\n    return {\n        type: type.FETCH_GROUP_BY_ID,\n        payload: group\n    };\n}\n\nexport function fetchedGroupById(group) {\n    return {\n        type: type.FETCHED_GROUP_BY_ID,\n        payload: group\n    };\n}\n\n\nexport function setNotifyDoneGroup(props) {\n    return {\n        type: type.NOTIFICATION_DONE_GROUP,\n        payload: props\n    };\n}\n\nexport function deleteGroup(group) {\n    return {\n        type: type.DELETE_GROUP,\n        payload: group\n    };\n}\n\nexport function deletedGroup(group) {\n    return {\n        type: type.DELETED_GROUP,\n        payload: group\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsGroupFetched } from './selectors'\nimport { savedGroup, fetchedGroup, fetchedGroupById, deletedGroup, editedGroup } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Group \n\nfunction* createGroup() {\n  yield takeEvery('CREATE_GROUP', saveGroup)\n}\n\nfunction* saveGroup(action) {\n  const { response, error } = yield call(saveGroupAPI, action.payload)\n  if (response) yield put(savedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Group \n\nfunction* editGroup() {\n  yield takeEvery('EDIT_GROUP', saveEditedGroup)\n}\n\nfunction* saveEditedGroup(action) {\n  const { response, error } = yield call(editGroupAPI, action.payload)\n  if (response) yield put(editedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/update/', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Group by ID\n\nfunction* fetchGroupById() {\n  yield takeEvery('FETCH_GROUP_BY_ID', saveFetchedGroupById)\n}\n\nfunction* saveFetchedGroupById(action) {\n  const { response, error } = yield call(fetchGroupByIdAPI, action.payload)\n  if (response) yield put(fetchedGroupById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchGroupByIdAPI(data) {\n  let _id = data\n  return axios.get(URL + '/groupmaster/fetch/' + _id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchGroup() {\n\n  yield takeEvery('FETCH_GROUP', requestGroup)\n\n}\n\nfunction* requestGroup() {\n  const isGroupFetched = yield select(getIsGroupFetched);\n  if (!isGroupFetched) {\n    let { data } = yield call(requestGroupAPI)\n    yield put(fetchedGroup(data.data))\n  }\n}\n\nfunction requestGroupAPI() {\n  return axios.get(URL + '/groupmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Group \n\nfunction* deleteGroup() {\n  yield takeEvery('DELETE_GROUP', saveDeleteGroup)\n}\n\nfunction* saveDeleteGroup(action) {\n  const { response, error } = yield call(deleteGroupAPI, action.payload)\n  if (response) yield put(deletedGroup({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* groupSaga() {\n  yield all([\n    createGroup(),\n    fetchGroup(),\n    editGroup(),\n    deleteGroup(),\n    fetchGroupById()\n  ])\n}  ","export const CREATE_FINYEAR = 'CREATE_FINYEAR'\nexport const SAVED_FINYEAR = 'SAVED_FINYEAR'\nexport const EDIT_FINYEAR = 'EDIT_FINYEAR'\nexport const EDITED_FINYEAR = 'EDITED_FINYEAR'\nexport const FETCH_FINYEAR = 'FETCH_FINYEAR'\nexport const FETCHED_FINYEAR = 'FETCHED_FINYEAR'\nexport const FETCH_ACTIVE_YEAR = 'FETCH_ACTIVE_YEAR'\nexport const FETCHED_ACTIVE_YEAR = 'FETCHED_ACTIVE_YEAR'\nexport const FETCH_FINYEAR_BY_ID = 'FETCH_FINYEAR_BY_ID'\nexport const FETCHED_FINYEAR_BY_ID = 'FETCHED_FINYEAR_BY_ID'\nexport const NOTIFICATION_DONE_FINYEAR = 'NOTIFICATION_DONE_FINYEAR'\n","import * as type from './types'\n\nexport function createFinYear(finYear) {\n    return {\n        type : type.CREATE_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function savedFinYear(finYear) {\n    return {\n        type : type.SAVED_FINYEAR,\n        payload : finYear.data.data,        \n        txn: finYear.data.type,\n        msg: finYear.data.msg,\n        diff : true\n    };\n}\n\nexport function editFinYear(finYear) {\n    return {\n        type : type.EDIT_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchFinYear(finYear) {\n    return {\n        type : type.FETCH_FINYEAR,\n        payload: finYear\n    };\n}\n\nexport function fetchedFinYear(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR,\n        payload : finYear\n    };\n}\n\n\nexport function fetchActiveYear(finYear) {\n    return {\n        type : type.FETCH_ACTIVE_YEAR,\n        payload: finYear\n    };\n}\n\nexport function fetchedActiveYear(finYear) {\n    return {\n        type : type.FETCHED_ACTIVE_YEAR,\n        payload : finYear\n    };\n}\n\n\nexport function fetchFinYearById(finYear) {\n    return {\n        type : type.FETCH_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function fetchedFinYearById(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function setNotifyDoneFinYear(props) {\n    return {\n        type : type.NOTIFICATION_DONE_FINYEAR,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedFinYear, fetchedFinYear, fetchedFinYearById, fetchedActiveYear } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create FinYear \n\nfunction* createFinYear() {\n    yield takeEvery('CREATE_FINYEAR',saveFinYear)\n  }\n\nfunction* saveFinYear(action){\n  const { response, error } = yield call(saveFinYearAPI, action.payload)\n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveFinYearAPI(data) {\n    return axios.post(URL+'/sessionperiod/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited FinYear \n\nfunction* editFinYear() {\n  yield takeEvery('EDIT_FINYEAR',saveEditedFinYear)\n}\n\nfunction* saveEditedFinYear(action){\n  const { response, error } = yield call(editFinYearAPI, action.payload)  \n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editFinYearAPI(data) {\n  return axios.post(URL+'/sessionperiod/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting FinYear by ID\n\nfunction* fetchFinYearById() {\n  yield takeEvery('FETCH_FINYEAR_BY_ID',saveFetchedFinYearById)\n}\n\nfunction* saveFetchedFinYearById(action){\n  const { response, error } = yield call(fetchFinYearByIdAPI, action.payload)  \n  if (response) yield put (fetchedFinYearById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchFinYearByIdAPI(data) {\n  let id = data\n  return axios.post(URL+'sessionperiod/fetch/'+id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchFinYear() {\n\n  yield takeEvery('FETCH_FINYEAR',requestFinYear)\n\n}\n  \nfunction* requestFinYear(action){\n\n  let { data } = yield call(requestFinYearAPI, action.payload)\n  yield put (fetchedFinYear(data.data))\n\n}\n\nfunction requestFinYearAPI(data) {\n  return axios.get(URL+'/sessionperiod/fetch/all', data,  {crossDomain: true})\n}\n\n//#endregion\n\n\n//#region Saga for List Tasks \n\nfunction* fetchActiveYear() {\n\n  yield takeEvery('FETCH_ACTIVE_YEAR',requestActiveYear)\n\n}\n  \nfunction* requestActiveYear(action){\n  let { data } = yield call(requestActiveYearAPI, action.payload)\n  yield put (fetchedActiveYear(data))\n\n}\n\nfunction requestActiveYearAPI(data) {\n  return axios.get(URL+'/sessionperiod/fetch/activesession', data,  {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* finYearSaga() {\n    yield all([\n        createFinYear(),\n        fetchFinYear(),\n        editFinYear(),\n        fetchFinYearById(),\n        fetchActiveYear()\n    ])\n  }  ","export const CREATE_STANDARD = 'CREATE_STANDARD'\nexport const SAVED_STANDARD = 'SAVED_STANDARD'\nexport const EDIT_STANDARD = 'EDIT_STANDARD'\nexport const EDITED_STANDARD = 'EDITED_STANDARD'\nexport const FETCH_STANDARD = 'FETCH_STANDARD'\nexport const FETCHED_STANDARD = 'FETCHED_STANDARD'\nexport const FETCH_STANDARD_BY_ID = 'FETCH_STANDARD_BY_ID'\nexport const FETCHED_STANDARD_BY_ID = 'FETCHED_STANDARD_BY_ID'\nexport const NOTIFICATION_DONE_STANDARD = 'NOTIFICATION_DONE_STANDARD'\n","import * as type from './types'\n\nexport function createStandard(standard) {\n    return {\n        type : type.CREATE_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function savedStandard(standard) {\n    return {\n        type : type.SAVED_STANDARD,\n        payload : standard.data.data,\n        txn: standard.data.type,\n        msg: standard.data.msg,\n        diff : true\n    };\n}\n\nexport function editStandard(standard) {\n    return {\n        type : type.EDIT_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchStandard(params) {\n    return {\n        type : type.FETCH_STANDARD,\n        payload : params\n    };\n}\n\nexport function fetchedStandard(standard) {\n    return {\n        type : type.FETCHED_STANDARD,\n        payload : standard\n    };\n}\n\n\nexport function fetchStandardById(standard) {\n    return {\n        type : type.FETCH_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function fetchedStandardById(standard) {\n    return {\n        type : type.FETCHED_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function setNotifyDoneStandard(props) {\n    return {\n        type : type.NOTIFICATION_DONE_STANDARD,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedStandard, fetchedStandard, fetchedStandardById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Standard \n\nfunction* createStandard() {\n    yield takeEvery('CREATE_STANDARD',saveStandard)\n  }\n\nfunction* saveStandard(action){\n  const { response, error } = yield call(saveStandardAPI, action.payload)\n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveStandardAPI(data) {\n    return axios.post(URL+'/standard/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Standard \n\nfunction* editStandard() {\n  yield takeEvery('EDIT_STANDARD',saveEditedStandard)\n}\n\nfunction* saveEditedStandard(action){\n  const { response, error } = yield call(editStandardAPI, action.payload)  \n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editStandardAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Standard by ID\n\nfunction* fetchStandardById() {\n  yield takeEvery('FETCH_STANDARD_BY_ID',saveFetchedStandardById)\n}\n\nfunction* saveFetchedStandardById(action){\n  const { response, error } = yield call(fetchStandardByIdAPI, action.payload)  \n  if (response) yield put (fetchedStandardById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchStandardByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/standard/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchStandard() {\n\n  yield takeEvery('FETCH_STANDARD',requestStandard)\n\n}\n  \nfunction* requestStandard(action){\n\n  let { data } = yield call(requestStandardAPI, action.payload)\n  yield put (fetchedStandard(data.data))\n\n}\n\nfunction requestStandardAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* standardSaga() {\n    yield all([\n        createStandard(),\n        fetchStandard(),\n        editStandard(),\n        fetchStandardById()\n    ])\n  }  ","export const CREATE_MILKRATES = 'CREATE_MILKRATES'\nexport const SAVED_MILKRATES = 'SAVED_MILKRATES'\nexport const EDIT_MILKRATES = 'EDIT_MILKRATES'\nexport const EDITED_MILKRATES = 'EDITED_MILKRATES'\nexport const FETCH_MILKRATES = 'FETCH_MILKRATES'\nexport const FETCHED_MILKRATES = 'FETCHED_MILKRATES'\nexport const FETCH_MILKRATES_BY_ID = 'FETCH_MILKRATES_BY_ID'\nexport const FETCHED_MILKRATES_BY_ID = 'FETCHED_MILKRATES_BY_ID'\nexport const NOTIFICATION_DONE_MILKRATES = 'NOTIFICATION_DONE_MILKRATES'\n","import * as type from './types'\n\nexport function createMilkRates(milkRates) {\n    return {\n        type : type.CREATE_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function savedMilkRates(milkRates) {\n    return {\n        type : type.SAVED_MILKRATES,\n        payload : milkRates.data.data,\n        txn: milkRates.data.type,\n        msg: milkRates.data.msg,\n        diff : true\n    };\n}\n\nexport function editMilkRates(milkRates) {\n    return {\n        type : type.EDIT_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMilkRates(params) {\n    return {\n        type : type.FETCH_MILKRATES,\n        payload : params\n    };\n}\n\nexport function fetchedMilkRates(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES,\n        payload : milkRates\n    };\n}\n\n\nexport function fetchMilkRatesById(milkRates) {\n    return {\n        type : type.FETCH_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function fetchedMilkRatesById(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function setNotifyDoneMilkRates(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MILKRATES,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMilkRates, fetchedMilkRates, fetchedMilkRatesById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create MilkRates \n\nfunction* createMilkRates() {\n    yield takeEvery('CREATE_MILKRATES',saveMilkRates)\n  }\n\nfunction* saveMilkRates(action){\n  const { response, error } = yield call(saveMilkRatesAPI, action.payload)\n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveMilkRatesAPI(data) {\n    return axios.post(URL+'/milkRates/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited MilkRates \n\nfunction* editMilkRates() {\n  yield takeEvery('EDIT_MILKRATES',saveEditedMilkRates)\n}\n\nfunction* saveEditedMilkRates(action){\n  const { response, error } = yield call(editMilkRatesAPI, action.payload)  \n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMilkRatesAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting MilkRates by ID\n\nfunction* fetchMilkRatesById() {\n  yield takeEvery('FETCH_MILKRATES_BY_ID',saveFetchedMilkRatesById)\n}\n\nfunction* saveFetchedMilkRatesById(action){\n  const { response, error } = yield call(fetchMilkRatesByIdAPI, action.payload)  \n  if (response) yield put (fetchedMilkRatesById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchMilkRatesByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/milkRates/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMilkRates() {\n\n  yield takeEvery('FETCH_MILKRATES',requestMilkRates)\n\n}\n  \nfunction* requestMilkRates(action){\n\n  let { data } = yield call(requestMilkRatesAPI, action.payload)\n  yield put (fetchedMilkRates(data.data))\n\n}\n\nfunction requestMilkRatesAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* milkRatesSaga() {\n    yield all([\n        createMilkRates(),\n        fetchMilkRates(),\n        editMilkRates(),\n        fetchMilkRatesById()\n    ])\n  }  ","export const CREATE_PURCHASE = 'CREATE_PURCHASE'\nexport const SAVED_PURCHASE = 'SAVED_PURCHASE'\nexport const EDIT_PURCHASE = 'EDIT_PURCHASE'\nexport const EDITED_PURCHASE = 'EDITED_PURCHASE'\nexport const FETCH_PURCHASE = 'FETCH_PURCHASE'\nexport const FETCH_PURCHASE_PERIOD = 'FETCH_PURCHASE_PERIOD'\nexport const FETCHED_PURCHASE = 'FETCHED_PURCHASE'\nexport const FETCH_ALL_PURCHASE = 'FETCH_ALL_PURCHASE'\nexport const FETCHED_ALL_PURCHASE = 'FETCHED_ALL_PURCHASE'\nexport const FETCH_PURCHASE_BY_ID = 'FETCH_PURCHASE_BY_ID'\nexport const FETCHED_PURCHASE_BY_ID = 'FETCHED_PURCHASE_BY_ID'\nexport const NOTIFICATION_DONE_PURCHASE = 'NOTIFICATION_DONE_PURCHASE'\nexport const DELETE_PURCHASE = 'DELETE_PURCHASE'\nexport const DELETED_PURCHASE = 'DELETED_PURCHASE'\nexport const PRINT_PURCHASE = 'PRINT_PURCHASE'\nexport const MULTIPLE_PRINT_PURCHASE = 'MULTIPLE_PRINT_PURCHASE'\nexport const MULTIPLE_DELETE_PURCHASE = 'MULTIPLE_DELETE_PURCHASE'\nexport const MULTIPLE_DELETED_PURCHASE = 'MULTIPLE_DELETED_PURCHASE'\nexport const FETCH_MAX_BILLNO = 'FETCH_MAX_BILLNO'\nexport const FETCHED_MAX_BILLNO = 'FETCHED_MAX_BILLNO'\nexport const CLEAR_SAVED_ID = 'CLEAR_SAVED_ID'\n\n\n","import * as type from './types'\n\nexport function createPurchase(purchase) {\n    return {\n        type: type.CREATE_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function savedPurchase(purchase) {\n    return {\n        type: type.SAVED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        diff: true\n    };\n}\n\nexport function editPurchase(purchase) {\n    return {\n        type: type.EDIT_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function updatedPurchase(purchase) {\n    return {\n        type: type.EDITED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        removeid: purchase.removeid,\n        diff: true\n    };\n}\n\nexport function fetchPurchase(link) {\n    return {\n        type: type.FETCH_PURCHASE,\n        payload: link\n    };\n}\n\nexport function fetchPurchasePeriod(link) {\n    return {\n        type: type.FETCH_PURCHASE_PERIOD,\n        payload: link\n    };\n}\n\nexport function fetchedPurchase(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function fetchAllPurchase() {\n    return {\n        type: type.FETCH_ALL_PURCHASE\n    };\n}\n\nexport function fetchedAllPurchase(purchase) {\n    return {\n        type: type.FETCHED_ALL_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function fetchMaxBillNo() {\n    return {\n        type: type.FETCH_MAX_BILLNO\n    };\n}\n\nexport function fetchedMaxBillNo(purchase) {\n    return {\n        type: type.FETCHED_MAX_BILLNO,\n        payload: purchase\n    };\n}\n\nexport function fetchPurchaseById(purchase) {\n    return {\n        type: type.FETCH_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\nexport function fetchedPurchaseById(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\n\nexport function setNotifyDonePurchase(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PURCHASE,\n        payload: props\n    };\n}\n\n\nexport function deletePurchase(purchase) {\n    return {\n        type: type.DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedPurchase(purchase) {\n    return {\n        type: type.DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function postPrintPurchase(id) {\n    return {\n        type: type.PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function postMultiplePrintPurchase(id) {\n    return {\n        type: type.MULTIPLE_PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function deleteMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function clearSavedId() {\n    return {\n        type: type.CLEAR_SAVED_ID\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedPurchase, fetchedPurchase, fetchedPurchaseById, deletedPurchase, updatedPurchase, deletedMultiPurchase, fetchedAllPurchase, fetchMaxBillNo, fetchedMaxBillNo } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Purchase \n\nfunction* createPurchase() {\n  yield takeEvery('CREATE_PURCHASE', savePurchase)\n}\n\nfunction* savePurchase(action) {\n  const { response, error } = yield call(savePurchaseAPI, action.payload)\n  if (response){ \n    yield put(savedPurchase({ data: response.data, msg: response.msg, type: response.type }))\n    yield put (fetchMaxBillNo())\n  }\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction savePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Purchase \n\nfunction* editPurchase() {\n  yield takeEvery('EDIT_PURCHASE', saveEditedPurchase)\n}\n\nfunction* saveEditedPurchase(action) {\n  const { response, error } = yield call(editPurchaseAPI, action.payload)\n  console.log(response)\n  if (response) {\n    yield put(updatedPurchase({ data: response.data, msg: response.msg, type: response.type, removeid: action.payload.id }))\n  }\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Purchase by ID\n\nfunction* fetchPurchaseById() {\n  yield takeEvery('FETCH_PURCHASE_BY_ID', saveFetchedPurchaseById)\n}\n\nfunction* saveFetchedPurchaseById(action) {\n  const { response, error } = yield call(fetchPurchaseByIdAPI, action.payload)\n  if (response) yield put(fetchedPurchaseById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchPurchaseByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/purchasetxn/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchPurchase() {\n\n  yield takeEvery('FETCH_PURCHASE', requestPurchase)\n\n}\n\nfunction* requestPurchase(action) {\n  let { data } = yield call(requestPurchaseAPI, action.payload)\n  yield put(fetchedPurchase(data.data))\n}\n\nfunction requestPurchaseAPI(data) {\n  return axios.get(URL + '/purchasetxn/fetch/'+data, { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchPurchasePeriod() {\n\n  yield takeEvery('FETCH_PURCHASE_PERIOD', requestPurchasePeriod)\n\n}\n\nfunction* requestPurchasePeriod(action) {\n  let { data } = yield call(requestPurchasePeriodAPI, action.payload)\n  yield put(fetchedPurchase(data.data))\n}\n\nfunction requestPurchasePeriodAPI(data) {\n  return axios.get(URL + '/purchasetxn/fetchbyperiod/'+data, { crossDomain: true })\n}\n\n//#endregion\n\n\n//#region Saga for List Tasks \n\nfunction* fetchAllPurchase() {\n\n  yield takeEvery('FETCH_ALL_PURCHASE', requestAllPurchase)\n\n}\n\nfunction* requestAllPurchase() {\n  let { data } = yield call(requestAllPurchaseAPI)\n  yield put(fetchedAllPurchase(data.data))\n}\n\nfunction requestAllPurchaseAPI() {\n  return axios.get(URL + '/purchasetxn/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Max Bill No \n\nfunction* fetchMaxBillNoR() {\n\n  yield takeEvery('FETCH_MAX_BILLNO', requestMaxBillNo)\n\n}\n\nfunction* requestMaxBillNo() {\n  let { data } = yield call(requestMaxBillNoAPI)\n  yield put(fetchedMaxBillNo(data))\n}\n\nfunction requestMaxBillNoAPI() {\n  return axios.get(URL + '/purchasetxn/getmaxbillno', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Purchase \n\nfunction* deletePurchase() {\n  yield takeEvery('DELETE_PURCHASE', saveDeletePurchase)\n}\n\nfunction* saveDeletePurchase(action) {\n  const { response, error } = yield call(deletePurchaseAPI, action.payload)\n  if (response) yield put(deletedPurchase({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deletePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Multiple Delete Purchase \n\nfunction* deleteMultiPurchase() {\n  yield takeEvery('MULTIPLE_DELETE_PURCHASE', saveDeleteMultiPurchase)\n}\n\nfunction* saveDeleteMultiPurchase(action) {\n  const { response, error } = yield call(deleteMultiPurchaseAPI, action.payload)\n  if (response) yield put(deletedMultiPurchase({ id: action.payload, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteMultiPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/multidelete/'+data, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for Post Purchase Print\n\nfunction* postPurchasePrint() {\n  yield takeEvery('PRINT_PURCHASE', sendPurchasePrint)\n}\n\nfunction* sendPurchasePrint(action) {\n  yield call(sendPurchasePrintAPI, action.payload)\n}\n\nfunction sendPurchasePrintAPI(data) {\n  window.open(URL+'/invoice/print/'+data, '_blank')\n}\n\n//#endregion\n\n\n\n//#region Saga for Post Purchase Multiple Print\n\nfunction* postPurchaseMultiPrint() {\n  yield takeEvery('MULTIPLE_PRINT_PURCHASE', sendPurchaseMultiPrint)\n}\n\nfunction* sendPurchaseMultiPrint(action) {\n  yield call(sendPurchaseMultiPrintAPI, action.payload)\n}\n\nfunction sendPurchaseMultiPrintAPI(data) {\n  window.open(URL+'/invoice/multiprint/'+data, '_blank')\n}\n\n//#endregion\n\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* purchaseSaga() {\n  yield all([\n    createPurchase(),\n    fetchPurchase(),\n    fetchPurchasePeriod(),\n    fetchAllPurchase(),\n    editPurchase(),\n    fetchPurchaseById(),\n    deletePurchase(),\n    postPurchasePrint(),\n    postPurchaseMultiPrint(),\n    deleteMultiPurchase(),\n    fetchMaxBillNoR()\n  ])\n}  ","export const SAVED_MISC = 'SAVED_MISC'\nexport const EDIT_MISC = 'EDIT_MISC'\nexport const FETCH_MISC = 'FETCH_MISC'\nexport const FETCHED_MISC = 'FETCHED_MISC'\nexport const NOTIFICATION_DONE_MISC = 'NOTIFICATION_DONE_MISC'\n","import * as type from './types'\n\nexport function savedMisc(misc) {\n    return {\n        type : type.SAVED_MISC,\n        payload : misc.data.data,\n        txn: misc.data.type,\n        msg: misc.data.msg,\n        diff : true\n    };\n}\n\nexport function editMisc(misc) {\n    return {\n        type : type.EDIT_MISC,\n        payload : misc,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMisc(params) {\n    return {\n        type : type.FETCH_MISC,\n        payload : params\n    };\n}\n\nexport function fetchedMisc(misc) {\n    return {\n        type : type.FETCHED_MISC,\n        payload : misc\n    };\n}\n\n\nexport function setNotifyDoneMisc(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MISC,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMisc, fetchedMisc, fetchedMiscById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Edited Misc \n\nfunction* editMisc() {\n  yield takeEvery('EDIT_MISC',saveEditedMisc)\n}\n\nfunction* saveEditedMisc(action){\n  const { response, error } = yield call(editMiscAPI, action.payload)  \n  if (response) yield put (savedMisc({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMiscAPI(data) {\n  return axios.post(URL+'/miscsettings/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMisc() {\n\n  yield takeEvery('FETCH_MISC',requestMisc)\n\n}\n  \nfunction* requestMisc(action){\n\n  let { data } = yield call(requestMiscAPI, action.payload)\n  yield put (fetchedMisc(data.data))\n\n}\n\nfunction requestMiscAPI(data) {\n  return axios.get(URL+'/miscsettings/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* miscSaga() {\n    yield all([\n        fetchMisc(),\n        editMisc()\n    ])\n  }  ","import { call, takeEvery, all } from 'redux-saga/effects'\nimport URL from '../../../store/path'\n\n\n//#region Saga for Post Summary Register \n\nfunction* postSummaryRegister() {\n  yield takeEvery('POST_REGISTER_SUMMARY', sendSummaryRegister)\n}\n\nfunction* sendSummaryRegister(action) {\n  yield call(sendSummaryRegisterAPI, action.payload)\n}\n\nfunction sendSummaryRegisterAPI(data) {\n  window.open(URL+'/report/purchasesummary/'+ data, '_blank')\n}\n\n//#endregion\n\n\n//#region Saga for Post Summary Register \n\nfunction* postAllPartyRegister() {\n  yield takeEvery('POST_REGISTER_ALLPARTY', sendAllPartyRegister)\n}\n\nfunction* sendAllPartyRegister(action) {\n  yield call(sendAllPartyRegisterAPI, action.payload)\n}\n\nfunction sendAllPartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n//#region Saga for Post Summary Register \n\nfunction* postSinglePartyRegister() {\n  yield takeEvery('POST_REGISTER_SINGLEPARTY', sendSinglePartyRegister)\n}\n\nfunction* sendSinglePartyRegister(action) {\n  yield call(sendSinglePartyRegisterAPI, action.payload)\n}\n\nfunction sendSinglePartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n\nexport default function* registerSaga() {\n  yield all([\n    postSummaryRegister(),\n    postAllPartyRegister(),\n    postSinglePartyRegister()\n  ])\n}  ","export const CREATE_COMBINATION = 'CREATE_COMBINATION'\nexport const SAVED_COMBINATION = 'SAVED_COMBINATION'\nexport const EDIT_COMBINATION = 'EDIT_COMBINATION'\nexport const EDITED_COMBINATION = 'EDITED_COMBINATION'\nexport const FETCH_COMBINATION = 'FETCH_COMBINATION'\nexport const FETCHED_COMBINATION = 'FETCHED_COMBINATION'\nexport const FETCH_COMBINATION_BY_ID = 'FETCH_COMBINATION_BY_ID'\nexport const FETCHED_COMBINATION_BY_ID = 'FETCHED_COMBINATION_BY_ID'\nexport const NOTIFICATION_DONE_COMBINATION = 'NOTIFICATION_DONE_COMBINATION'\n","import * as type from './types'\n\nexport function createCombination(combination) {\n    return {\n        type : type.CREATE_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function savedCombination(combination) {\n    return {\n        type : type.SAVED_COMBINATION,\n        payload : combination.data.data,\n        txn: combination.data.type,\n        msg: combination.data.msg,\n        diff : true\n    };\n}\n\nexport function editCombination(combination) {\n    return {\n        type : type.EDIT_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchCombination(params) {\n    return {\n        type : type.FETCH_COMBINATION,\n        payload : params\n    };\n}\n\nexport function fetchedCombination(combination) {\n    return {\n        type : type.FETCHED_COMBINATION,\n        payload : combination\n    };\n}\n\n\nexport function fetchCombinationById(combination) {\n    return {\n        type : type.FETCH_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function fetchedCombinationById(combination) {\n    return {\n        type : type.FETCHED_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function setNotifyDoneCombination(props) {\n    return {\n        type : type.NOTIFICATION_DONE_COMBINATION,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedCombination, fetchedCombination, fetchedCombinationById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Combination \n\nfunction* createCombination() {\n    yield takeEvery('CREATE_COMBINATION',saveCombination)\n  }\n\nfunction* saveCombination(action){\n  const { response, error } = yield call(saveCombinationAPI, action.payload)\n  if (response) yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveCombinationAPI(data) {\n    return axios.post(URL+'/combination/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Combination \n\nfunction* editCombination() {\n  yield takeEvery('EDIT_COMBINATION',saveEditedCombination)\n}\n\nfunction* saveEditedCombination(action){\n  const { response, error } = yield call(editCombinationAPI, action.payload)  \n  if (response){ \n    console.log(\"response----------\", response)\n    yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))}\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editCombinationAPI(data) {\n  return axios.post(URL+'/setcombination/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Combination by ID\n\nfunction* fetchCombinationById() {\n  yield takeEvery('FETCH_COMBINATION_BY_ID',saveFetchedCombinationById)\n}\n\nfunction* saveFetchedCombinationById(action){\n  const { response, error } = yield call(fetchCombinationByIdAPI, action.payload)  \n  if (response) yield put (fetchedCombinationById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchCombinationByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/combination/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchCombination() {\n\n  yield takeEvery('FETCH_COMBINATION',requestCombination)\n\n}\n  \nfunction* requestCombination(action){\n\n  let { data } = yield call(requestCombinationAPI, action.payload)\n  yield put (fetchedCombination(data.data))\n\n}\n\nfunction requestCombinationAPI(data) {\n  return axios.get(URL+'/setcombination/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* combinationSaga() {\n    yield all([\n        createCombination(),\n        fetchCombination(),\n        editCombination(),\n        fetchCombinationById()\n    ])\n  }  ","import { all } from 'redux-saga/effects'\nimport partySaga from '../modules/party/data/sagas'\nimport bankSaga from '../modules/bank/data/sagas'\nimport groupSaga from '../modules/group/data/sagas'\nimport finYearSaga from '../modules/finyear/data/sagas'\nimport standardSaga from '../modules/standard/data/sagas'\nimport milkRatesSaga from '../modules/milkRates/data/sagas'\nimport purchaseSaga from '../modules/purchase/data/sagas'\nimport miscSaga from '../modules/misc/data/sagas'\nimport registerSaga from '../modules/register/data/sagas'\nimport combinationSaga from '../modules/combination/data/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      finYearSaga(),\n      partySaga(),\n      bankSaga(),\n      groupSaga(),\n      standardSaga(),\n      milkRatesSaga(),\n      purchaseSaga(),\n      miscSaga(),\n      registerSaga(),\n      combinationSaga()\n    ])\n  } ","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a partys schema\nconst partySchema = new schema.Entity('partys',{}, { idAttribute: 'id' });\nconst partyListSchema = [partySchema];\n\n\nconst defaultPartyParams = {\n  createTitle: 'Create Party',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Party',\n  editSubmitButtonText: 'Update',\n  partyFetched: false,\n  savedPartyId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n      const normalizedParty = normalize(action.payload, partySchema);\n      return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'FETCHED_PARTY') {  \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY') { \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }  \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PARTY'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPartyParams, action) {\n    if (action.type === 'FETCH_PARTY') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_PARTY') { \n        return {...state, \n          savedPartyId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_PARTY') { \n      return {...state, \n        savedPartyId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_PARTY') { \n      return {...state, \n        partyFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst party = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default party;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a banks schema\nconst bankSchema = new schema.Entity('banks',{}, { idAttribute: 'id' });\nconst bankListSchema = [bankSchema];\n\n\nconst defaultBankParams = {\n  createTitle: 'Create Bank',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Bank',\n  editSubmitButtonText: 'Update',\n  bankFetched: false,\n  savedBankId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      const normalizedBank = normalize(action.payload, bankListSchema);\n      return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n      const normalizedBank = normalize(action.payload, bankSchema);\n      return merge({},normalizedBank.entities.banks)\n    }\n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n        const normalizedBank = normalize(action.payload, bankListSchema);\n        return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    }else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultBankParams, action) {\n    if (action.type === 'FETCH_BANK') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      return {...state, \n        bankFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst bank = combineReducers({\n  notifications,  \n  byId,\n  byListId,\n  params\n});\n\n\nexport default bank;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a groups schema\nconst groupSchema = new schema.Entity('groups',{}, { idAttribute: 'id' });\nconst groupListSchema = [groupSchema];\n\n\nconst defaultGroupParams = {\n  createTitle: 'Create Group',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Group',\n  editSubmitButtonText: 'Update',\n  groupFetched: false,\n  savedGroupId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n      const normalizedGroup = normalize(action.payload, groupListSchema);\n      return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n      const normalizedGroup = normalize(action.payload, groupSchema);\n      return merge({},normalizedGroup.entities.groups)\n    }\n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n        const normalizedGroup = normalize(action.payload, groupListSchema);\n        return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_GROUP'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultGroupParams, action) {\n    if (action.type === 'FETCH_GROUP') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_GROUP') { \n        return {...state, \n          savedGroupId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_GROUP') { \n      return {...state, \n        savedGroupId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_GROUP') { \n      return {...state, \n        groupFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst group = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default group;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a finYears schema\nconst finYearSchema = new schema.Entity('finYears',{}, { idAttribute: 'id' });\nconst finYearListSchema = [finYearSchema];\n\n\nconst defaultFinYearParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  finYearFetched: false,\n  savedFinYearId: 0,\n  activeSessionYear: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n      const normalizedFinYear = normalize(action.payload, finYearSchema);\n      return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_FINYEAR'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultFinYearParams, action) {\n    if (action.type === 'FETCH_FINYEAR') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_FINYEAR') { \n        return {...state, \n          savedFinYearId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_FINYEAR') { \n      return {...state, \n        savedFinYearId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_FINYEAR') { \n      return {...state, \n        finYearFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    if (action.type === 'FETCHED_ACTIVE_YEAR') {\n      return {...state,\n        activeSessionYear: action.payload\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst finYear = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default finYear;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a standards schema\nconst standardSchema = new schema.Entity('standards',{}, { idAttribute: 'type' });\nconst standardListSchema = [standardSchema];\n\n\nconst defaultStandardParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedStandardId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_STANDARD') { \n      const normalizedStandard = normalize(action.payload, standardListSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n      const normalizedStandard = normalize(action.payload, standardSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_STANDARD') { \n        const normalizedStandard = normalize(action.payload, standardListSchema);\n        return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_STANDARD'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultStandardParams, action) {\n    if (action.type === 'FETCH_STANDARD') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_STANDARD') { \n        return {...state, \n          savedStandardId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_STANDARD') { \n      return {...state, \n        savedStandardId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst standard = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default standard;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a milkRates schema\nconst milkRatesSchema = new schema.Entity('milkRates',{}, { idAttribute: 'type' });\nconst milkRatesListSchema = [milkRatesSchema];\n\n\nconst defaultMilkRatesParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMilkRatesId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_MILKRATES') {\n    const milkRatesID = action.payload.type\n    return {...state, \n      [milkRatesID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_MILKRATES') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n      const normalizedMilkRates = normalize(action.payload, milkRatesSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') {\n      const milkRatesID = action.payload.type\n      return {...state, \n        [milkRatesID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MILKRATES') { \n        const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n        return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MILKRATES'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMilkRatesParams, action) {\n    if (action.type === 'FETCH_MILKRATES') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_MILKRATES') { \n        return {...state, \n          savedMilkRatesId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MILKRATES') { \n      return {...state, \n        savedMilkRatesId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst milkRates = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default milkRates;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a purchases schema\nconst purchaseSchema = new schema.Entity('purchases',{}, { idAttribute: 'id' });\nconst purchaseListSchema = [purchaseSchema];\n\n\nconst defaultPurchaseParams = {\n  createTitle: 'Create Milk Purchase',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Milk Purchase',\n  editSubmitButtonText: 'Update',\n  purchaseFetched: false,\n  purchaseDeleted: false,\n  savedPurchaseId: 0,\n  maxBillNo: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n      const normalizedPurchase = normalize(action.payload, purchaseSchema);\n      return merge({},normalizedPurchase.entities.purchases)\n    }\n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        let finalState = {...state}\n        let purchaseID = action.payload.id\n        let idObj = purchaseID.split(\",\")\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n        const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n        return merge({}, normalizedPurchase.entities.purchases)\n    } \n    if (action.type === 'FETCHED_ALL_PURCHASE') { \n      const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n      return merge({}, normalizedPurchase.entities.purchases)\n  } \n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        const idObj = purchaseID.split(\",\")\n        let finalState = {...state}\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PURCHASE') {\n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPurchaseParams, action) {\n    if (action.type === 'FETCH_PURCHASE') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'CLEAR_SAVED_ID') { \n      return {...state, \n        savedPurchaseId: null\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_ALL_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    }   \n    if (action.type === 'MULTIPLE_DELETE_PURCHASE') { \n        return {...state,\n          purchaseDeleted: true\n        }\n    } \n    if (action.type === 'FETCHED_MAX_BILLNO') { \n      return {...state,\n        maxBillNo: (parseInt(action.payload, 10) + 1)\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') { \n      return {...state,\n        purchaseDeleted: false\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst purchase = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default purchase;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a miscs schema\nconst miscSchema = new schema.Entity('miscs',{}, { idAttribute: 'name' });\nconst miscListSchema = [miscSchema];\n\n\nconst defaultMiscParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMiscId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_MISC') { \n      const normalizedMisc = normalize(action.payload, miscListSchema);\n      return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MISC') { \n        const normalizedMisc = normalize(action.payload, miscListSchema);\n        return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MISC') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MISC'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMiscParams, action) {\n    if (action.type === 'FETCH_MISC') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_MISC') { \n        return {...state, \n          savedMiscId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MISC') { \n      return {...state, \n        savedMiscId: action.payload.id\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst misc = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default misc;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a combination schema\nconst combinationSchema = new schema.Entity('combination',{}, { idAttribute: 'id' });\nconst combinationListSchema = [combinationSchema];\n\n\nconst defaultCombinationParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedCombinationId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_COMBINATION') {\n    const combinationID = action.payload.id\n    return {...state, \n      [combinationID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_COMBINATION') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedCombination = normalize(action.payload, combinationListSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n      const normalizedCombination = normalize(action.payload, combinationSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') {\n      const combinationID = action.payload.id\n      return {...state, \n        [combinationID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_COMBINATION') { \n        const normalizedCombination = normalize(action.payload, combinationListSchema);\n        return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_COMBINATION'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultCombinationParams, action) {\n    if (action.type === 'FETCH_COMBINATION') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_COMBINATION') { \n        return {...state, \n          savedCombinationId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_COMBINATION') { \n      return {...state, \n        savedCombinationId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst combination = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default combination;\n","import { txns } from './store/txnMiddleware'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport party from './modules/party/data/reducers'\nimport bank from './modules/bank/data/reducers'\nimport group from './modules/group/data/reducers'\nimport finYear from './modules/finyear/data/reducers'\nimport standard from './modules/standard/data/reducers'\nimport milkRates from './modules/milkRates/data/reducers'\nimport purchase from './modules/purchase/data/reducers'\nimport misc from './modules/misc/data/reducers'\nimport combination from './modules/combination/data/reducers';\n\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    txns,\n    finYear,\n    party,\n    bank,\n    group,\n    standard,\n    milkRates,\n    purchase,\n    misc,\n    combination\n})\n\nexport default rootReducer","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport createSagaMiddleware from 'redux-saga'\nimport { throttle } from 'lodash'\n\nimport monitorReducersEnhancer from './store/monitorReducers'\nimport loggerMiddleware from './store/logger'\nimport { txnMiddleware } from './store/txnMiddleware' //logActionDiff\nimport { loadState, saveState } from './store/localStorage';\nimport rootSaga from './store/sagas'\nimport rootReducer from './reducers'\n\nimport { fetchFinYear, fetchActiveYear } from './modules/finyear/data/actions'\nimport { fetchBank } from './modules/bank/data/actions'\nimport { fetchGroup } from './modules/group/data/actions'\nimport { fetchParty } from './modules/party/data/actions'\nimport { fetchStandard } from './modules/standard/data/actions'\nimport { fetchMilkRates } from './modules/milkRates/data/actions'\nimport { fetchMisc } from './modules/misc/data/actions'\nimport { fetchCombination } from './modules/combination/data/actions'\nimport { fetchMaxBillNo } from './modules/purchase/data/actions'\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const history = createBrowserHistory({\n  basename: '/dairyfarm',\n});\n\nexport default function configureAppStore() {\n\n  const preloadedState = loadState();\n\n  const store = configureStore({\n    reducer: rootReducer(history),\n    middleware: [sagaMiddleware,txnMiddleware,loggerMiddleware,routerMiddleware(history), ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer(history)))\n  }  \n\n  sagaMiddleware.run(rootSaga)\n\n  store.subscribe(throttle(() => {\n    saveState({\n      // loginDetails : store.getState().loginDetails,\n      // messagesById: store.getState().messagesById,\n      // messagesPrimary : store.getState().messagesPrimary\n    });\n  }), 1000);\n  store.dispatch(fetchActiveYear())\n  store.dispatch(fetchCombination())\n  store.dispatch(fetchFinYear())\n  store.dispatch(fetchBank())\n  store.dispatch(fetchGroup())\n  store.dispatch(fetchParty())\n  store.dispatch(fetchMaxBillNo())\n  store.dispatch(fetchStandard(\"SetStandard\"))\n  store.dispatch(fetchMilkRates(\"SetPriceRate\"))\n  store.dispatch(fetchMisc())\n  console.log(\"call\")\n  return store\n}\n\n\n\n","export const menu = [\n  {\n    icon: '',\n    title: 'Master',\n    submenu: [\n      {\n        icon: '',\n        title: 'Bank',\n        list: '/bank/list',\n        label: 'Bank'\n      },\n      {\n        icon: '',\n        title: 'Group',\n        list: '/group/list',\n        label: 'Group'\n      },\n      {\n        icon: '',\n        title: 'Party',\n        list: '/party/list',\n        label: 'Party'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Transaction',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase',\n        list: '/purchase/list',\n        label: 'Milk Purchase'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Settings',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Rates',\n        list: '/milkRates/update',\n        label: 'Milk Rates'\n      },\n      {\n        icon: '',\n        title: 'Standard',\n        list: '/standard/update',\n        label: 'Standard'\n      },\n      {\n        icon: '',\n        title: 'Misc',\n        list: '/misc/update',\n        label: 'Misc'\n      },\n      {\n        icon: '',\n        title: 'Combination',\n        list: '/combination/update',\n        label: 'Combination'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Reports',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase Register',\n        list: '/register/list',\n        label: 'Milk Purchase Register'\n      }\n    ]\n  }\n]","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Notification = ({ id, notifySelector, type, notifyDoneAction }, props) => {\n    const notifyObj = useSelector(state => notifySelector(state, id))\n    console.log(\"id-------------------\", id)\n    console.log(\"notifyObj-------------------\", notifyObj)\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        if(id !== 0 && notifyObj){\n            const options = {\n                position: \"bottom-center\",\n                autoClose: 3000,\n                hideProgressBar: true\n            }\n            const getNotObj = type === \"save\" ? notifyObj.save : type === \"edit\" ? notifyObj.edit : type === \"delete\" ? notifyObj.delete : {}\n            if(getNotObj){\n                toast[getNotObj.status]( getNotObj.msg, options );\n                dispatch(notifyDoneAction({id, type}))\n            }\n        }\n    })\n\n    if (notifyObj){\n    return (\n        <ToastContainer transition={Slide}/>\n    )} else return null\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteParty, setNotifyDoneParty, partyPrint } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchParty } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\nimport { getGroupById } from '../../group/data/selectors'\nimport { getBankById } from '../../bank/data/selectors'\n\nconst Party = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.party.status === 1 ? false : true\n\n    const [deletePartyId, setDeletePartyId] = useState(false)\n    const [modalOption, setModalOption] = useState({ status: false, id: 0 })\n\n    const group = useSelector(state => getGroupById(state, props.party ? props.party.groupMaster ? props.party.groupMaster.id : 0 : 0))\n    const bank = useSelector(state => getBankById(state, props.party ? props.party.bankMaster ? props.party.bankMaster.id : 0 : 0))\n\n    const deletePartyFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deleteParty(getVlaue))\n        setDeletePartyId(values)\n        setModalOption({ status: false, id: 0 })\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.party.partyName}</Table.Cell>\n            <Table.Cell>{props.party.phone}</Table.Cell>\n            <Table.Cell>{group ? group.groupName !== undefined ? group.groupName : '' : ''}</Table.Cell>\n            <Table.Cell>{bank ? bank.bankName !== undefined ? bank.bankName : '' : '' + \" - \" + props.party.partyBankAccNo}</Table.Cell>\n            <Table.Cell textAlign='right' style={{ width: '10%' }}>{props.party.balance > 0 ? props.party.balance : (props.party.balance * -1)} {parseFloat(props.party.balance) >= 0 ? \"Dr\" : \"Cr\"}</Table.Cell>\n            <Table.Cell textAlign='center' style={{ width: '10%' }}>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/party/edit/\" + props.party.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({ status: true, id: props.party.id })}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                    {\n                        deletePartyId ?\n                            <Notification id={deletePartyId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneParty} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({ status: false, id: 0 })}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Party?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePartyFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes' />\n                        <Button onClick={() => setModalOption({ status: false, id: 0 })} negative labelPosition='right' icon='close' content='No' />\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PartyList = (props) => {\n    // Loading Logic if tasks not fetched\n    const party = useSelector(state => select.getPartyList(state, props))\n    const partyFetched = useSelector(state => select.getIsPartyFetched(state, props))\n    const dispatch = useDispatch()\n\n    const addPartyClick = () => {\n        props.history.push('/party/create');\n    }\n\n    const printPartyDetails = () => {\n        dispatch(partyPrint())\n    }\n\n    useEffect(() => {\n        dispatch(fetchParty())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Party List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addPartyClick()}>\n                            Add Party<Icon name='add' />\n                        </Button>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => printPartyDetails()}>\n                            Print<Icon name='print' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '5%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Party Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '15%' }}>Phone</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Group</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Bank & A/C No</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='right' style={{ width: '10%' }}>Balance</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center' style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!partyFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"7\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(party).map((key, index) =>\n                                <Party party={party[key]} key={party[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PartyList;\n","\n/*\n * @param str (Given Date String)\n * @param dateObj (Date Field Object)\n * @description This function is called when str is not blank.\n */\nexport const checkValidDateFormats = (str) => {\n    str = str.replace(/[ ]/gi, \"-\").replace(/[*]/gi, \"-\").replace(/[.]/gi, \"-\").replace(/[+]/gi, \"-\").replace(/[/]/gi, \"-\")\n    let split_str = str.split(\"-\");\n    if (split_str.length <= 3) { // Within dd,MM and yyyy.\n        let DD = parseInt(split_str[0], 10) < 10 ? \"0\" + parseInt(split_str[0], 10) : parseInt(split_str[0]),\n            MM = parseInt(split_str[1], 10) < 10 ? \"0\" + parseInt(split_str[1], 10) : parseInt(split_str[1]),\n            YY = split_str[2],\n            isDD = !isNaN(DD) && DD ? true : false,\n            isMM = !isNaN(MM) && MM ? true : false,\n            isYY = !isNaN(YY) && YY ? true : false,\n            currDate = getCurrentDate(\"yyyy-MM-dd\"),\n            reqDate = \"\";\n\n        if ((isDD === true && isMM === true  && isYY === true)) {    // All three (dd-MM-yyy)\n            let isValidDay1 = checkDay(DD, MM, YY);\n            let isValidMonth1 = checkMonth(MM);\n            if (isValidDay1 === true && isValidMonth1 === true) {\n                return setYear(DD, MM, YY);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\");\n            }\n        } else if (isDD === true && isMM === true && split_str.length === 2) {            // Only first two (dd-MM)\n            let isValidDay2 = checkDay(DD, MM, YY);\n            let isValidMonth2 = checkMonth(MM);\n            if (isValidDay2 === true && isValidMonth2 === true) {\n                reqDate = getYear(DD, MM, currDate);\n                return reqDate\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else if (isDD === true && split_str.length === 1) {                                                // Only first one (dd)\n            let isValidDay3 = checkDay(DD, MM, YY);\n            if (isValidDay3 === true) {\n                reqDate = getMonthYear(DD, currDate);\n                return reqDate\n                // checkValidDateFormats(reqDate);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else {\n            console.log(\"Please enter proper date in 'dd-MM-yyyy' format.\");\n        }\n    } else { // Not Within dd,MM and yyyy.\n        console.log(\"Please enter date in 'dd-MM-yyyy' format.\")\n    }\n}\n\n\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @return true if DD satisfy the valid day range, else false\n */\nfunction checkDay(DD, MM, YY){\n    var validDateRange = 31;\n    if(MM !== undefined && !isNaN(MM)){\n        if(MM === 1 || MM ===3 || MM === 5 || MM === 7 || MM === 8 || MM === 10 || MM === 12){\n            validDateRange = 31;\n        }else if(MM === 2){\n            if(YY === undefined){\n                console.log('YY not defined')\n            }\n            var isLeapYear = isleap(YY);\n            validDateRange = isLeapYear === true ? 29 : 28;\n        }else{\n            validDateRange = 30;\n        }\n    }    \n    return DD !== 0 ? (DD <= validDateRange ? true : false) : false;\n}\n\n/*\n * @param MM (Given Month)\n * @return true if MM satisfy the valid month range, else false\n */\nfunction checkMonth(MM){\n    var validMonthRange = 12;\n    return MM !== 0 ? (MM <= validMonthRange ? true : false) : false;\n}\n\n/*\n * @param dateObj (Date Field Object)\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @description This function is called when DD, MM and YY is given.\n * Checks valid Year format and set required Date to the Date field.\n */\nfunction setYear(DD, MM, YY){\n    var yyStrLen = YY.length,\n    prefixStr = \"\",\n    reqDate = DD+\"-\"+MM+\"-\"+YY;\n    //    console.log(\"DD: \"+DD+\"\\nMM: \"+MM+\"\\nYY: \"+YY+\"\\nyyStrLen: \"+yyStrLen)\n    if(yyStrLen === 2){\n        prefixStr = parseInt(YY, 10) >= 80 && parseInt(YY, 10) <= 99 ? \"19\" : \"20\";\n        reqDate = DD+\"-\"+MM+\"-\"+prefixStr+YY;\n    }else if(yyStrLen === 4){\n        if(parseInt(YY,10) < 1980){\n            console.log(\"Year cannot be less than 1980\");\n        }\n    }\n    if(yyStrLen !== 2 && yyStrLen !== 4){\n        console.log(\"Date out of range. Please ensure you enter proper date.\");\n    }\n    // const rDt = getDateInYYYYMMDD(reqDate, \"-\", \"-\")\n    // console.log('DD MM YY',reqDate)\n    return reqDate\n}\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param currDate (Current Date)\n * @description This function is called when DD and MM is given.\n * @return Required Date\n */\nfunction getYear(DD, MM, currDate){\n    // console.log(\"DD: \"+DD+\"\\nMM: \"+MM)\n\n    const vfDt = currDate\n        \n    //console.log(\"v_fromDate: \"+vfDt)\n    var yy = vfDt.split(\"-\")[0],\n    mm = vfDt.split(\"-\")[1],\n    nextYY = parseInt(yy, 10) + 1,\n    calDate = yy+\"-\"+MM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+MM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    // console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate);\n    // alert(parseInt(MM, 10)+\" > \"+parseInt(mm, 10))\n    if(parseInt(MM, 10) <  parseInt(mm, 10)){\n        diff1 = dateDiff(vfDt, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(vfDt, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) > parseInt(diff2, 10) ? DD+\"-\"+MM+\"-\"+yy : DD+\"-\"+MM+\"-\"+nextYY;\n    // alert(parseInt(diff1, 10) +\">\" +parseInt(diff2, 10))\n    //  console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }\n    else{\n        reqDate = DD+\"-\"+MM+\"-\"+yy;\n    }\n    return reqDate;\n}\n\n/*\n * @param DD (Given Day)\n * @param currDate (Current Date)\n * @description This function is called when only DD is given.\n * @return Required Date\n */\nfunction getMonthYear(DD, currDate){\n    //    console.log(\"DD: \"+DD)\n    var yy = currDate.split(\"-\")[0],\n    mm = currDate.split(\"-\")[1],\n    dd = currDate.split(\"-\")[2],\n    nextMM = parseInt(mm, 10) === 12 ? '01' : ((parseInt(mm, 10) + 1) < 10 ? \"0\"+(parseInt(mm, 10) + 1) : (parseInt(mm, 10) + 1)),\n    prevMM = parseInt(mm, 10) === 1 ? 12 : ((parseInt(mm, 10) - 1) < 10 ? \"0\"+(parseInt(mm, 10) - 1) : (parseInt(mm, 10) - 1)),\n    nextYY = parseInt(mm, 10) === 12 ? parseInt(yy, 10) + 1 : yy,\n    prevYY = parseInt(mm, 10) === 1 ? parseInt(yy, 10) - 1 : yy,\n    calDate = yy+\"-\"+mm+\"-\"+DD,\n    prevDate = prevYY+\"-\"+prevMM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+nextMM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    //    console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate)\n    if(parseInt(DD, 10) > parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, prevDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+prevMM+\"-\"+prevYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else if(parseInt(DD, 10) < parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+nextMM+\"-\"+nextYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else{\n        reqDate = DD+\"-\"+mm+\"-\"+yy;\n    }  \n    return reqDate;\n}\n\n/*\n * @param YY (Given Year)\n * @return true if the given year is a Leap Year, else false\n */\nfunction isleap(YY){\n    var yr = YY;\n    if ((parseInt(yr, 10) % 4) === 0){\n        if (parseInt(yr, 10) % 100 === 0){\n            if (parseInt(yr, 10) % 400 !== 0){\n                //                alert(\"Not Leap\");\n                return false;\n            }else if(parseInt(yr, 10) % 400 === 0){\n                //                alert(\"Leap\");\n                return true;\n            }\n        }else if(parseInt(yr, 10) % 100 !== 0){\n            //            alert(\"Leap\");\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * @param format (Required Format)\n * @return Current Date\n */\nfunction getCurrentDate(format){\n    var d = new Date(),\n    dd = d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\n    mm = (d.getMonth() + 1) < 10 ? \"0\"+(d.getMonth() + 1) : (d.getMonth() + 1),\n    yyyy = d.getFullYear(),\n    currDate = \"\";\n    if(format === \"yyyy-MM-dd\"){\n        currDate = yyyy + \"-\" + mm + \"-\" + dd;\n    }else if(format === \"dd-MM-yyyy\"){\n        currDate = dd + \"-\" + mm + \"-\" + yyyy;\n    }\n    return currDate;\n}\n\n/*\n * @param date (Given Date)\n * @param separator (Given Separator)\n * @param reqseparator (Required Separator)\n * @return Given Date in yyyy-MM-dd\n */\nexport function getDateInYYYYMMDD(date){\n    if(date !== undefined) {\n        const date_split = date.split('-')\n        return  date_split[2] + '-' + date_split[1] + '-' + date_split[0];    \n    } else\n        return date\n}\n\n/*\n * @param v_fromDate (Voucher Period From Date)\n * @param v_toDate (Voucher Period To Date)\n * @param date (Given Date)\n * @return true if given date is within period range, else false\n */\n/*\n * @return Difference between two dates in number of day\n */\nfunction dateDiff(date1, date2){ //date1: To Date(greater)-----date2: From Date(smaller)\n    //    console.log(\"date1: \"+date1+\"\\ndate2: \"+date2)\n    var dt1 = new Date(date1);\n    var dt2 = new Date(date2);\n    var oneDay=1000*60*60*24;    \n    return Math.ceil((dt1.getTime()-dt2.getTime())/oneDay);\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorMessage } from 'formik'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport NumberFormat from 'react-number-format';\nimport { isObject, startCase, toLower, get } from \"lodash\";\nimport { Form, Radio, Input, Label, Dropdown, TextArea, Loader } from 'semantic-ui-react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { checkValidDateFormats, getDateInYYYYMMDD } from './dateUtils'\nimport { debounce } from 'lodash'\n\n\nexport function getValueFromEvent(e) {\n  const { target } = e;\n  let newValues;\n  if (target) {\n    const value = (target.type === \"checkbox\") ? target.checked : target.value;\n    newValues = { [target.name]: value }\n  }\n  else if (isObject(e)) { newValues = e; }\n  return newValues;\n}\n\n\nexport const FormikInputComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, disabled, isReadonly,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      <Input name={field.name}\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={field.value}\n        autoFocus={focus ? focus : false}\n        style={{width: '100%'}}\n        readOnly = {isReadonly ? isReadonly : false}\n        disabled = {disabled ? disabled : false}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  );\n\n\n  export const FormikDateComponent = ({\n    isLabel, label, placeholder, width, focus, isTxn, setDateManually,\n    field, // { name, value, onChange, onBlur }\n    form: { touched, errors, values, handleChange, setFieldValue, dirty }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n    ...props\n  }) => {\n  \n  const [dt, setDt] = useState((setDateManually && setDateManually !== undefined && setDateManually !== \"\") ? moment(setDateManually).toDate() : field.value ? moment(field.value).toDate() : null)\n  let rawEvent = ''\n  useEffect(() => {\n    if(setDateManually !== undefined && setDateManually !== \"\" && setDateManually !== 0){\n      setFieldValue(field.name, setDateManually)\n      // console.log(\"_-------------done-1------------_\", setDateManually)\n      setDt(moment(setDateManually).toDate())\n    }else{\n      if(setDateManually !== undefined && setDateManually !== \"\"){\n        setFieldValue(field.name, setDateManually)\n        // console.log(\"_-------------done-2------------_\", setDateManually)\n        setDt(moment(setDateManually).toDate())\n      }\n    }\n  }, [setDateManually])\n\n  const handleDateChange = (e) => {\n    if (rawEvent.type === 'change'){\n        let str = rawEvent.target.value\n        const dt1 = checkValidDateFormats(str)\n        handleChange(dt1)\n        setFieldValue(field.name, getDateInYYYYMMDD(dt1))\n        setDt(moment(getDateInYYYYMMDD(dt1)).toDate())  \n    } else {\n        setDt(e)\n        const dt = moment(e)\n        handleChange(dt.format(\"DD-MM-YYYY\"))\n        setFieldValue(field.name, dt.format(\"YYYY-MM-DD\"))\n    }\n  }\n\n  return (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n      <Form.Field style={{width: '100%'}} width={width ? width : null} error={get(errors,field.name) && get(touched,field.name)}>\n        {errors[field.name] && touched[field.name] && !isTxn ?\n          <label>{errors[field.name]}</label> :\n          <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        <DatePicker\n          name={field.name}\n          placeholderText={placeholder}\n          dateFormat=\"dd-MM-yyyy\"\n          scrollableYearDropdown\n          selected={field.value ? dt : null}\n          onChange={handleDateChange}\n          onChangeRaw={e=> rawEvent = e}\n          autoComplete='off'\n          autoFocus={focus ? focus : false}\n          style={{width: '100%'}}\n        />\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikAmountComponent = ({\n  isLabel, label, saveOnBlur, decimal, compute, isTxn, path, placeholder, focus, setValue, disabled, setStateValue, isReadonly, onChangeFunc, onchangeset, tabindex,\n  field, // { name, value, onChange, onBlur }\n  index,\n  form: { touched, errors, values, handleSubmit, handleBlur, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) =>  {\n\n  useEffect(() => {\n    if(setValue !== undefined && setValue !== \"\" && setValue !== 0){\n      setFieldValue(field.name, setValue)\n    }else{\n      if(setValue !== undefined && setValue !== \"\"){\n        setFieldValue(field.name, setValue)\n      }\n    }\n  }, [setValue])\n\n  const setValueChange = (setFieldValue, val) => {\n    setFieldValue(field.name, val)\n    if(setStateValue){\n      setStateValue(val !== undefined && val !== \"\" ? val : 0)\n    }\n    if(onChangeFunc){\n      onChangeFunc(val !== undefined && val !== \"\" ? val : 0, setFieldValue)\n    }\n    if(onchangeset){\n      onchangeset(values, setFieldValue)\n    }\n  }\n\n  return(\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <NumberFormat \n        thousandSeparator={true} \n        thousandsGroupStyle=\"lakh\"\n        decimalScale = {(decimal) ? decimal : 2 }\n        placeholder={placeholder}\n        name={field.name}\n        value={field.value}\n        onValueChange={(val) => setValueChange(setFieldValue, val.floatValue)}\n        autoFocus={focus ? focus : false}\n        disabled = {disabled ? disabled : false}\n        style={{textAlign: \"right\", width: '100%'}}\n        readOnly={isReadonly ? isReadonly : false}\n        tabIndex={tabindex ? tabindex : '0'}\n        onBlur={(e) =>{\n          // e.persist()\n          // handleBlur(e)\n          if (compute) compute(values, index, setFieldValue)\n        }}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  )\n}\n\n\nexport const FormikCheckBoxComponent = ({\n  userProps, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n      <Radio\n      name={field.name}\n      id={userProps.id}\n      value={userProps.id}\n      checked={userProps.id === field.value}\n      onChange={field.onChange}\n      autoFocus={focus ? focus : false}\n    />&nbsp;&nbsp;<b>{userProps.id}</b>\n      {/* {errors[field.name] && touched[field.name] ?\n        <label>{errors[field.name]}</label> :\n        <label>{userProps.isLabel ? null : startCase(toLower(field.name))}</label>} */}\n    </Form.Field>\n  );  \n\nexport const FormikSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, placeholder,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\nconst onChange = (value) => {\n  setFieldValue(field.name, value)\n  if (userProps.getValue)\n    userProps.getValue(value);\n}\n\nuseEffect(() => {\n  if(userProps.setValue && userProps.setField){\n    userProps.setField(field.name, userProps.setValue)\n  }\n}, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n      search\n      selection={isSelection ? true : false}\n      id={field.id}\n      name={field.name}\n      placeholder={placeholder}\n      options={userProps.options}\n      value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n      onChange={(e, { value }) => onChange(value)}\n      autoFocus={focus ? focus : false}\n      clearable\n      disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n      style={{width: '100%'}}\n      />     \n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikMultiSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n  \n  useEffect(() => {\n    if(userProps.setValue && userProps.setField){\n      userProps.setField(field.name, userProps.setValue)\n    }\n  }, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n        options={userProps.options}\n        placeholder={userProps.placeholder}\n        search\n        selection\n        fluid\n        multiple\n        allowAdditions\n        value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n        onChange={(e, { value }) => onChange(value)}\n        disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n        style={{width: '100%'}}\n        selection={isSelection ? true : false}\n        id={field.id}\n        name={field.name}\n      />\n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikAsyncSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, width, appendLabel, appendLabelText, className, isFetching,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n\n\n  const loadOptions = (searchQuery) => {\n      userProps.getInputValue(searchQuery, values.id);\n  }\n  return (\n\n    // <Form.Field error={errors[field.name] && touched[field.name]}>{appendLabel ? className : \"\"}\n    <Form.Field width={width ? width : null} className=\"goRelative\" error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <Dropdown\n        search\n        selection={isSelection ? true : false}\n        // selectOnNavigation={true}\n        id={field.id}\n        name={field.name}\n        placeholder={userProps.placeHolder}\n        options={userProps.searchOptions && userProps.searchOptions.length>0 ? userProps.searchOptions : userProps.options}\n        value={field.value}\n        onSearchChange={(e, { searchQuery }) => loadOptions(searchQuery)}\n        onChange={(e, { value }) => onChange(value)}\n        placeholder={userProps.placeholder}\n        clearable\n        searchInput={{ autoFocus: focus ? focus : false }}\n        style={{width: '100%'}}\n        />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      {appendLabel ? isFetching  ? <Loader active size=\"mini\" className=\"smallLoader\"/> : <Label size=\"mini\" className=\"noColorLabel\">{appendLabelText}</Label> : null}\n      </Form.Field>\n  )\n};  \n\n\nexport const FormikTextAreaComponent = ({\n  userProps, isTxn, isLabel, label, tabindex,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, handleBlur, setFieldValue, HeaderClick }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const [ count, setCount ] = useState(0)\n\n  const onChange = (syntheticEvent, value) => {\n    setFieldValue(field.name, value.value)\n    setCount(value.value.length)\n    if(value.value !== \"\"){\n      if (userProps.getValue)\n        userProps.getValue(value.value);\n    }else{\n      if (userProps.getValue)\n        userProps.getValue('');\n    }\n  }\n  \n  useEffect(() => {\n    if(userProps){\n      if(userProps.value){\n        setFieldValue(field.name, userProps.value)\n      }\n    }\n  }, [userProps.value])\n\n  useEffect(() => {\n    if(userProps && userProps.displayCount !== undefined && userProps.displayCount === true && field.value && field.value.length === 0){\n      setCount(0)\n    }else{\n      if(field.value && field.value.length > 0){\n        setCount(field.value.length)\n      }else{\n        setCount(0)\n      }\n    }\n  }, [field.value])\n\n  const height = userProps ? (userProps.height === undefined ? 3 : (userProps.height === '' ? 3 : userProps.height === 0 ? 3 : userProps.height)): 3;\n  const isFloatLeft = userProps && userProps.displayCount !== undefined && userProps.displayCount === true ? 'left' : null\n  return (\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label style={{float: isFloatLeft}}>{errors[field.name]}</label> :\n        <label style={{float: isFloatLeft}}>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      {userProps ? userProps.displayCount !== undefined && userProps.displayCount === true ?\n          <label style={{float: 'right'}}>{count} / {userProps.maxLength}</label>\n          : null: null}\n        <TextArea\n          name={field.name}\n          style={{ \n              resize: 'none', \n              width: '100%'\n          }}\n          value={field.value}\n          onChange={onChange}\n          rows={height}\n          maxLength={userProps ? userProps.maxLength : null}\n          tabIndex={tabindex ? tabindex : '0'}\n          placeholder={userProps ? userProps.getholder : null}>\n        </TextArea>\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikDisplayLabelComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, text,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>\n      <label className=\"AutoGenerate\">{text}</label>\n    </Form.Field>\n  );\n\n// export const FormikAsyncSelectComponent = ({\n//   userProps, isLabel, label, isTxn,\n//   field, // { name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//       userProps.getValue(value);\n//   }\n\n\n//   const loadOptions = (inputValue, callback) => {\n//     userProps.getInputValue(inputValue, callback);\n//   }\n\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <AsyncSelect\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         defaultOptions={userProps.options}\n//         loadOptions={loadOptions} \n//         value={userProps.options ? userProps.options.find(option => option.value === field.value) : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n// export const regexCheckLakhWithZeroDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:|,\\d+)?$/\n// export const regexCheckLakhWithTwoDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,2})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithThreeDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,3})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithFourDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,4})|,\\d+|\\.)?$/\n\n// export const FormikAmtForTxnComponent = ({\n//   isLabel,\n//   label,\n//   field,  //{ name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleBlur, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const [ textVal, setTextValue ] = useState(\"\")\n\n// return (\n//     <Form.Field error={errors[field.name] && touched[field.name]}>\n//       {errors[field.name] && touched[field.name] ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Input \n//         name={field.name}\n//         type=\"text\"\n//         onFocus={e => (field.value) ? setTextValue(parseFloat(field.value).toString().replace(/,/g, '')): \"\"}\n//         onChange={e => {\n//           // const re = /^(?:\\d+|\\d{1,3}(?:,\\d{2})+)(?:(\\.|,)\\d+|\\.\\d{0,2})?$/;\n//           // const re = lakhWithTwoDecimal;\n//           if (e.target.value === '' || regexCheckLakhWithTwoDecimal.test(e.target.value)) {\n//             setTextValue(e.target.value)\n//             setFieldValue(field.name, e.target.value)\n//           }          \n//         }}\n//         onBlur={e => {\n//           // handleBlur(e) \n//           let vl = (field.value) ? parseFloat(field.value).toFixed(2).replace(regexConvertToLakh, '$1,') : \"\"\n//           setTextValue(vl)\n//           // let someValue = e.currentTarget.value\n//     }}\n//         value={textVal}\n//       />\n//     </Form.Field>\n//   )};\n\n\n// export const FormikSelectComponent = ({\n//     userProps, isLabel, label, isTxn,\n//     field, // { name, value, onChange, onBlur }\n//     form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//     ...props\n//   }) => {\n  \n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//     userProps.getValue(value);\n//   }\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Select\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         options={userProps.options}\n//         // value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n","import React from 'react';\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\n    \n\nconst PlantSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = [{\n        key : \"1\",\n        value : 1,\n        text : \"1\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default PlantSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectGroup } from '../data/selectors'\n    \n\nconst GroupSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = useSelector(state => selectGroup(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default GroupSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectBank } from '../data/selectors'\n    \n\nconst BankSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n    \n    const opt = useSelector(state => selectBank(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default BankSelect;\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createGroup } from '../data/actions' \r\nimport { groupSchema, group } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst GroupPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const saveGroup = (values) => {\r\n        dispatch(createGroup(values))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Group' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Group</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"groupPopupForm\" size=\"large\" width={5}\r\n                    initialValues={group()}\r\n                    validationSchema={groupSchema}\r\n                    onSubmit={(values) => saveGroup(values)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupPopup;","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBank } from '../data/actions'\r\nimport { bankSchema, bank } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst BankPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const saveBank = (values) => {\r\n        dispatch(createBank(values))\r\n        setDisplayStatus(false)\r\n    }\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Bank</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"bankPopupForm\" size=\"large\" width={5}\r\n                    initialValues={bank()}\r\n                    validationSchema={bankSchema}\r\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BankPopup;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getParty, getPartyParams, getSavedPartyId, getNotification } from '../data/selectors'\nimport { createParty, editParty, setNotifyDoneParty } from '../data/actions'\nimport { partySchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikAmountComponent, FormikInputComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\nimport PlantSelect from '../../party/components/plantSelect'\nimport GroupSelect from '../../group/components/groupSelect'\nimport BankSelect from '../../bank/components/bankSelect'\nimport GroupPopup from '../../group/components/groupPopup'\nimport BankPopup from '../../bank/components/bankPopup'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst PartyForm = (props) => {\n\n    const party = useSelector(state => getParty(state, props))\n    const savedPartyId = useSelector(state => getSavedPartyId(state, props))\n    const params = useSelector(state => getPartyParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveParty = (values, resetForm) => {\n        if (props.match.path === '/party/create') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(createParty(values))\n            resetForm()\n        }\n        if (props.match.path === '/party/edit/:id') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(editParty(values))\n            props.history.push(`/party/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"partyForm\" size=\"large\" width={5}\n                    initialValues={party}\n                    validationSchema={partySchema}\n                    onSubmit={(values, { resetForm }) => saveParty(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <PlantSelect name=\"plantNo\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'plantNo' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"plantName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"address\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 400, displayCount: true, height: 3 }} focus={true} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"phone\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <BankSelect name=\"bankM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'bankM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <BankPopup setFieldVal={setFieldValue} name='bankPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyBankAccNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"balance\" label=' ' component={FormikAmountComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"nickName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <GroupSelect name=\"groupM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'groupM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <GroupPopup setFieldVal={setFieldValue} name='groupPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <br /><br /><br /><br />\n                            {savedPartyId && savedPartyId !== 0 && props.match.path === '/party/create' ?\n                            <Notification id={savedPartyId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneParty} type='save' />\n                            :\n                            null}\n                            {console.log(\"text----------------\" + params.submitButtonText)}\n                            <div className=\"stickeyDiv CustomeFormPurchase\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/party/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PartyForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport PartyList from \"./components/partyList\";\nimport PartyForm from \"./components/partyForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Party = () => {\n    return (\n        <Container>\n            <Route path=\"/party/list\" component={withRouter(PartyList)} />\n            <Route path=\"/party/edit/:id\" component={PartyForm} />\n            <Route path=\"/party/create\" component={PartyForm} />\n        </Container>\n    )\n};\n\nexport default Party;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteBank, setNotifyDoneBank } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchBank } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Bank = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.bank.status === 1 ? false : true;\n\n    const [deleteBankId, setDeleteBankId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const deleteBankFromList = (values) => {\n        const getVlaue = { id: values }\n        setDeleteBankId(values)\n        dispatch(deleteBank(getVlaue))\n        setModalOption({status: false, id: 0})\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.bank.bankName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/bank/edit/\" + props.bank.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({status: true, id: props.bank.id})}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                {console.log(deleteBankId)}\n                    { \n                        deleteBankId ?\n                            <Notification id={deleteBankId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneBank} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteBankFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst BankList = (props) => {\n    // Loading Logic if tasks not fetched\n    const bank = useSelector(state => select.getBankList(state, props))\n    const bankFetched = useSelector(state => select.getIsBankFetched(state, props))\n    const dispatch = useDispatch()\n    const addBankClick = () => {\n        props.history.push('/bank/create')\n    }\n\n    useEffect(() => {\n        dispatch(fetchBank())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Bank List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addBankClick()}>\n                            Add Bank<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '10%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '80%' }}>Bank Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!bankFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(bank).map((key, index) =>\n                                <Bank bank={bank[key]} key={bank[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default BankList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getBank, getBankParams, getSavedBankId, getNotification } from '../data/selectors'\nimport { createBank, editBank, setNotifyDoneBank } from '../data/actions' \nimport { bankSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst BankForm = (props) => {\n\n    const bank = useSelector(state => getBank(state, props))\n    const savedBankId = useSelector(state => getSavedBankId(state, props))\n    const params = useSelector(state => getBankParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveBank = (values, resetForm) => {\n        if (props.match.path === '/bank/create') {\n            dispatch(createBank(values))\n            resetForm()\n        }\n        if (props.match.path === '/bank/edit/:id') {\n            dispatch(editBank(values))\n            props.history.push(`/bank/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"bankForm\" size=\"large\" width={5}\n                    initialValues={bank}\n                    validationSchema={bankSchema}\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/bank/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedBankId && savedBankId !== 0 && props.match.path === '/bank/create' ? \n                            <Notification id={savedBankId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneBank} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default BankForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BankList from \"./components/bankList\";\nimport BankForm from \"./components/bankForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Bank = () => {\n    return (\n        <Container>\n            <Route path=\"/bank/list\" component={withRouter(BankList)} />\n            <Route path=\"/bank/edit/:id\" component={BankForm} />\n            <Route path=\"/bank/create\" component={BankForm} />\n        </Container>\n    )\n};\n\nexport default Bank;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteGroup, setNotifyDoneGroup, fetchGroup } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Group = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.group.status === 1 ? false : true;\n    \n    const [deleteGroupId, setDeleteGroupId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n    \n    const deleteGroupFromList = (values) => {\n        const getVlaue = {id: values}\n        dispatch(deleteGroup(getVlaue))\n        setDeleteGroupId(values)\n        setModalOption({status: false, id: 0})\n    }\n    \n    return(\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.group.groupName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ? \n                    <>\n                        <Link to={\"/group/edit/\"+props.group.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{cursor: 'pointer', color: 'red'}} onClick={() => setModalOption({status: true, id: props.group.id})}>Delete</span>\n                    </>\n                :\n                    <span>Deleted</span>\n                }\n                <>\n                {\n                    deleteGroupId ? \n                    <Notification id={deleteGroupId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneGroup} type='delete'/>\n                    :\n                    null\n                }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Group?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteGroupFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst GroupList = (props) => {\n    // Loading Logic if tasks not fetched\n    const group = useSelector(state => select.getGroupList(state, props)) \n    const groupFetched = useSelector(state => select.getIsGroupFetched(state, props))\n    const dispatch = useDispatch()\n    \n    const addGroupClick = () => {\n        props.history.push('/group/create');\n    }\n    \n    useEffect(()=>{\n        dispatch(fetchGroup())\n    })      \n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Group List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addGroupClick()}>\n                            Add Group<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br/>\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{width: '10%'}}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '80%'}}>Group Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '10%'}}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!groupFetched ? \n                    <>\n                        <Table.Row>\n                            <Table.Cell style={{width: '100%'}} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>                             \n                        </Table.Row>\n                    </> :\n                    <>\n                    { Object.keys(group).map((key, index) => \n                    <Group group={group[key]} key={group[key].id} index={index}/> )}\n                    </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default GroupList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getGroup, getGroupParams, getSavedGroupId, getNotification } from '../data/selectors'\nimport { createGroup, editGroup, setNotifyDoneGroup } from '../data/actions' \nimport { groupSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst GroupForm = (props) => {\n\n    const group = useSelector(state => getGroup(state, props))\n    const savedGroupId = useSelector(state => getSavedGroupId(state, props))\n    const params = useSelector(state => getGroupParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveGroup = (values, resetForm) => {\n        if (props.match.path === '/group/create') {\n            dispatch(createGroup(values))\n            resetForm()\n        }\n        if (props.match.path === '/group/edit/:id') {\n            dispatch(editGroup(values))\n            props.history.push(`/group/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"groupForm\" size=\"large\" width={5}\n                    initialValues={group}\n                    validationSchema={groupSchema}\n                    onSubmit={(values, { resetForm }) => saveGroup(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/group/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedGroupId && savedGroupId !== 0 && props.match.path === '/group/create' ? \n                            <Notification id={savedGroupId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneGroup} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default GroupForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport GroupList from \"./components/groupList\";\nimport GroupForm from \"./components/groupForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Group = () => {\n    return (\n        <Container>\n            <Route path=\"/group/list\" component={withRouter(GroupList)} />\n            <Route path=\"/group/edit/:id\" component={GroupForm} />\n            <Route path=\"/group/create\" component={GroupForm} />\n        </Container>\n    )\n};\n\nexport default Group;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const milkRates =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const milkRatesSchema = Yup.object().shape({\n    type: Yup.string()\n        .required('This is a Required Field'),\n\n    pageName: Yup.string()\n        .required('This is a Required Field'),\n        \n    goodFat: Yup.string()\n        .required('This is a Required Field'),\n\n    goodSnf: Yup.string()\n        .required('This is a Required Field'),\n\n    badFat: Yup.string()\n        .required('This is a Required Field'),\n\n    badSnf: Yup.string()\n        .required('This is a Required Field')\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { milkRates } from './model'\n\nexport const getIsFetchingMilkRates = (state, props) => state.milkRates.params.isFetching\nexport const getIsMilkRatesFetched = (state, props) => state.milkRates.params.milkRatesFetched\nexport const getSavedMilkRatesId = (state, props) => state.milkRates.params.savedMilkRatesId\nexport const getMilkRatesList = (state, prop) => state.milkRates.byId\nexport const getNotification = (state, id) => state.milkRates.notifications[id]\n\nexport const getMilkRates = (state, props) => {\n    return milkRates()\n}\nexport const getMilkRatesParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/milkRates/create')){ \n        params.title = state.milkRates.params.createTitle\n        params.submitButtonText = state.milkRates.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/milkRates/edit/')){ \n        params.title = state.milkRates.params.editTitle\n        params.submitButtonText = state.milkRates.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const settings = useSelector(state => select.getMilkRatesList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { milkRatesSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editMilkRates, setNotifyDoneMilkRates } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MilkRatesForm = (props) => {\r\n    \r\n    const milkRates = useSelector(state => select.getMilkRates(state, props))\r\n    const savedMilkRatesId = useSelector(state => select.getSavedMilkRatesId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMilkRates = (values, resetForm) => {\r\n        dispatch(editMilkRates(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Milk Price / Rates</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={milkRates}\r\n                    validationSchema={milkRatesSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveMilkRates(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMilkRatesId && savedMilkRatesId !== 0 ? \r\n                            <Notification id={savedMilkRatesId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMilkRates} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MilkRatesForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MilkRatesForm from \"./components/milkRatesForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst MilkRates = () => {\n    return (\n        <Container>\n            <Route path=\"/milkRates/update\" component={withRouter(MilkRatesForm)} />\n        </Container>\n    )\n};\n\nexport default MilkRates;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const standard =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const standardSchema = Yup.object().shape({\n\n  type: Yup.string()\n  .required('This is a Required Field'),\n\n  pageName: Yup.string()\n    .required('This is a Required Field'),\n    \n  goodFat: Yup.string()\n    .required('This is a Required Field'),\n\n  goodSnf: Yup.string()\n    .required('This is a Required Field'),\n\n  badFat: Yup.string()\n    .required('This is a Required Field'),\n\n  badSnf: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { standard } from './model'\n\nexport const getIsFetchingStandard = (state, props) => state.standard.params.isFetching\nexport const getIsStandardFetched = (state, props) => state.standard.params.standardFetched\nexport const getSavedStandardId = (state, props) => state.standard.params.savedStandardId\nexport const getStandardList = (state, prop) => state.standard.byId\nexport const getNotification = (state, id) => state.standard.notifications[id]\n\nexport const getStandard = (state, props) => {\n    return standard()\n}\n\nexport const getStandardParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/standard/create')){ \n        params.title = state.standard.params.createTitle\n        params.submitButtonText = state.standard.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/standard/edit/')){ \n        params.title = state.standard.params.editTitle\n        params.submitButtonText = state.standard.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const settings = useSelector(state => select.getStandardList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { standardSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editStandard, setNotifyDoneStandard } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst StandardForm = (props) => {\r\n\r\n    const standard = useSelector(state => select.getStandard(state, props))\r\n    const savedStandardId = useSelector(state => select.getSavedStandardId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveStandard = (values, resetForm) => {\r\n        dispatch(editStandard(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Standard</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={standard}\r\n                    validationSchema={standardSchema}\r\n                    onSubmit={(values, { resetForm }) => saveStandard(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedStandardId && savedStandardId !== 0 ? \r\n                            <Notification id={savedStandardId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneStandard} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StandardForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport StandardForm from \"./components/standardForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Standard = () => {\n    return (\n        <Container>\n            <Route path=\"/standard/update\" component={withRouter(StandardForm)} />\n        </Container>\n    )\n};\n\nexport default Standard;\n\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const misc =  () => ({\n    \"typeName\": \"\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"updatedOn\": \"\",\n    \"value\": \"\",\n    \"operation\": \"\",\n    \"operationOn\": \"\",\n    \"createdOn\" : \"\",\n    \"status\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const miscSchema = Yup.object().shape({\n\n  name: Yup.string()\n  .required('This is a Required Field'),\n\n  value: Yup.string()\n    .required('This is a Required Field'),\n\n  operationOn: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { misc } from './model'\n\nexport const getIsFetchingMisc = (state, props) => state.misc.params.isFetching\nexport const getIsMiscFetched = (state, props) => state.misc.params.miscFetched\nexport const getSavedMiscId = (state, props) => state.misc.params.savedMiscId\nexport const getMiscList = (state, prop) => state.misc.byId\nexport const getMiscListByName = (state, name) => state.misc.byId[name]\nexport const getNotification = (state, id) => state.misc.notifications[id]\n\nexport const getMisc = (state, props) => {\n    return misc()\n}\n\nexport const getMiscParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/misc/create')){ \n        params.title = state.misc.params.createTitle\n        params.submitButtonText = state.misc.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/misc/edit/')){ \n        params.title = state.misc.params.editTitle\n        params.submitButtonText = state.misc.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst MiscNameTypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const misc = useSelector(state => select.getMiscList(state, props))\n    const opt = [{\n        key : \"Commision\",\n        value : \"Commision\",\n        text : \"Commision\"\n    }\n    // ,{\n    //     key : \"Head Load\",\n    //     value : \"Head Load\",\n    //     text : \"Head Load\"\n    // }\n    ,{\n        key : \"Sour Milk\",\n        value : \"Sour Milk\",\n        text : \"Sour Milk\"\n    }]\n\n    const getSelectedValue = (values) => {\n        values = values.trim()\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('name', values)\n            userProps.setField('id', misc[values] ? misc[values].id ? misc[values].id : '' : '')\n            userProps.setField('typeName', misc[values] ? misc[values].typeName ? misc[values].typeName.trim() : '' : '')\n            userProps.setField('operation', misc[values] ? misc[values].operation ? misc[values].operation.trim() : '' : '')\n            userProps.setField('operationOn', misc[values] ? misc[values].operationOn ? misc[values].operationOn.trim() : '' : '')\n            userProps.setField('value', misc[values] ? misc[values].value ? misc[values].value : '' : '')\n            userProps.setField('description', misc[values] ? misc[values].description ? misc[values].description : '' : '')\n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default MiscNameTypeSelect;\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst MiscOperationType = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\r\n    const opt = [{\r\n        key : \"QTY(KG)\",\r\n        value : \"QTY(KG)\",\r\n        text : \"QTY(KG)\"\r\n    },{\r\n        key : \"Milk Price\",\r\n        value : \"Milk Price\",\r\n        text : \"Milk Price\"\r\n    },{\r\n        key : \"FAT/SNF(KG)\",\r\n        value : \"FAT/SNF(KG)\",\r\n        text : \"FAT/SNF(KG)\"\r\n    }]\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MiscOperationType;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { miscSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\r\nimport MiscNameType from './miscNameType'\r\nimport MiscOperationType from './miscOperationType'\r\nimport * as select from '../data/selectors'\r\nimport { editMisc, setNotifyDoneMisc } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MiscForm = (props) => {\r\n\r\n    const misc = useSelector(state => select.getMisc(state, props))\r\n    const savedMiscId = useSelector(state => select.getSavedMiscId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMisc = (values, resetForm) => {\r\n        console.log(values, \"------------------saving values\")\r\n        dispatch(editMisc(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Misc</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"miscForm\" size=\"large\" width={5}\r\n                    initialValues={misc}\r\n                    validationSchema={miscSchema}\r\n                    onSubmit={(values, { resetForm }) => saveMisc(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscNameType name=\"name\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    {values.name !== \"Sour Milk\" ? \r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Operation On: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscOperationType name=\"operationOn\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    : null }\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Value (Rs.): </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"value\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Description: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"description\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 200, displayCount: false, height: 3}} focus={true}/>\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMiscId && savedMiscId !== 0 ? \r\n                            <Notification id={savedMiscId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMisc} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MiscForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MiscForm from \"./components/miscForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Misc = () => {\n    return (\n        <Container>\n            <Route path=\"/misc/update\" component={withRouter(MiscForm)} />\n        </Container>\n    )\n};\n\nexport default Misc;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const finYear =  () => ({\n    \n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSchema = Yup.object().shape({\n\n    \n\n  });\n\nexport const finYearSearchList =  () => ({\n    fintype: \"\",\n    finco: \"\",\n    fdt: \"\",\n    tdt: \"\"\n})\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSearchListSchema = Yup.object().shape({\n    fdt: Yup.string()\n                .required('This is a Required Field'),\n    \n    tdt: Yup.string()\n                .required('This is a Required Field')\n\n  });","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { finYear } from './model'\n\nexport const getIsFetchingFinYear = (state, props) => state.finYear.params.isFetching\nexport const getIsFinYearFetched = (state, props) => state.finYear.params.finYearFetched\nexport const getSavedFinYearId = (state, props) => state.finYear.params.savedFinYearId\nexport const getFinYearList = (state, prop) => state.finYear.byId\nexport const getActiveSessionYear = (state, prop) => state.finYear.params.activeSessionYear\nexport const getNotification = (state, id) => state.finYear.notifications[id]\nexport const getFinYearObject = (state, id) => state.finYear.byId[id]\n\nexport const getFinYear = (state, props) => {\n    if(props.match.path==='/finYear/create'){\n        return finYear()\n    }\n    if(props.match.path==='/finYear/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.finYear.byListId[_id]);\n        return obj\n    }\n}\n\nexport const getFinYearParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/finYear/create')){ \n        params.title = state.finYear.params.createTitle\n        params.submitButtonText = state.finYear.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/finYear/edit/')){ \n        params.title = state.finYear.params.editTitle\n        params.submitButtonText = state.finYear.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\nexport const selectFinYearList = createSelector(\n    getFinYearList,\n    finYear => { \n        const keys = Object.keys(finYear)\n        // const obj = keys.map( (key) => { return { value : key, label : year[key].name }})\n        const obj = keys.map( (key) => { return { key : key,  value : key, text : finYear[key].sessionName }})\n        return obj\n    })","import React, { useState } from 'react'\r\nimport store from 'store2'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Container, Button, Table, Icon, Dropdown, Modal } from 'semantic-ui-react'\r\nimport * as select from '../data/selectors'\r\nimport { createFinYear, setNotifyDoneFinYear } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\nconst FinYearForm = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [year, setYear] = useState(false)\r\n    const dispatch = useDispatch()\r\n    \r\n    const finYearFetched = useSelector(state => select.getIsFinYearFetched(state, props))\r\n    const savedFinYearId = useSelector(state => select.getSavedFinYearId(state, props))\r\n    const options = useSelector(state => select.selectFinYearList(state, props))\r\n    \r\n    const onchangeDD = (value) => {\r\n        setYear(value)\r\n    }\r\n\r\n    const addNewFinYear = () => {\r\n        setDisplayStatus(true)\r\n    }\r\n\r\n    const addFinYear = () => {\r\n        dispatch(createFinYear({}))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    const setSessionAndGoToApp = () => {}\r\n\r\n    return (\r\n        <Container className='formContainer'>\r\n            <Table>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Financial Year: </label></Table.Cell>\r\n                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                        {\r\n                            !finYearFetched && options.length > 0 ? \r\n                                <>Loading</> \r\n                            : \r\n                                <Dropdown clearable options={options} selection style={{float: 'right', width: '85%'}} onChange={(e, { value }) => onchangeDD(value)}/>\r\n                        }\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n            <Modal open={displayStatus} size='mini' trigger={<Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'left' }} onClick={() => addNewFinYear()}>Add Year<Icon name='add circle' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header>Confirmation</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Do you want to add new Financial Year?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => addFinYear(false)} positive labelPosition='right' icon='checkmark' content='Yes'/>\r\n                    <Button onClick={() => setDisplayStatus(false)} negative labelPosition='right' icon='close' content='No'/>\r\n                </Modal.Actions>\r\n            </Modal>\r\n            <Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }} onClick={() => setSessionAndGoToApp()}>\r\n                Go\r\n                <Icon name='arrow alternate circle right' />\r\n            </Button>\r\n            <br /><br /><br /><br />\r\n            {savedFinYearId && savedFinYearId !== 0 ? \r\n                <Notification id={savedFinYearId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneFinYear} type='save'/>\r\n            :\r\n            null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FinYearForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport FinYearForm from \"./components/finYearForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst FinYear = () => {\n    return (\n        <Container>\n            <Route path=\"/finyear\" component={withRouter(FinYearForm)} />\n        </Container>\n    )\n};\n\nexport default FinYear;\n\n","import { createSelector } from 'reselect'\nimport { cloneDeep } from 'lodash'\nimport { purchase, purchaseDetails } from './model'\nimport store from 'store2'\n\nexport const getIsFetchingPurchase = (state, props) => state.purchase.params.isFetching\nexport const getIsPurchaseFetched = (state, props) => state.purchase.params.purchaseFetched\nexport const getSavedPurchaseId = (state, props) => state.purchase.params.savedPurchaseId\nexport const getIsPurchaseDeleted = (state, props) => state.purchase.params.purchaseDeleted\nexport const getPurchaseList = (state, prop) => state.purchase.byListId\nexport const getPurchaseById = (state, id) => state.purchase.byListId[id]\nexport const getNotification = (state, id) => state.purchase.notifications[id]\nexport const getMaxBillNo = (state, id) => state.purchase.params.maxBillNo\n\nexport const getPurchase = (state, props) => {\n    if(props.match.path==='/purchase/create'){\n        return purchase()\n    }\n    if(props.match.path==='/purchase/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.purchase.byListId[_id])\n        let partyM = obj.partyMaster ? obj.partyMaster.id : 0\n        obj.partyM = partyM\n        return obj\n    }\n}\n\nexport const getVdetailsObj = (state, object, index, getId, getIndex, combination) => {\n    if(index === \"\"){\n        let obj = purchaseDetails()\n        let shift = store.session('getShift')\n        obj.shift = shift\n        if(combination){\n            obj.setStandard = combination.setStandard\n            obj.setRate = combination.setRate\n        }\n        return obj\n    }else{\n        let obj = {}\n        if(object && index !== \"\" && getId !== undefined && getId !== null && object.purchaseVoucherDetails){\n            let purchaseDetails\n            if(getId !== null && getId !== undefined && getId !== \"\"){\n                purchaseDetails = object.purchaseVoucherDetails.filter((element) => {\n                    return parseInt(element.id, 10) === parseInt(getId, 10);\n                })\n                obj = purchaseDetails ? purchaseDetails[0] : {}\n            }else{\n                obj = object.purchaseVoucherDetails[getIndex]\n            }\n            cloneDeep(obj);\n        }\n        return obj\n    }\n}\n\nexport const getPurchaseParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/purchase/create'){\n        params.title = state.purchase.params.createTitle\n        params.submitButtonText = state.purchase.params.createSubmitButtonText        \n    }else if(props.match.path==='/purchase/edit/:id'){\n        params.title = state.purchase.params.editTitle\n        params.submitButtonText = state.purchase.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectPurchase = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : purchase[key].purchaseName }})\n        return obj\n    }\n)\n\nexport const listingPurchaseBySid = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map((key) => { \n            return purchase[key]\n        }).sort((a,b) => {\n             return  a.sId - b.sId \n        })\n        return obj\n    }\n)","import * as Yup from 'yup'\nimport moment from 'moment'\n\nexport const purchase =  () => ({\n    \"periodFromDate\": \"\",\n    \"totalFatAmount\": \"\",\n    \"totalSnfAmount\": \"\",\n    \"totalQty\": \"\",\n    \"deductOthersType\": \"\",\n    \"adjustmentType\": \"\",\n    \"addAdvanceNarration\": \"\",\n    \"totalKgfat\": \"\",\n    \"shareType\": \"\",\n    \"commissionValue\": \"\",\n    \"sourMilkType\": \"\",\n    \"headLoadType\": \"\",\n    \"deductAdvanceNarration\": \"\",\n    \"testEquipMentValue\": \"\",\n    \"sourMilkNarration\": \"\",\n    \"id\": \"\",\n    \"commissionNarration\": \"\",\n    \"billNo\": \"\",\n    \"cattleFeedType\": \"\",\n    \"addOthersNarration\": \"\",\n    \"testEquipMentType\": \"\",\n    \"lateArrivalType\": \"\",\n    \"addOthersValue\": \"\",\n    \"billDate\": \"\",\n    \"updatedOn\": \"\",\n    \"vaccineType\": \"\",\n    \"mtevalue\": \"\",\n    \"totalRejected\": \"\",\n    \"splIncentiveNarration\": \"\",\n    \"fodderNarration\": \"\",\n    \"purchaseVoucherDetails\": [],\n    \"splIncentiveValue\": \"\",\n    \"billTotal\": \"\",\n    \"sourMilkValue\": \"\",\n    \"periodToDate\": \"\",\n    \"addAdvanceType\": \"\",\n    \"shareValue\": \"\",\n    \"arrearNarration\": \"\",\n    \"adjustment\": \"\",\n    \"headLoadNarration\": \"\",\n    \"deductOthersValue\": \"\",\n    \"arrearValue\": \"\",\n    \"shareNarration\": \"\",\n    \"cowLoanNarration\": \"\",\n    \"totalSour\": \"\",\n    \"fodderType\": \"\",\n    \"createdOn\": \"\",\n    \"headLoadValue\": \"\",\n    \"deductAdvanceType\": \"\",\n    \"partyM\": \"\",\n    \"vaccineValue\": \"\",\n    \"totalMilkprice\": \"\",\n    \"mtenarration\": \"\",\n    \"cowLoanValue\": \"\",\n    \"addOthersType\": \"\",\n    \"vaccineNarration\": \"\",\n    \"deductAdvanceValue\": \"\",\n    \"totalAdditions\": \"\",\n    \"cattleFeedNarration\": \"\",\n    \"netAmount\": \"\",\n    \"totalDeductions\": \"\",\n    \"mtetype\": \"\",\n    \"addAdvanceValue\": \"\",\n    \"testEquipMentNarration\": \"\",\n    \"lateArrivalValue\": \"\",\n    \"lateArrivalNarration\": \"\",\n    \"commissionType\": \"\",\n    \"splIncentiveType\": \"\",\n    \"arrearType\": \"\",\n    \"fodderValue\": \"\",\n    \"cowLoanType\": \"\",\n    \"adjustmentValue\": \"\",\n    \"adjustmentNarration\": \"\",\n    \"cattleFeedValue\": \"\",\n    \"deductOthersNarration\": \"\",\n    \"totalKgsnf\": \"\",\n    \"totalAvgRateKg\": \"\",\n    \"totalGoodFat\": \"\",\n    \"totalGoodSnf\": \"\",\n    \"totalAvgKg\": \"\",\n    \"totalBadFat\": \"\",\n    \"totalBadSnf\": \"\",\n    \"headLoadCalVal\": \"\"\n})\n\nexport const purchaseSchema = Yup.object().shape({\n\n    periodFromDate: Yup.string()\n                .required('This is a Required Field'),\n    periodToDate: Yup.string()\n                .required('This is a Required Field'),\n    billDate: Yup.string()\n                .required('This is a Required Field'),\n    billNo: Yup.string()\n                .required('This is a Required Field'),\n    partyM: Yup.string()\n                .required('This is a Required Field')\n\n  });\n\nexport const purchaseDetails =  () => ({\n    \"date\": \"\",\n    \"sourQty\": \"\",\n    \"updatedOn\": null,\n    \"createdOn\": null,\n    \"kgFat\": \"\",\n    \"snfRate\": \"\",\n    \"rejectedQty\": \"\",\n    \"clrP\": \"\",\n    \"snfP\": \"\",\n    \"fatRate\": \"\",\n    \"fatAmount\": \"\",\n    \"pvid\": \"\",\n    \"qty\": \"\",\n    \"fatP\": \"\",\n    \"snfAmount\": \"\",\n    \"id\": \"\",\n    \"kgSnf\": \"\",\n    \"milkPrice\": \"\",\n    \"remarks\": \"\",\n    \"milkRate\": \"\",\n    \"setStandard\": \"\",\n    \"setRate\": \"\",\n    \"shift\": \"\",\n    \"fatQuality\": \"\",\n    \"snfQuality\": \"\"\n  })\n\nexport const purchaseDetailsSchema = Yup.object().shape({\n\n    date: Yup.string()\n                .required('This is a Required Field')\n\n});\n\nexport const purchaseSearch = () => ({\n  'party': '',\n  'fromDt': '',\n  'toDt': '',\n  'type': 'All'\n})","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst PartySelect = ({ name, isTxn, isLabel, label, isSelection, setState, placeholder }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} placeholder={placeholder} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PartySelect;","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst ListSearchType = ({ name, isTxn, isLabel, label, isSelection, disabled, setListSearch }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"All\",\r\n        value : \"All\",\r\n        text : \"All\"\r\n    },{\r\n        key : \"Bill Wise\",\r\n        value : \"Bill Wise\",\r\n        text : \"Bill Wise\"\r\n    },{\r\n        key : \"Period Wise\",\r\n        value : \"Period Wise\",\r\n        text : \"Period Wise\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        setListSearch(values)\r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, isDisable: disabled }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ListSearchType;\r\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deletePurchase, setNotifyDonePurchase, postPrintPurchase, postMultiplePrintPurchase, deleteMultiPurchase, fetchAllPurchase, clearSavedId } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Form, Modal, Checkbox, Loader, Dimmer } from 'semantic-ui-react'\nimport { FormikDateComponent } from '../../../utilities/formUtils'\nimport { fetchPurchase, fetchPurchasePeriod } from '../data/actions'\nimport { purchaseSearch } from '../data/model'\nimport Notification from '../../../utilities/notificationUtils'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport PartySelect from '../../party/components/partySelect'\nimport moment from 'moment'\nimport { getPartyObjById } from '../../party/data/selectors'\nimport ListSearchType from './listSearchType'\n\nconst Purchase = props => {\n    const dispatch = useDispatch();\n\n    const [deletePurchaseId, setDeletePurchaseId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const party = useSelector(state => getPartyObjById(state, props.purchase ? props.purchase.partyMaster.id : 0))\n\n    const deletePurchaseFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deletePurchase(getVlaue))\n        setDeletePurchaseId(values)\n        setModalOption({status: false, id: 0})\n    }\n\n    const printPurchaseFromList = (values) => {\n        dispatch(postPrintPurchase(values))\n    }\n    \n    const onDoubleClickEvent = (e, id) => {\n        props.selectClickRow(e, props.purchase.id)\n        props.history.push('/purchase/edit/'+id)\n    }\n\n    return (\n        <Table.Row id={'activeRow'+props.purchase.id} onDoubleClick={(e)=> onDoubleClickEvent(e, props.purchase.id)} onClick={(e) => props.selectClickRow(e, props.purchase.id)} active={props.selectRow === props.purchase.id ? true : false}>\n            <Table.Cell> \n                <center><Checkbox className=\"allCheckBox\" onChange={props.compute} id={props.purchase.id} name={props.purchase.id}/></center>\n            </Table.Cell>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.purchase.billNo}</Table.Cell>\n            <Table.Cell>{party.partyName}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.billDate).isValid() ? moment(props.purchase.billDate).format(\"DD-MM-YYYY\") : \"\"}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.periodFromDate).isValid() ? moment(props.purchase.periodFromDate).format(\"DD/MM\") : \"\"} - {moment(props.purchase.periodToDate).isValid() ? moment(props.purchase.periodToDate).format(\"DD/MM\") : \"\"}</Table.Cell>\n            <Table.Cell>{props.purchase.totalQty ? parseFloat(props.purchase.totalQty).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgfat ? parseFloat(props.purchase.totalKgfat).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgsnf ? parseFloat(props.purchase.totalKgsnf).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAvgKg ? parseFloat(props.purchase.totalAvgKg).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAdditions ? parseFloat(props.purchase.totalAdditions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalDeductions ? parseFloat(props.purchase.totalDeductions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.billTotal ? parseFloat(props.purchase.billTotal).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalRejected ? parseFloat(props.purchase.totalRejected).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalSour ? parseFloat(props.purchase.totalSour).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>\n                <>\n                    <Icon title=\"Print\" name=\"print\" style={{ cursor: 'pointer', color: '#496d91'}} onClick={() => printPurchaseFromList(props.purchase.id)} />\n                    <span>&nbsp;&nbsp;</span>\n                    <Link id={\"edit\"+props.purchase.id} to={\"/purchase/edit/\" + props.purchase.id}>\n                        <Icon title=\"Edit\" name=\"pencil alternate\" style={{ cursor: 'pointer', color: '#496d91' }} />\n                    </Link><span>&nbsp;&nbsp;</span>\n                    {/* <span style={{ cursor: 'pointer', color: 'blue' }} onClick={() => editPurchaseFromList(props.purchase.id)}>Edit&nbsp;&nbsp;</span> */}\n                    <Icon title=\"Delete\" name=\"trash\" style={{ cursor: 'pointer', color: '#d44837' }} onClick={() => setModalOption({status: true, id: props.purchase.id})} />\n                </>\n                <>\n                {/* {console.log(deletePurchaseId)} */}\n                    { \n                        deletePurchaseId ?\n                            <Notification id={deletePurchaseId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDonePurchase} type='delete'/>\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Purchase?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePurchaseFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PurchaseList = (props) => {\n    // Loading Logic if tasks not fetched\n    const purchase = useSelector(state => select.listingPurchaseBySid(state, props))\n    const savedPurchaseId = useSelector(state => select.getSavedPurchaseId(state, props))\n    const isPurchaseDeleted = useSelector(state => select.getIsPurchaseDeleted(state, props))\n    const dispatch = useDispatch()\n    const addPurchaseClick = () => {\n        props.history.push('/purchase/create')\n    }\n\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [modal, setModal] = useState({status: false, id: 0})\n    const [checkedIds, setCheckedIds] = useState('')\n    const [selectRow, setSelectRow] = useState(null)\n    const [listSearch, setListSearch] = useState('All')\n\n    useEffect(() => {\n        if(savedPurchaseId){\n            setSelectRow(savedPurchaseId)\n            if(savedPurchaseId !== undefined && savedPurchaseId !== null && savedPurchaseId !== 0 && savedPurchaseId !== ''){\n                const top = document.getElementById('activeRow'+savedPurchaseId).getBoundingClientRect().top\n                console.log(savedPurchaseId)\n                console.log(document.getElementById('activeRow'+savedPurchaseId).getBoundingClientRect())\n                window.scrollTo(0, top)\n                dispatch(clearSavedId())\n            }\n        }        \n    }, [savedPurchaseId])\n\n    const calculateTotal = (e, { checked }) => {\n         if (checked){ \n            setCheckedIds(checkedIds + ',' + e.target.name) \n        }else { \n            setCheckedIds(checkedIds.replace(','+e.target.name, '')) \n        }\n    }\n\n    const unCheckAllCheckBox = () => {\n        let shadesEl = document.querySelectorAll('.allCheckBox');\n        console.log(shadesEl.length)\n        for (var i = 0; i < shadesEl.length; i++) {\n            if(shadesEl[i].classList.contains(\"checked\")){\n                shadesEl[i].lastChild.click()\n            }\n        }        \n        setCheckedIds(\"\")\n    }\n\n    const fetchList = (values, resetForm) => {\n        // console.log(values)\n        // dispatch(fetchPurchase('11/2019-01-01/2020-12-01'))\n        if (values.fromDt !== undefined && values.toDt !== undefined && values.fromDt !== \"\" && values.toDt !== \"\") {\n            let fromDt = moment(values.fromDt),\n                toDt = moment(values.toDt);\n            if(toDt >= fromDt){\n                let linkCreate = values.party === \"\" ? 0+\"/\"+values.fromDt+\"/\"+values.toDt : 0+\"/\"+values.party+\"/\"+values.fromDt+\"/\"+values.toDt\n                if(values.type === \"Bill Wise\"){\n                    dispatch(fetchPurchase(linkCreate))\n                }else{\n                    dispatch(fetchPurchasePeriod(linkCreate))\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            dispatch(fetchAllPurchase())\n        }\n    }\n\n    const addPurchaseBulkPrint = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            dispatch(postMultiplePrintPurchase(checkedIds))\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectPrint'})\n        }\n    }\n\n    const addPurchaseBulkDelete = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            setModal({status: true, id: 0})\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectDelete'})\n        }\n    }\n\n    const callToDeleteData = () => {\n        dispatch(deleteMultiPurchase(checkedIds))\n        setModal({status: false, id: 0})\n    }\n\n    const selectClickRow = (e, pid) => {\n        setSelectRow(pid)\n    }\n        \n    return (\n        <Container>\n            {\n                isPurchaseDeleted ? \n                    <div>\n                        <Dimmer active>\n                            <Loader size=\"big\">\n                                Please Wait...<br/>Deleting Purchase <br/><br/> \n                                <font className=\"warningLoader\" style={{color: 'red'}}>\n                                    Please do not close the Browser\n                                </font>\n                            </Loader>\n                        </Dimmer>\n                    </div>\n                 :\n                    null\n            } \n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Purchase List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={12} floated={'right'} align='right'>\n                        <Formik id=\"purchaseForm\" size=\"large\" width={10}\n                            initialValues={purchaseSearch()}\n                            onSubmit={(values, { resetForm }) => fetchList(values, resetForm)}\n                            render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                                <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={10} onSubmit={handleSubmit}>\n                                    <Form.Group widths={1}>\n                                        <Table style={{width: '100%'}} className='purchasetablePop' basic='very'>\n                                            <Table.Body>\n                                                <Table.Row>\n                                                    <Table.Cell style={{width: '70%', padding: '0px'}} textAlign='right'>\n                                                        <Table style={{width: '100%'}} className='purchasetablePop' basic='very'>\n                                                            <Table.Body>\n                                                                <Table.Row>\n                                                                    {\n                                                                        listSearch === \"All\" || listSearch === \"\" || listSearch === null || listSearch === undefined ? \n                                                                        <>\n                                                                            <Table.Cell style={{width: '90%', padding: '0px 5px'}} textAlign='right'></Table.Cell>\n                                                                            <Table.Cell style={{width: '10%', padding: '0px 5px'}} textAlign='right'>\n                                                                                <ListSearchType name=\"type\" isLabel={false} placeholder='Search Type' label=\" \" isSelection={true} type='' setListSearch={setListSearch} />\n                                                                            </Table.Cell>\n                                                                        </>\n                                                                        :\n                                                                        <>\n                                                                            <Table.Cell style={{width: '10%', padding: '0px 5px'}} textAlign='right'>\n                                                                                <ListSearchType name=\"type\" isLabel={false} placeholder='Search Type' label=\" \" isSelection={true} type='' setListSearch={setListSearch} />\n                                                                            </Table.Cell>\n                                                                            <Table.Cell style={{width: '30%', padding: '0px 5px'}} textAlign='right'>\n                                                                                <PartySelect name=\"party\" isLabel={false} placeholder='Supplier' label=\" \" isSelection={true} type=''/>\n                                                                            </Table.Cell>\n                                                                            <Table.Cell style={{width: '30%', padding: '0px 5px'}} textAlign='right'>\n                                                                                <Field name=\"fromDt\" label=' ' placeholder={'From Date'} component={FormikDateComponent} />\n                                                                            </Table.Cell>\n                                                                            <Table.Cell style={{width: '30%', padding: '0px 5px'}} textAlign='right'>\n                                                                                <Field name=\"toDt\" label=' ' placeholder={'To Date'} component={FormikDateComponent} />\n                                                                            </Table.Cell>\n                                                                        </>\n                                                                    }\n                                                                    \n                                                                </Table.Row>\n                                                            </Table.Body>\n                                                        </Table>\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '30%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Button type=\"submit\" icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk'>\n                                                            Go<Icon name='arrow alternate circle right'/>\n                                                        </Button>\n                                                        <Button type='button' title='Add' icon className=\"customeBTNListOnlyIcon\" color='vk' onClick={() => addPurchaseClick()}>\n                                                            <Icon name='add' />\n                                                        </Button>\n                                                        <Button type='button' title='Print' icon className=\"customeBTNListOnlyIcon\" color='vk' onClick={() => addPurchaseBulkPrint()}>\n                                                            <Icon name='print' />\n                                                        </Button>\n                                                        <Button type='button' title='Delete' icon className=\"customeBTNListOnlyIcon\" color='google plus' onClick={() => addPurchaseBulkDelete()}>\n                                                            <Icon name='trash alternate outline' />\n                                                        </Button>\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            </Table.Body>\n                                        </Table>\n                                    </Form.Group>\n                                </Form>\n                            )}\n                        />\n                        <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                            <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                            <Modal.Content>\n                                <p>\n                                    {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : (modalState.keyWord === 'notselectDelete' ? 'No purchase checked to delete' : (modalState.keyWord === 'notselectPrint' ? 'No purchase checked to print' : '')))}\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                            </Modal.Actions>\n                        </Modal>\n                        <Modal open={modal.status} size='mini' onClose={() => setModal({status: false, id: 0})}>\n                            <Modal.Header>Confirmation</Modal.Header>\n                            <Modal.Content>\n                                <p>Do you want to delete checked Purchases?</p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => callToDeleteData()} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                                <Button onClick={() => setModal({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                            </Modal.Actions>\n                        </Modal>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell>\n                            <center><Icon name=\"minus square outline\" style={{cursor: 'pointer'}} title=\"Uncheck All\" onClick={() => unCheckAllCheckBox()}/></center>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell>Bill No.</Table.HeaderCell>\n                        <Table.HeaderCell>Supplier</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Bill Period</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>FAT(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>SNF(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>AVG(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Addi(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Dedu(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                        <Table.HeaderCell>Rej(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Sour(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {Object.keys(purchase).map((key, index) =>\n                        <Purchase compute={calculateTotal} purchase={purchase[key]} key={purchase[key].id} index={index} selectClickRow={selectClickRow} selectRow={selectRow} history={props.history}/>)}\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PurchaseList;\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getPartyObjById } from '../data/selectors'\r\nimport { Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { getGroupById } from '../../group/data/selectors'\r\nimport { getBankById } from '../../bank/data/selectors'\r\n\r\n\r\nconst PartyDisplayView = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const partyObj = useSelector(state => getPartyObjById(state, props.partyId))\r\n    const group = useSelector(state => getGroupById(state, partyObj ? partyObj.groupMaster ? partyObj.groupMaster.id : 0 : 0))\r\n    const bank = useSelector(state => getBankById(state, partyObj ? partyObj.bankMaster ? partyObj.bankMaster.id : 0 : 0))\r\n\r\n    return (\r\n        <Modal size='large' closeIcon open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={() => setDisplayStatus(true)}><Icon name='eye' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Details</Modal.Header>\r\n            <Modal.Content>\r\n                {partyObj ?\r\n                    <Table>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.plantNo}\r\n                                </Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={3} style={{ width: '60%' }}>\r\n                                    {partyObj.plantName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.address}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.phone}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {bank ? bank.bankName === undefined ? '' : bank.bankName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyBankAccNo}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.balance}\r\n                                </Table.Cell>\r\n                                <Table.Cell colSpan={4} style={{ width: '60%' }}>\r\n                                    <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.nickName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {group ? group.groupName === undefined ? '' : group.groupName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    : null}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PartyDisplayView;","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst TypeTxnSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Flush\",\r\n        value : \"Flush\",\r\n        text : \"Flush\"\r\n    },{\r\n        key : \"Lean\",\r\n        value : \"Lean\",\r\n        text : \"Lean\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        setField(name, values)\r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TypeTxnSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport store from 'store2'\r\n    \r\n\r\nconst ShiftSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Morning\",\r\n        value : \"Morning\",\r\n        text : \"Morning\"\r\n    },{\r\n        key : \"Evening\",\r\n        value : \"Evening\",\r\n        text : \"Evening\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        store.session(\"getShift\", values)\r\n        console.log(\"session--------\", store.session(\"getShift\"))\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, setField: setField, setValue: store.session(\"getShift\") }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShiftSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst QualitySelect = ({ name, isTxn, isLabel, label, isSelection, disabled }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Good\",\r\n        value : \"Good\",\r\n        text : \"Good\"\r\n    },{\r\n        key : \"Bad\",\r\n        value : \"Bad\",\r\n        text : \"Bad\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, isDisable: disabled }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default QualitySelect;\r\n","import { startsWith, cloneDeep } from 'lodash'\n\nexport const getIsFetchingCombination = (state, props) => state.combination.params.isFetching\nexport const getIsCombinationFetched = (state, props) => state.combination.params.combinationFetched\nexport const getSavedCombinationId = (state, props) => state.combination.params.savedCombinationId\nexport const getCombinationList = (state, prop) => state.combination.byId\nexport const getCombinationById = (state, id) => state.combination.byId[id]\nexport const getNotification = (state, id) => state.combination.notifications[id]\n\nexport const getCombination = (state, id) => {\n    let obj = cloneDeep(state.combination.byId[id])\n    return obj\n}\n\nexport const getCombinationParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/combination/create')){ \n        params.title = state.combination.params.createTitle\n        params.submitButtonText = state.combination.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/combination/edit/')){ \n        params.title = state.combination.params.editTitle\n        params.submitButtonText = state.combination.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getVdetailsObj } from '../data/selectors'\r\nimport { Form, Button, Modal, Table, Checkbox } from 'semantic-ui-react';\r\nimport { Formik, Field, Form as FormikForm } from 'formik';\r\nimport { FormikAmountComponent, FormikTextAreaComponent, FormikDateComponent } from '../../../utilities/formUtils'\r\nimport TypeTxnSelect from './typeTxnSelect'\r\nimport ShiftSelect from './shiftSelect'\r\nimport QualitySelect from './qualitySelect'\r\nimport store from 'store2'\r\nimport { getMilkRatesList } from '../../milkRates/data/selectors'\r\nimport { getStandardList } from '../../standard/data/selectors'\r\nimport { getCombinationById } from '../../combination/data/selectors'\r\nimport Draggable from 'react-draggable'\r\n\r\nimport moment from 'moment'\r\n\r\nconst AddQuickVdetails = ({ setItemObject, setNextDate, nextDate, index, voucherObj, name, setField, values, ...props }) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [modalState, setModalState] = useState({ isOpen: false, keyWord: '' })\r\n    const [netQty, setNetQty] = useState(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n    const [isAuto, setIsAuto] = useState(false)\r\n    const [isCLRhas, setIsCLRhas] = useState(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n    const [popNextDate, setPopNextDate] = useState(nextDate)\r\n    const [onOpen, setOnOpen] = useState(false)\r\n\r\n    const combination = useSelector(state => getCombinationById(state, 1))\r\n    const vdetails = useSelector(state => getVdetailsObj(state, voucherObj, index, store.get(\"setId\"), store.get(\"setIndex\"), combination))\r\n    // console.log(\"vdetails-==========\", vdetails)\r\n    const milkRates = useSelector(state => getMilkRatesList(state, props))\r\n    const standard = useSelector(state => getStandardList(state, props))\r\n\r\n    useEffect(() => {\r\n        if (index === \"y\" && onOpen) {\r\n            setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n            setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n            setOnOpen(false)\r\n            let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n            let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n            store.session('getShift', shiftGet)\r\n        }\r\n    }, [vdetails])\r\n\r\n    const saveItems = (value, resetForm) => {\r\n        let flag = false,\r\n            qty = value.qty === undefined ? 0 : value.qty === \"\" ? 0 : value.qty,\r\n            rejectQty = value.rejectedQty === undefined ? 0 : value.rejectedQty === \"\" ? 0 : value.rejectedQty,\r\n            sourQty = value.sourQty === undefined ? 0 : value.sourQty === \"\" ? 0 : value.sourQty,\r\n            milkPrice = value.milkPrice === undefined ? 0 : value.milkPrice === \"\" ? 0 : value.milkPrice\r\n        if (qty === 0 && rejectQty === 0 && sourQty === 0) {\r\n            flag = false\r\n            setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n        } else {\r\n            if (qty !== 0) {\r\n                if (milkPrice === 0) {\r\n                    flag = false\r\n                    setModalState({ isOpen: true, keyWord: 'calculate' })\r\n                } else {\r\n                    flag = true\r\n                }\r\n            } else {\r\n                flag = true\r\n            }\r\n        }\r\n        if (flag) {\r\n            if (index === '') {\r\n                let new_date = moment(value.date, \"YYYY-MM-DD\").add('days', 1),\r\n                    day = new_date.format('DD'),\r\n                    month = new_date.format('MM'),\r\n                    year = new_date.format('YYYY')\r\n                setItemObject(values, value, setField)\r\n                if(isAuto){\r\n                    store.session('getShift', value.shift)\r\n                }else{\r\n                    store.session('getShift', value.shift === \"Morning\" ? \"Evening\" : \"Morning\")\r\n                }\r\n                resetForm()\r\n                setNextDate(year+'-'+month+'-' +day)\r\n                setPopNextDate(year+'-'+month+'-' +day)\r\n            } else {\r\n                setItemObject(values, value, setField, store.get(\"setIndex\"))\r\n                setDisplayStatus(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeWindow = () => {\r\n        setDisplayStatus(false)\r\n        if(isAuto === false){\r\n            store.session('getShift', null)\r\n        }\r\n    }\r\n \r\n    const onChangeQty = (values, setField) => {\r\n        setNetQty(values)\r\n        if (values === \"\" || values === 0) {\r\n            setField('clrP', '')\r\n            setField('fatP', '')\r\n            setField('snfP', '')\r\n            setField('fatQuality', '')\r\n            setField('snfQuality', '')\r\n            setField('fatRate', '')\r\n            setField('snfRate', '')\r\n            setField('kgFat', '')\r\n            setField('kgSnf', '')\r\n            setField('fatAmount', '')\r\n            setField('snfAmount', '')\r\n            setField('milkRate', '')\r\n            setField('milkPrice', '')\r\n        }\r\n    }\r\n\r\n    const onChangeCLR = (values, setField) => {\r\n        if (values === \"\" || values === 0) {\r\n            setIsCLRhas(false)\r\n        } else {\r\n            setIsCLRhas(true)\r\n            setField('snfP', '')\r\n        }\r\n    }\r\n\r\n    const getOpenPopup = () => {\r\n        setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n        setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n        let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n        setIsAuto(getAuto)\r\n        setOnOpen(true)\r\n        store.session('isAuto', getAuto)\r\n        let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n        store.session('getShift', shiftGet)\r\n        setPopNextDate(nextDate)\r\n        if (index === \"y\") {\r\n            if (store.get(\"setIndex\") !== undefined && store.get(\"setIndex\") !== null) {\r\n                setDisplayStatus(true)\r\n            }\r\n        } else {\r\n            setDisplayStatus(true)\r\n        }\r\n    }\r\n\r\n    const setAutoTiming = (values, ischeck) => {\r\n        setIsAuto(ischeck)\r\n        store.session('isAuto', ischeck)\r\n        store.session('getShift', values.shift)\r\n    }\r\n\r\n    const calculateRate = (setField, values) => {\r\n        if (values.setStandard !== \"\" && values.setRate !== \"\") {\r\n            if (values.qty !== \"\" && values.qty !== 0) {\r\n                if (values.fatP !== \"\" && values.fatP !== 0) {\r\n                    if ((values.snfP !== undefined && values.snfP !== \"\" && values.snfP !== 0 && isCLRhas === false) || (isCLRhas === true && values.clrP !== undefined && values.clrP !== '' && values.clrP !== 0)) {\r\n                        let getStandard = values.setStandard\r\n                        let getMilkRate = values.setRate\r\n                        let standardObj = standard[getStandard]\r\n                        let milkRateObj = milkRates[getMilkRate]\r\n                        let qtyGet = values.qty\r\n                        let fat = values.fatP\r\n                        let clr = values.clrP\r\n                        let snf = isCLRhas === false ? values.snfP : ((parseFloat(clr) / 4) + (0.25 * parseFloat(fat)) + 0.44)\r\n                        if (isCLRhas) {\r\n                            setField('snfP', snf)\r\n                        }\r\n                        let fatType = parseFloat(fat) >= parseFloat(standardObj.goodFat) ? \"Good\" : \"Bad\"\r\n                        let snfType = parseFloat(snf) >= parseFloat(standardObj.goodSnf) ? \"Good\" : \"Bad\"\r\n                        setField('fatQuality', fatType)\r\n                        setField('snfQuality', snfType)\r\n                        let fatRate = fatType === \"Good\" ? milkRateObj.goodFat : milkRateObj.badFat\r\n                        let snfRate = fatType === \"Good\" ? milkRateObj.goodSnf : milkRateObj.badSnf\r\n                        setField('fatRate', fatRate)\r\n                        setField('snfRate', snfRate)\r\n                        let kgFat = (parseFloat(qtyGet) * parseFloat(fat)) / 100\r\n                        let kgSnf = (parseFloat(qtyGet) * parseFloat(snf)) / 100\r\n                        setField('kgFat', kgFat)\r\n                        setField('kgSnf', kgSnf)\r\n                        let fatAmt = parseFloat(kgFat) * parseFloat(fatRate)\r\n                        let snfAmt = parseFloat(kgSnf) * parseFloat(snfRate)\r\n                        setField('fatAmount', fatAmt)\r\n                        setField('snfAmount', snfAmt)\r\n                        let totalRs = parseFloat(fatAmt) + parseFloat(snfAmt)\r\n                        let milkRatePerKg = parseFloat(totalRs) / parseFloat(qtyGet)\r\n                        setField('milkRate', milkRatePerKg)\r\n                        setField('milkPrice', totalRs)\r\n                    } else {\r\n                        setModalState({ isOpen: true, keyWord: 'clrsnf' })\r\n                    }\r\n                } else {\r\n                    setModalState({ isOpen: true, keyWord: 'fatP' })\r\n                }\r\n            } else {\r\n                setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n            }\r\n        } else {\r\n            setModalState({ isOpen: true, keyWord: 'setDD' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Draggable handle=\".headerModal\">\r\n            <Modal open={displayStatus} dimmer={'inverted'} className=\"noDimmer\" closeOnEscape={false} closeIcon closeOnDimmerClick={false} trigger={<Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }} onClick={() => getOpenPopup()}>{index === '' ? 'Add' : 'Edit'}</Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header className=\"headerModal\" style={{cursor: 'move'}}>\r\n                    Add Details\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                        initialValues={vdetails}\r\n                        // validationSchema={itemsQuickSchema}\r\n                        onSubmit={(values, { resetForm }) => saveItems(values, resetForm)}\r\n                        render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                            <Form key={index} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                                <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                    <Table.Body>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Standard</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <TypeTxnSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Rate Name</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <TypeTxnSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Supply Date</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <Field name=\"date\" label=' ' component={FormikDateComponent} setDateManually={popNextDate}/>\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Checkbox label='Auto' checked={isAuto ? true : false} onChange={(e, { checked }) => setAutoTiming(values, checked)} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <ShiftSelect name=\"shift\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell colSpan='4' style={{ width: '100%', padding: '0px' }}>\r\n                                                <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                                    <Table.Body>\r\n                                                        <Table.Row className=\"VInputPanel\">\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '25%' }}>\r\n                                                                <Form.Group widths={2}>\r\n                                                                    <Field name=\"qty\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeQty} />\r\n                                                                </Form.Group>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity(R)</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <Field name=\"rejectedQty\" label=' ' component={FormikAmountComponent} tabindex={'-1'}/>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity(S)</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <Field name=\"sourQty\" label=' ' component={FormikAmountComponent} tabindex={'-1'}/>\r\n                                                            </Table.Cell>\r\n                                                        </Table.Row>\r\n                                                    </Table.Body>\r\n                                                </Table>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Table.Body>\r\n                                </Table>\r\n                                <Table style={{ width: '100%', margin: '0px' }}>\r\n                                    <Table.Body>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">CLR</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"clrP\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeCLR} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Quality</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Rate / Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Total Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Amount</label>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">Fat</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"fatP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <QualitySelect name=\"fatQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"fatRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"kgFat\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"fatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">SNF</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"snfP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : (isCLRhas === true ? true : false)} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <QualitySelect name=\"snfQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"snfRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"kgSnf\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"snfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell colSpan='2' style={{ width: '20%' }}>\r\n                                                <center><Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' disabled={netQty === \"\" || netQty === 0 ? true : false} onClick={() => { calculateRate(setFieldValue, values) }}>Calc Rate</Button></center>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Milk Rate / Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"milkRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Total Rs.</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"milkPrice\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">Remarks</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell colSpan='3' style={{ width: '55%' }}>\r\n                                                <Field name=\"remarks\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 100, displayCount: false, height: 1 }} focus={true} tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell colSpan='2' style={{ width: '40%' }}>\r\n                                                <div style={{float: 'right'}}>\r\n                                                    <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> {index === '' ? 'Add' : 'Update'} </Button>\r\n                                                    <Button type='button' onClick={() => closeWindow()} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> Close </Button>\r\n                                                </div>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Table.Body>\r\n                                </Table>\r\n                                <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({ isOpen: false, keyWord: '' })}>\r\n                                    <Modal.Header style={{ color: 'red' }}>Warning</Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <p>\r\n                                            {modalState.keyWord === 'calculate' ? 'Please enter details and calculate milk price' : (modalState.keyWord === 'anyqty' ? 'Please enter quantity' : (modalState.keyWord === \"setDD\" ? 'Please select Standard and Rate Name' : (modalState.keyWord === \"fatP\" ? 'Please enter FAT' : (modalState.keyWord === \"clrsnf\" ? 'Please enter CLR or SNF' : ''))))}\r\n                                        </p>\r\n                                    </Modal.Content>\r\n                                    <Modal.Actions>\r\n                                        <Button onClick={() => setModalState({ isOpen: false, keyWord: '' })} negative labelPosition='right' icon='checkmark' content='Okay' />\r\n                                    </Modal.Actions>\r\n                                </Modal>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default AddQuickVdetails;","import React, { useState } from 'react'\r\nimport {Table, TableBody, Modal, Button, Icon } from 'semantic-ui-react'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from 'moment'\r\nimport store from 'store2'\r\nimport { StickyTable, Row, Cell } from 'react-sticky-table'\r\n\r\n\r\nexport const VdetailsNonEditable = ({\r\n  name, move, swap, push, insert, unshift, pop, setField, remove, // { name, value, onChange, onBlur }\r\n  form: { initialValues, values, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  ...props\r\n}) => {\r\n\r\n    let arrKeys = [];\r\n    const fieldName = name;\r\n    if (values[fieldName] && values[fieldName].length) {\r\n        arrKeys = Object.keys(values[fieldName]);\r\n    }\r\n    \r\n    values[fieldName].sort(function(a, b) {\r\n        a = new Date(a.date);\r\n        b = new Date(b.date);\r\n        return a>b ? 1 : a<b ? -1 : 0;\r\n    });\r\n\r\n    const [isActive, setIsActive] = useState(null)\r\n\r\n    const onclickRow = (index, id) => {\r\n        store.set(\"setIndex\", index)\r\n        store.set(\"setId\", id)\r\n        setIsActive(index)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: '150px', width: \"100%\"}}>\r\n                <StickyTable className='tableLayout CustomeFormPurchase' stickyHeaderCount={1} stickyColumnCount={0} style={{width: '100%'}}>\r\n                    <Row id=\"headerRowObj\" style={{width: '100%'}}>\r\n                        <Cell style={{width: '100%'}} className='borderNoneObj borderBottomObj'>         \r\n                            <Table basic='very' selectable className='purchasetableSticky' style={{width: \"100%\"}}>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell style={{width: '10%'}} title=\"Date\">Date</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"Qty\">Qty</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"CLR\">CLR</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"FAT(%)\">FAT(%)</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"SNF(%)\">SNF(%)</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"KGFat\">KGFat</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"KGSNF\">KGSNF</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"FatRate\">FatRate</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"SnfRate\">SnfRate</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"FatAmt\">FatAmt</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"SnfAmt\">SnfAmt</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"MilkPrice\">MilkPrice</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"MilkRate\">MilkRate</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"R.Qty\">R.Qty</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '5%'}} title=\"S.Qty\">S.Qty</Table.HeaderCell>\r\n                                        <Table.HeaderCell style={{width: '20%'}} width={3} title=\"Remarks\">Remarks</Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                            </Table>\r\n                        </Cell>\r\n                    </Row>\r\n                    <Row style={{height: '130px'}}>\r\n                        <Cell>\r\n                            <Table basic='very' selectable className='purchasetableSticky' style={{width: \"100%\"}}>\r\n                                <TableBody>\r\n                                {values[fieldName] && values[fieldName].length > 0 ? (\r\n                                    arrKeys.map((index) => (\r\n                                        <Table.Row key={`${fieldName}[${index}]`} active={isActive === index ? true : false} className=\"VInputPanel\" onClick={() => onclickRow(index, values[fieldName][index].id)}>\r\n                                            <Table.Cell style={{width: '10%'}}>\r\n                                                {moment(values[fieldName][index].date).format('DD-MM-YYYY')}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].qty ? parseFloat(values[fieldName][index].qty).toFixed(3) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].clrP ? parseFloat(values[fieldName][index].clrP).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].fatP ? parseFloat(values[fieldName][index].fatP).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].snfP ? parseFloat(values[fieldName][index].snfP).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].kgFat ? parseFloat(values[fieldName][index].kgFat).toFixed(3) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].kgSnf ? parseFloat(values[fieldName][index].kgSnf).toFixed(3) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].fatRate ? parseFloat(values[fieldName][index].fatRate).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].snfRate ? parseFloat(values[fieldName][index].snfRate).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].fatAmount ? parseFloat(values[fieldName][index].fatAmount).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].snfAmount ? parseFloat(values[fieldName][index].snfAmount).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].milkPrice ? parseFloat(values[fieldName][index].milkPrice).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].milkRate ? parseFloat(values[fieldName][index].milkRate).toFixed(2) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].rejectedQty ? parseFloat(values[fieldName][index].rejectedQty).toFixed(3) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '5%'}}>\r\n                                                {values[fieldName][index].sourQty ? parseFloat(values[fieldName][index].sourQty).toFixed(3) : ''}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{width: '20%'}}>\r\n                                                {values[fieldName][index].remarks}\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        )\r\n                                    )) : null}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Cell>\r\n                    </Row>\r\n                </StickyTable>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VdetailsNonEditable;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikTextAreaComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddNotesCommon = ({setItemObject, name, setField, setValueFor, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addNotes = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.addNote)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' className='labelButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}>N</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Note</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                 //initialValues={vdetails}\r\n                // validationSchema={itemsQuickSchema}\r\n                onSubmit={(values, {resetForm}) => addNotes(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name='addNote' label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 3, value: setValueFor}} focus={true}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNotesCommon;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddHeadLoad = ({setItemObject, name, setField, setValueFor, afterWork, sendValue, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addHeadLoad = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.headLoad)\r\n        sendValue[name] = values.headLoad\r\n        afterWork(sendValue, setField)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}><Icon name='question'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Head Load Value</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                onSubmit={(values, {resetForm}) => addHeadLoad(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name=\"headLoad\" label=' ' component={FormikAmountComponent} setValue={setValueFor}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddHeadLoad;","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPurchase, getPurchaseParams, getSavedPurchaseId, getNotification, getMaxBillNo } from '../data/selectors'\nimport { createPurchase, editPurchase, setNotifyDonePurchase } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, FieldArray, Form as FormikForm } from 'formik'\nimport { FormikInputComponent, FormikDateComponent, FormikTextAreaComponent, FormikAmountComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\nimport PartySelect from '../../party/components/partySelect'\nimport PartyDisplayView from \"../../party/components/partyDisplayView\"\nimport AddQuickVdetails from './addQuickVdetails'\nimport VdetailsNonEditable from './vdetailsNonEditable'\nimport store from 'store2'\nimport AddNotesCommon from './addNotePopUpCommon'\nimport AddHeadLoad from './addHeadLoadPopup'\nimport { getMiscListByName } from '../../misc/data/selectors'\nimport moment from 'moment'\n\n\nconst PurchaseForm = (props) => {\n\n    const purchase = useSelector(state => getPurchase(state, props))\n    const savedPurchaseId = useSelector(state => getSavedPurchaseId(state, props))\n    const params = useSelector(state => getPurchaseParams(state, props))\n    const commisionMisc = useSelector(state => getMiscListByName(state, 'Commision'))\n    const sourMilkMisc = useSelector(state => getMiscListByName(state, 'Sour Milk'))\n    const maxBillNo = useSelector(state => getMaxBillNo(state, props))\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [nextDate, setNextDate] = useState()\n    const [commissionValGet, setCommissionValGet] = useState('')\n    const [commissionOn, setCommissionOn] = useState('')\n    const [sourValGet, setSourValGet] = useState('')\n    const [sourOn, setSourOn] = useState('')\n    const [headLoadOn, setHeadLoadOn] = useState('')\n\n    const billNo = purchase ? (purchase.billNo ? purchase.billNo : maxBillNo) : maxBillNo\n\n    const [partyId, setPartyId] = useState(purchase ? (purchase.partyMaster ? purchase.partyMaster.id : 0) : 0)\n\n    useEffect(() => {\n        store.remove(\"setId\")\n        store.remove(\"setIndex\")\n        window.scrollTo(0, 0)\n    }, [])\n    \n\n    const savePurchase = (values, resetForm, initialValue) => {\n        if(values.billDate !== undefined && values.billDate !== '' && values.billDate !== 0){\n            if(values.periodFromDate !== undefined && values.periodFromDate !== '' && values.periodFromDate !== 0){\n                if(values.periodToDate !== undefined && values.periodToDate !== '' && values.periodToDate !== 0){\n                    let fromDt = moment(values.periodFromDate),\n                        toDt = moment(values.periodToDate);\n                    if(toDt >= fromDt){\n                        if(values.partyM !== undefined && values.partyM !== '' && values.partyM !== 0){\n                            if(Object.keys(values.purchaseVoucherDetails).length > 0){\n                                values.partyMaster = {id: values.partyM}\n                                delete values.partyM\n                                if (props.match.path === '/purchase/create') {\n                                    dispatch(createPurchase(values))\n                                    resetForm(initialValue)\n                                    setNextDate(null)\n                                }\n                                if (props.match.path === '/purchase/edit/:id') {\n                                    dispatch(editPurchase(values))\n                                    props.history.push(`/purchase/list`)\n                                }\n                            }else{\n                                setModalState({isOpen: true, keyWord: 'Please enter purchase details row'})\n                            }\n                        }else{\n                            setModalState({isOpen: true, keyWord: 'Please select Supplier'})\n                        }\n                    }else{\n                        setModalState({isOpen: true, keyWord: 'Period To Date should be greater than Period From Date'})\n                    }\n                }else{\n                    setModalState({isOpen: true, keyWord: 'Please enter Period To Date'})\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'Please enter Period From Date'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'Please enter Bill Date'})\n        }\n    }\n\n    function getVdArr (setField) {\n        return <FieldArray name='purchaseVoucherDetails' component={VdetailsNonEditable} setField={setField}/>\n    }\n\n    const setItemObjectAdd = (values, value, setField) => {\n        values.purchaseVoucherDetails.push(value)\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectEdit = (values, value, setField, index) => {\n        values.purchaseVoucherDetails[index] = value\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectDelete = (values, setField) => {\n        if(store.get(\"setId\") !== null && store.get(\"setId\") !== undefined && store.get(\"setId\") !== \"\"){\n            let purchaseDetails = values.purchaseVoucherDetails,\n                id = store.get(\"setId\"),\n                newPurchaseDetails =  purchaseDetails.filter((element) => {\n                    return parseInt(element.id, 10) !== parseInt(id, 10);\n                })\n            setField('purchaseVoucherDetails', newPurchaseDetails)\n            values.purchaseVoucherDetails = newPurchaseDetails\n            callSetAllData(setField, values)\n        }\n    }\n\n    const callSetAllData = (setField, values) => {\n        let totalRejectedQty = 0\n        let totalSourQty = 0\n        let totalKgFat = 0\n        let totalKgSnf = 0\n        let totalFatAmt = 0\n        let totalSnfAmt = 0\n        let totalMilkprice = 0\n        let ratePerKg = 0\n        let totalQty = 0\n        let totalGoodFat = 0\n        let totalGoodSnf = 0\n        let totalBadFat = 0\n        let totalBadSnf = 0\n        let pDetails = values.purchaseVoucherDetails\n        if(Object.keys(pDetails).length > 0){\n            for(let i = 0; i < Object.keys(pDetails).length; i++){\n                if(pDetails[i]){\n                    totalRejectedQty = parseFloat(totalRejectedQty) + parseFloat((pDetails[i].rejectedQty === null || pDetails[i].rejectedQty === undefined || pDetails[i].rejectedQty === \"\") ? 0 : pDetails[i].rejectedQty)\n                    totalSourQty = parseFloat(totalSourQty) + parseFloat((pDetails[i].sourQty === null || pDetails[i].sourQty === undefined || pDetails[i].sourQty === \"\") ? 0 : pDetails[i].sourQty)\n                    totalKgFat = parseFloat(totalKgFat) + parseFloat((pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat)\n                    totalKgSnf = parseFloat(totalKgSnf) + parseFloat((pDetails[i].kgSnf === null|| pDetails[i].kgSnf === undefined|| pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf)\n                    totalFatAmt = parseFloat(totalFatAmt) + parseFloat((pDetails[i].fatAmount === null || pDetails[i].fatAmount === undefined || pDetails[i].fatAmount === \"\") ? 0 : pDetails[i].fatAmount)\n                    totalSnfAmt = parseFloat(totalSnfAmt) + parseFloat((pDetails[i].snfAmount === null || pDetails[i].snfAmount === undefined || pDetails[i].snfAmount === \"\") ? 0 : pDetails[i].snfAmount)\n                    totalMilkprice = parseFloat(totalMilkprice) + parseFloat((pDetails[i].milkPrice === null || pDetails[i].milkPrice === undefined || pDetails[i].milkPrice === \"\") ? 0 : pDetails[i].milkPrice)\n                    totalQty = parseFloat(totalQty) + parseFloat((pDetails[i].qty === null || pDetails[i].qty === undefined || pDetails[i].qty === \"\") ? 0 : pDetails[i].qty)\n                    totalGoodFat = parseFloat(totalGoodFat) + parseFloat(pDetails[i].fatQuality === \"Good\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalGoodSnf = parseFloat(totalGoodSnf) + parseFloat(pDetails[i].snfQuality === \"Good\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                    totalBadFat = parseFloat(totalBadFat) + parseFloat(pDetails[i].fatQuality === \"Bad\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalBadSnf = parseFloat(totalBadSnf) + parseFloat(pDetails[i].snfQuality === \"Bad\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                }\n            }\n            if(parseFloat(totalQty) !== 0){\n                ratePerKg = parseFloat(totalMilkprice) / parseFloat(totalQty)\n            }            \n        }\n        setField('totalRejected', totalRejectedQty)\n        setField('totalSour', totalSourQty)\n        setField('totalKgfat', totalKgFat)\n        setField('totalKgsnf', totalKgSnf)\n        setField('totalFatAmount', totalFatAmt)\n        setField('totalSnfAmount', totalSnfAmt)\n        setField('totalQty', totalQty)\n        setField('totalMilkprice', totalMilkprice)\n        setField('totalAvgRateKg', ratePerKg)\n        setField('totalAvgKg', totalQty)\n        setField('totalGoodFat', totalGoodFat)\n        setField('totalGoodSnf', totalGoodSnf)\n        setField('totalBadFat', totalBadFat)\n        setField('totalBadSnf', totalBadSnf)\n        values.totalRejected = totalRejectedQty\n        values.totalSour = totalSourQty\n        values.totalKgfat = totalKgFat\n        values.totalKgsnf = totalKgSnf\n        values.totalFatAmount = totalFatAmt\n        values.totalSnfAmount = totalSnfAmt\n        values.totalQty = totalQty\n        values.totalMilkprice = totalMilkprice\n        values.totalAvgRateKg = ratePerKg\n        values.totalAvgKg = totalQty\n        values.totalGoodFat = totalGoodFat\n        values.totalGoodSnf = totalGoodSnf\n        values.totalBadFat = totalBadFat\n        values.totalBadSnf = totalBadSnf\n        if(values.headLoadValue !== null && values.headLoadValue !== undefined && values.headLoadValue !== \"\"){\n            computeHeadLoad(values, setField)\n        }\n        if(values.commissionValue !== null && values.commissionValue !== undefined && values.commissionValue !== \"\"){\n            computeCommission(values, setField)\n        }\n        if(values.sourMilkValue !== null && values.sourMilkValue !== undefined && values.sourMilkValue !== \"\"){\n            computeSourMilk(values, setField)\n        }\n        nowSetTotalValue(values, setField)\n    }\n\n    const totalAdditionAndDeduction = (val, index, setField) => {\n        let purchaseV = val\n        let commissionValue = purchaseV.commissionValue && purchaseV.commissionValue !== \"\" ? purchaseV.commissionValue : 0\n        let lateArrivalValue = purchaseV.lateArrivalValue && purchaseV.lateArrivalValue !== \"\" ? purchaseV.lateArrivalValue : 0\n        let mtevalue = purchaseV.mtevalue && purchaseV.mtevalue !== \"\" ? purchaseV.mtevalue : 0\n        let cattleFeedValue = purchaseV.cattleFeedValue && purchaseV.cattleFeedValue !== \"\" ? purchaseV.cattleFeedValue : 0\n        let splIncentiveValue = purchaseV.splIncentiveValue && purchaseV.splIncentiveValue !== \"\" ? purchaseV.splIncentiveValue : 0\n        let headLoadValue = purchaseV.headLoadValue && purchaseV.headLoadValue !== \"\" ? purchaseV.headLoadValue : 0\n        let vaccineValue = purchaseV.vaccineValue && purchaseV.vaccineValue !== \"\" ? purchaseV.vaccineValue : 0\n        let fodderValue = purchaseV.fodderValue && purchaseV.fodderValue !== \"\" ? purchaseV.fodderValue : 0\n        let testEquipMentValue = purchaseV.testEquipMentValue && purchaseV.testEquipMentValue !== \"\" ? purchaseV.testEquipMentValue : 0\n        let sourMilkValue = purchaseV.sourMilkValue && purchaseV.sourMilkValue !== \"\" ? purchaseV.sourMilkValue : 0\n        let cowLoanValue = purchaseV.cowLoanValue && purchaseV.cowLoanValue !== \"\" ? purchaseV.cowLoanValue : 0\n        let shareValue = purchaseV.shareValue && purchaseV.shareValue !== \"\" ? purchaseV.shareValue : 0\n        let arrearValue = purchaseV.arrearValue && purchaseV.arrearValue !== \"\" ? purchaseV.arrearValue : 0\n        let addAdvanceValue = purchaseV.addAdvanceValue && purchaseV.addAdvanceValue !== \"\" ? purchaseV.addAdvanceValue : 0\n        let deductAdvanceValue = purchaseV.deductAdvanceValue && purchaseV.deductAdvanceValue !== \"\" ? purchaseV.deductAdvanceValue : 0\n        let deductOthersValue = purchaseV.deductOthersValue && purchaseV.deductOthersValue !== \"\" ? purchaseV.deductOthersValue : 0\n        let adjustmentValue = purchaseV.adjustmentValue && purchaseV.adjustmentValue !== \"\" ? purchaseV.adjustmentValue : 0\n        let addOthersValue = purchaseV.addOthersValue && purchaseV.addOthersValue !== \"\" ? purchaseV.addOthersValue : 0\n        let totalAddition = parseFloat(commissionValue) + parseFloat(lateArrivalValue) + parseFloat(splIncentiveValue) + parseFloat(headLoadValue) + parseFloat(testEquipMentValue) + parseFloat(sourMilkValue) + parseFloat(arrearValue) + parseFloat(addAdvanceValue) + parseFloat(adjustmentValue) + parseFloat(addOthersValue)\n        let totalDeduction = parseFloat(mtevalue) + parseFloat(cattleFeedValue) + parseFloat(vaccineValue) + parseFloat(fodderValue) + parseFloat(cowLoanValue) + parseFloat(shareValue) + parseFloat(deductAdvanceValue) + parseFloat(deductOthersValue)\n        setField('totalAdditions', totalAddition)\n        setField('totalDeductions', totalDeduction)\n        val.totalAdditions = totalAddition\n        val.totalDeductions = totalDeduction\n        nowSetTotalValue(val, setField)\n    }\n\n    const additionOnChange = (val, index, setField) => {\n        nowSetTotalValue(val, setField)\n    }\n\n    const nowSetTotalValue = (val, setField) => {\n        let milkPrice = val.totalMilkprice ? (val.totalMilkprice !== \"\" ? val.totalMilkprice : 0) : 0\n        let totalAdditions = val.totalAdditions ? (val.totalAdditions !== \"\" ? val.totalAdditions : 0 ) : 0\n        let totalDeductions = val.totalDeductions ? (val.totalDeductions !== \"\" ? val.totalDeductions : 0) : 0\n        let netAmount = ((parseFloat(milkPrice) + parseFloat(totalAdditions)) - parseFloat(totalDeductions))\n        setField('netAmount', netAmount)\n        let autoAdj = parseFloat(netAmount).toFixed(0)\n        let getAdj = parseFloat(netAmount) - parseFloat(autoAdj)\n        let billTotal = 0\n        let adjustment = 0\n        if(parseFloat(getAdj) > 0){\n            billTotal = autoAdj\n            adjustment = parseFloat(netAmount) - parseFloat(billTotal)\n        }else{\n            billTotal = parseFloat(autoAdj)\n            adjustment = parseFloat(billTotal) - parseFloat(netAmount)\n        }\n        setField('billTotal', parseFloat(billTotal).toFixed(2))\n        setField('adjustment', parseFloat(adjustment).toFixed(2))\n        val.netAmount = parseFloat(netAmount).toFixed(2)\n        val.billTotal = parseFloat(billTotal).toFixed(2)\n        val.adjustment = parseFloat(adjustment).toFixed(2)\n    }\n\n    const computeCommission = (values, setField) => {\n        let commisionValue = 0\n        if(commisionMisc){\n            let commissionVal = commisionMisc.value\n            setCommissionValGet(parseFloat(commissionVal).toFixed(2))\n            if(commisionMisc.operationOn === \"QTY(KG)\"){\n                let qty = values.totalQty === \"\" ? 0 : values.totalQty\n                commisionValue = parseFloat(qty) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue+\" Kg\")\n            }else if(commisionMisc.operationOn === \"Milk Price\"){\n                let milkP = values.totalMilkprice === \"\" ? 0 : values.totalMilkprice\n                commisionValue = parseFloat(milkP) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue)\n            }else if(commisionMisc.operationOn === \"FAT/SNF(KG)\"){\n                let kgFatSNF = parseFloat(values.totalKgfat) + parseFloat(values.totalKgsnf)\n                commisionValue = parseFloat(kgFatSNF) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue+\" Kg\")\n            } \n        }\n        setField('commissionValue', commisionValue)\n        values.commissionValue = commisionValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeHeadLoad = (values, setField) => {\n        let qty = values.totalQty === \"\" ? 0 : values.totalQty\n        let headLoadValue = parseFloat(qty) * parseFloat(values.headLoadCalVal !== null && values.headLoadCalVal !== \"\" ? values.headLoadCalVal : 0)\n        setField('headLoadValue', headLoadValue)\n        values.headLoadValue = headLoadValue\n        setHeadLoadOn((values.headLoadCalVal !== null && values.headLoadCalVal !== \"\" ? values.headLoadCalVal : 0)+\" Rs. on Quantity: \"+qty+\" Kg\")\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeSourMilk = (values, setField) => {\n        let sourMilkValue = 0\n        if(sourMilkMisc){\n            let sourMilkVal = sourMilkMisc.value\n            setSourValGet(sourMilkVal)\n            let qty = values.totalSour === \"\" ? 0 : values.totalSour\n            sourMilkValue = parseFloat(qty) * parseFloat(sourMilkVal)\n            setSourOn(qty)\n        }\n        setField('sourMilkValue', sourMilkValue)\n        values.sourMilkValue = sourMilkValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='txnContainer'>\n                <Formik id=\"purchaseForm\" size=\"large\" width={5}\n                    initialValues={purchase}\n                    onSubmit={(values, { resetForm }) => savePurchase(values, resetForm, purchase)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Bill No </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <label className=\"boldText\">{billNo}</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            <label className=\"boldText\">Date </label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billDate\" label=' ' component={FormikDateComponent}/>\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Period </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodFromDate\" label=' ' component={FormikDateComponent}/>\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><center><label className=\"boldText\">to</label></center></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodToDate\" label=' ' component={FormikDateComponent}/>\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}></Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '10%'}}><label className=\"boldText\">Supplier </label></Table.Cell>\n                                        <Table.Cell style={{width: '21%'}}>\n                                            <PartySelect name=\"partyM\" isLabel={false} label=\" \" isSelection={true} setState={setPartyId} userProps={{setField: setFieldValue, setName: 'partyM'}} type=''/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            {partyId !== 0 ? \n                                            <PartyDisplayView partyId={partyId}/>\n                                            :\n                                            <Button type='button' icon size='small' color='vk' title='Add Bank' style={{visibility: 'hidden'}}><Icon name='eye'/></Button>\n                                            }\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Rejected</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalRejected\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Sour</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalSour\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectAdd} index={''}  setField={setFieldValue} values={values} setNextDate={setNextDate} nextDate={nextDate ? nextDate : values.periodFromDate}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectEdit} index={'y'} voucherObj={values} setField={setFieldValue} values={values}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                        <Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='google plus' style={{ float: 'right' }} onClick={() => setItemObjectDelete(values, setFieldValue)}>Delete</Button>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '100%', padding: '0px'}}>\n                                            <Form.Group>\n                                                {getVdArr()}\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgfat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgsnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalFatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalSnfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">QTY(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalQty\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Milk Price</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalMilkprice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}} className='rightBorder'>\n                                            <center><label className=\"boldText\">Addition</label></center>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}>\n                                            <center><label className=\"boldText\">Deduction</label></center>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Commision\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"commissionValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeCommission(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='commissionNarration' setField={setFieldValue} setValueFor={(values.commissionNarration === null || values.commissionNarration === undefined || values.commissionNarration === \"\") ? (commisionMisc ? commissionValGet +\" \"+ commisionMisc.description+\" \"+commissionOn : '') : values.commissionNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Late Arrival\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"lateArrivalValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='lateArrivalNarration' setField={setFieldValue} setValueFor={values.lateArrivalNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            M.T.E\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"mtevalue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='mtenarration' setField={setFieldValue} setValueFor={values.mtenarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cattle Feed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cattleFeedValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cattleFeedNarration' setField={setFieldValue} setValueFor={values.cattleFeedNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            S.Incentive\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"splIncentiveValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='splIncentiveNarration' setField={setFieldValue} setValueFor={values.splIncentiveNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Head Load\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"headLoadValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddHeadLoad name='headLoadCalVal' setField={setFieldValue} setValueFor={values.headLoadCalVal} afterWork={computeHeadLoad} sendValue={values}/>\n                                            &nbsp;\n                                            <AddNotesCommon name='headLoadNarration' setField={setFieldValue} setValueFor={(values.headLoadNarration === null || values.headLoadNarration === undefined || values.headLoadNarration === \"\") ? headLoadOn : values.headLoadNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Vaccine\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"vaccineValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='vaccineNarration' setField={setFieldValue} setValueFor={values.vaccineNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Fodder Seed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"fodderValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='fodderNarration' setField={setFieldValue} setValueFor={values.fodderNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Testing Eqp\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"testEquipMentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='testEquipMentNarration' setField={setFieldValue} setValueFor={values.testEquipMentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Sour Milk\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"sourMilkValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeSourMilk(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='sourMilkNarration' setField={setFieldValue} setValueFor={values.sourMilkNarration === \"\" ? (sourMilkMisc ? sourValGet+\" \"+sourMilkMisc.description+\" \"+sourOn : values.totalSour) : values.sourMilkNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cow Loan\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cowLoanValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cowLoanNarration' setField={setFieldValue} setValueFor={values.cowLoanNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Share\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"shareValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='shareNarration' setField={setFieldValue} setValueFor={values.shareNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Arrear\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"arrearValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='arrearNarration' setField={setFieldValue} setValueFor={values.arrearNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addAdvanceNarration' setField={setFieldValue} setValueFor={values.addAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductAdvanceNarration' setField={setFieldValue} setValueFor={values.deductAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductOthersNarration' setField={setFieldValue} setValueFor={values.deductOthersNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Adjustment\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"adjustmentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='adjustmentNarration' setField={setFieldValue} setValueFor={values.adjustmentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addOthersNarration' setField={setFieldValue} setValueFor={values.addOthersNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>                            \n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Rate/Kg\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgRateKg\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Good\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Additions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAdditions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Net Amount\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"netAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Avg(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgKg\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Bad\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Deductions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalDeductions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Adjustments\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"adjustment\" label=' ' component={FormikAmountComponent} compute={additionOnChange} isReadonly={true}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Notes\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '69%'}}>\n                                            <Field name=\"notes\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 1}} focus={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Bill Total</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"billTotal\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <div className=\"stickeyDiv\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{float: 'right'}}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/purchase/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                            {savedPurchaseId && savedPurchaseId !== 0 ? \n                            <Notification id={savedPurchaseId} notifySelector={getNotification} notifyDoneAction={setNotifyDonePurchase} type='save'/>\n                            :\n                            null}\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PurchaseForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport PurchaseList from \"./components/purchaseList\"\nimport PurchaseForm from \"./components/purchaseForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Purchase = () => {\n    return (\n        <Container>\n            <Route path=\"/purchase/list\" component={withRouter(PurchaseList)} />\n            <Route path=\"/purchase/edit/:id\" component={PurchaseForm} />\n            <Route path=\"/purchase/create\" component={PurchaseForm} />\n        </Container>\n    )\n};\n\nexport default Purchase;\n\n","export const POST_REGISTER_SUMMARY = 'POST_REGISTER_SUMMARY'\nexport const POST_REGISTER_ALLPARTY = 'POST_REGISTER_ALLPARTY'\nexport const POST_REGISTER_SINGLEPARTY = 'POST_REGISTER_SINGLEPARTY'\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikMultiSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst MultiPartySelect = ({ name, isTxn, isLabel, label, isSelection, setState }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikMultiSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MultiPartySelect;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../data/model'\nimport { postSummaryDetails, postAllPartyDetails, postSinglePartyDetails } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikDateComponent, FormikCheckBoxComponent } from '../../../utilities/formUtils'\nimport MultiPartySelect from '../../party/components/multiPartySelect'\nimport moment from 'moment'\n\n\nconst RegisterForm = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n\n    const postRegister = (values, resetForm) => {\n        if(values.fromDate !== \"\" && values.toDate !== \"\"){\n            let fromDt = moment(values.fromDate),\n                toDt = moment(values.toDate);\n            if(toDt >= fromDt){\n                if(values.type === \"Summary\"){\n                    let summaryData = values.fromDate+\"/\"+values.toDate\n                    dispatch(postSummaryDetails(summaryData))\n                    resetForm()\n                }else if(values.type === \"Detailed\"){\n                    if(values.partytype === \"All Suppliers\"){\n                        let allPartyData = values.fromDate+\"/\"+values.toDate\n                        dispatch(postAllPartyDetails(allPartyData))\n                        resetForm()\n                    }else if(values.partytype === \"Selected Supplier\"){\n                        values.partyid = values.partyid.toString()\n                        let singlePartyData = values.partyid+\"/\"+values.fromDate+\"/\"+values.toDate\n                        dispatch(postSinglePartyDetails(singlePartyData))\n                        resetForm()\n                    }\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }        \n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Milk Purchase Register</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"registerForm\" size=\"large\" width={5}\n                    initialValues={register()}\n                    onSubmit={(values, { resetForm }) => postRegister(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    {console.log(values)}\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">From Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"fromDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">To Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"toDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Summary'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Detailed'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    {values.type === \"Detailed\" ? \n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'All Suppliers'}} defaultCheck={true} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'Selected Supplier'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                    {values.partytype === \"Selected Supplier\" ? \n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}>\n                                            <label className=\"boldText\">Party Name: </label>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='3' style={{width: '80%'}}>\n                                            <MultiPartySelect name=\"partyid\" isLabel={false} label=\" \" isSelection={true} type=''/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                </Table.Body>\n                            </Table>\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                Print\n                                <Icon name='print'/>\n                            </Button>\n                            <br/><br/><br/><br/>\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : '')}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default RegisterForm;","import * as type from './types'\n\nexport function postSummaryDetails(register) {\n    return {\n        type: type.POST_REGISTER_SUMMARY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postAllPartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postSinglePartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n","\nexport const register =  () => ({\n    \"fromDate\": \"\",\n    \"toDate\": \"\",\n    \"type\": \"\",\n    \"partytype\": \"\",\n    \"partyid\": \"\"\n})\n\n","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport RegisterForm from \"./components/register\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Register = () => {\n    return (\n        <Container>\n            <Route path=\"/register/list\" component={withRouter(RegisterForm)} />\n        </Container>\n    )\n};\n\nexport default Register;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const combination =  () => ({\n    \"setStandard\": \"\",\n    \"setRate\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const combinationSchema = Yup.object().shape({\n    setStandard: Yup.string()\n        .required('This is a Required Field'),\n\n    setRate: Yup.string()\n        .required('This is a Required Field'),\n});\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { combinationSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Form as FormikForm } from 'formik'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editCombination, setNotifyDoneCombination } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst CombinationForm = (props) => {\r\n    \r\n    const combination = useSelector(state => select.getCombination(state, '1'))\r\n    const savedCombinationId = useSelector(state => select.getSavedCombinationId(state, props))\r\n    const dispatch = useDispatch()\r\n    const saveCombination = (values, resetForm) => {\r\n        dispatch(editCombination(values))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Combination</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={combination}\r\n                    validationSchema={combinationSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveCombination(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Standard Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Milk Rate Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedCombinationId && savedCombinationId !== 0 ? \r\n                            <Notification id={savedCombinationId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneCombination} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CombinationForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport CombinationForm from \"./components/combinationForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Combination = () => {\n    return (\n        <Container>\n            <Route path=\"/combination/update\" component={withRouter(CombinationForm)} />\n        </Container>\n    )\n};\n\nexport default Combination;\n\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport * as select from '../data/selectors'\r\n\r\nconst SessionDisplay = (props) => {\r\n    const activeSessionYear = useSelector(state => select.getActiveSessionYear(state, props))\r\n    const getAtiveSessionObj = useSelector(state => select.getFinYearObject(state, activeSessionYear))\r\n    \r\n    return (\r\n<>{getAtiveSessionObj !== null && getAtiveSessionObj != undefined ? getAtiveSessionObj.sessionName !== undefined && getAtiveSessionObj.sessionName !== null ? getAtiveSessionObj.sessionName : \"\" : \"\"}</>\r\n    )\r\n};\r\n\r\nexport default SessionDisplay;\r\n","import React from 'react';\nimport {Route} from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter} from 'connected-react-router'\nimport { history } from '../../configureStore'\nimport { menu } from './menu'\n\nimport Party from '../party/index'\nimport Bank from '../bank/index'\nimport Group from '../group/index'\nimport MilkRates from '../milkRates/index'\nimport Standard from '../standard/index'\nimport Misc from '../misc/index'\nimport FinYear from '../finyear/index'\nimport Purchase from '../purchase/index'\nimport Register from '../register/index'\nimport Combination from '../combination/index'\nimport SessionDisplay from '../finyear/components/sessionDisplay'\n\nimport 'semantic-ui-less/semantic.less'\nimport { Container, Dropdown, Menu, Header, Icon } from 'semantic-ui-react'\n\nconst App = ({ stores }) => (\n  <Provider store = {stores}>\n    <ConnectedRouter history={history} >\n      <Container className=\"paddingTopOnly widhtSection\">\n        <Menu attached='top'>\n          <Menu.Item as={Link} to=\"/\"><Icon name='home'/></Menu.Item>\n          <Dropdown item icon='list' simple>\n            <Dropdown.Menu>\n              { menu.map((m, index) => {\n                return(\n                    <Dropdown.Item>\n                      <Icon name='dropdown' />\n                      <span className='text'>{m.title}</span>\n                      <Dropdown.Menu>\n                        { m.submenu.map((s, sindex) => {\n                          return(\n                          <Dropdown.Item text={s.title} key={sindex} as={Link} to={s.list}/>\n                          )\n                        })}\n                      </Dropdown.Menu>\n                    </Dropdown.Item>\n                  )\n              })}\n            </Dropdown.Menu>    \n          </Dropdown>\n          <Menu.Menu position='left'>\n            <Container className='headerMenuLeft'>\n              <Header as='h4' className=\"VerticalAlign topTen\" align='left'>\n                <SessionDisplay/>\n              </Header>\n            </Container>\n          </Menu.Menu>\n          <Menu.Menu position='right'>\n            <Container className='headerMenuRight'>\n              <Header as='h4' className=\"VerticalAlign topTen\" align='right'>Mayurakshi Co-operative Milk Producers' Union Ltd</Header>\n            </Container>\n            <Menu.Item as={Link} to=\"/\" onClick={() => window.location = \"http://localhost:8080/dairyfarm/logout\"}><Icon className=\"logoutRed\" name='power off'/></Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Route path=\"/party\" component={Party} />\n        <Route path=\"/bank\" component={Bank} />\n        <Route path=\"/group\" component={Group} />\n        <Route path=\"/milkRates\" component={MilkRates} />\n        <Route path=\"/standard\" component={Standard} />\n        <Route path=\"/misc\" component={Misc} />\n        <Route path=\"/finyear\" component={FinYear} />\n        <Route path=\"/purchase\" component={Purchase} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/combination\" component={Combination} />\n      </Container>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './modules/app/App';\nimport configureStore from './configureStore';\n\n\nimport './index.css';\n\n// Creating Store\nconst stores = configureStore()\nconst renderApp = () => ReactDOM.render(<App stores={stores}/>, document.getElementById('root'))\nrenderApp()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}