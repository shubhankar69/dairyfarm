{"version":3,"sources":["serviceWorker.js","store/monitorReducers.js","store/logger.js","store/txnMiddleware.js","store/localStorage.js","utilities/parseDate.js","modules/party/data/model.js","modules/party/data/selectors.js","modules/party/data/types.js","modules/party/data/actions.js","modules/app/serverError.js","store/path.js","modules/party/data/sagas.js","modules/bank/data/model.js","modules/bank/data/selectors.js","modules/bank/data/types.js","modules/bank/data/actions.js","modules/bank/data/sagas.js","modules/group/data/model.js","modules/group/data/selectors.js","modules/group/data/types.js","modules/group/data/actions.js","modules/group/data/sagas.js","modules/finyear/data/types.js","modules/finyear/data/actions.js","modules/finyear/data/sagas.js","modules/standard/data/types.js","modules/standard/data/actions.js","modules/standard/data/sagas.js","modules/milkRates/data/types.js","modules/milkRates/data/actions.js","modules/milkRates/data/sagas.js","modules/purchase/data/types.js","modules/purchase/data/actions.js","modules/purchase/data/sagas.js","modules/misc/data/types.js","modules/misc/data/actions.js","modules/misc/data/sagas.js","modules/register/data/sagas.js","modules/combination/data/types.js","modules/combination/data/actions.js","modules/combination/data/sagas.js","store/sagas.js","modules/party/data/reducers.js","modules/bank/data/reducers.js","modules/group/data/reducers.js","modules/finyear/data/reducers.js","modules/standard/data/reducers.js","modules/milkRates/data/reducers.js","modules/purchase/data/reducers.js","modules/misc/data/reducers.js","modules/combination/data/reducers.js","reducers.js","configureStore.js","modules/app/menu.js","utilities/notificationUtils.js","modules/party/components/partyList.js","utilities/dateUtils.js","utilities/formUtils.js","modules/party/components/plantSelect.js","modules/group/components/groupSelect.js","modules/bank/components/bankSelect.js","modules/group/components/groupPopup.js","modules/bank/components/bankPopup.js","modules/party/components/partyForm.js","modules/party/index.js","modules/bank/components/bankList.js","modules/bank/components/bankForm.js","modules/bank/index.js","modules/group/components/groupList.js","modules/group/components/groupForm.js","modules/group/index.js","modules/milkRates/data/model.js","modules/milkRates/data/selectors.js","modules/milkRates/components/typeSelect.js","modules/milkRates/components/milkRatesForm.js","modules/milkRates/index.js","modules/standard/data/model.js","modules/standard/data/selectors.js","modules/standard/components/typeSelect.js","modules/standard/components/standardForm.js","modules/standard/index.js","modules/misc/data/model.js","modules/misc/data/selectors.js","modules/misc/components/miscNameType.js","modules/misc/components/miscOperationType.js","modules/misc/components/miscForm.js","modules/misc/index.js","modules/finyear/data/model.js","modules/finyear/data/selectors.js","modules/finyear/components/finYearForm.js","modules/finyear/index.js","modules/purchase/data/selectors.js","modules/purchase/data/model.js","modules/party/components/partySelect.js","modules/purchase/components/purchaseList.js","modules/party/components/partyDisplayView.js","modules/purchase/components/typeTxnSelect.js","modules/purchase/components/shiftSelect.js","modules/purchase/components/qualitySelect.js","modules/combination/data/selectors.js","modules/purchase/components/addQuickVdetails.js","modules/purchase/components/vdetailsNonEditable.js","modules/purchase/components/addNotePopUpCommon.js","modules/purchase/components/addHeadLoadPopup.js","modules/purchase/components/purchaseForm.js","modules/purchase/index.js","modules/register/data/types.js","modules/party/components/multiPartySelect.js","modules/register/components/register.js","modules/register/data/actions.js","modules/register/data/model.js","modules/register/index.js","modules/combination/data/model.js","modules/combination/components/typeSelect.js","modules/combination/components/combinationForm.js","modules/combination/index.js","modules/app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","loggerMiddleware","store","next","group","type","info","result","getState","groupEnd","txnMiddleware","prevState","nextState","hasOwnProperty","txnid","v4","payload","error","err","difference","JSON","stringify","txn","id","fromAction","txnStatus","dt","moment","toJSON","dispatch","txns","combineReducers","txnLog","arguments","length","undefined","Object","objectSpread","defineProperty","loadState","serializedState","localStorage","getItem","parse","saveState","setItem","parseDateFromFormats","formats","parseStrict","Yup","transform","value","originalValue","isType","isValid","toDate","partySchema","shape","partyName","required","getIsPartyFetched","props","party","params","partyFetched","getPartyList","prop","byId","getPartyObjById","getNotification","notifications","selectParty","createSelector","keys","map","key","parseInt","text","CREATE_PARTY","SAVED_PARTY","EDIT_PARTY","EDITED_PARTY","FETCH_PARTY","FETCHED_PARTY","FETCHED_PARTY_BY_ID","NOTIFICATION_DONE_PARTY","DELETE_PARTY","DELETED_PARTY","PRINT_PARTY","fetchParty","setNotifyDoneParty","parseError","url","config","headers","data","response","status","statusText","message","stack","handlError","URL","createParty","saveParty","editParty","saveEditedParty","fetchPartyById","saveFetchedPartyById","requestParty","deleteParty","saveDeleteParty","postPartyPrint","sendPartyPrint","partySaga","regenerator_default","a","wrap","_context","prev","takeEvery","stop","_marked","_ref","_context2","call","savePartyAPI","sent","put","msg","sagaErrorMessage","_marked2","axios","post","crossDomain","then","catch","_context3","_marked3","_ref2","_context4","editPartyAPI","_marked4","_context5","_marked5","_ref3","_context6","fetchPartyByIdAPI","_marked6","get","_context7","_marked7","_ref4","_context8","select","requestPartyAPI","_marked8","_context9","_marked9","_ref5","_context10","deletePartyAPI","_marked10","_context11","_marked11","_context12","sendPartyPrintAPI","_marked12","open","partyEnd","_context13","all","_marked13","bankSchema","bankName","getIsBankFetched","bank","bankFetched","getBankList","getBankById","selectBank","CREATE_BANK","SAVED_BANK","EDIT_BANK","EDITED_BANK","FETCH_BANK","FETCHED_BANK","FETCHED_BANK_BY_ID","NOTIFICATION_DONE_BANK","DELETE_BANK","DELETED_BANK","createBank","fetchBank","setNotifyDoneBank","saveBank","editBank","saveEditedBank","fetchBankById","saveFetchedBankById","requestBank","deleteBank","saveDeleteBank","bankSaga","sagas_marked","saveBankAPI","sagas_marked2","sagas_marked3","editBankAPI","sagas_marked4","sagas_marked5","fetchBankByIdAPI","sagas_marked6","sagas_marked7","requestBankAPI","sagas_marked8","sagas_marked9","deleteBankAPI","sagas_marked10","sagas_marked11","groupSchema","groupName","getIsGroupFetched","groupFetched","getGroupList","getGroupById","selectGroup","CREATE_GROUP","SAVED_GROUP","EDIT_GROUP","EDITED_GROUP","FETCH_GROUP","FETCHED_GROUP","FETCHED_GROUP_BY_ID","NOTIFICATION_DONE_GROUP","DELETE_GROUP","DELETED_GROUP","createGroup","fetchGroup","setNotifyDoneGroup","saveGroup","editGroup","saveEditedGroup","fetchGroupById","saveFetchedGroupById","requestGroup","deleteGroup","saveDeleteGroup","groupSaga","data_sagas_marked","saveGroupAPI","data_sagas_marked2","data_sagas_marked3","editGroupAPI","data_sagas_marked4","data_sagas_marked5","fetchGroupByIdAPI","data_sagas_marked6","_id","data_sagas_marked7","requestGroupAPI","data_sagas_marked8","data_sagas_marked9","deleteGroupAPI","data_sagas_marked10","data_sagas_marked11","CREATE_FINYEAR","SAVED_FINYEAR","FETCH_FINYEAR","FETCHED_FINYEAR","FETCHED_FINYEAR_BY_ID","NOTIFICATION_DONE_FINYEAR","savedFinYear","finYear","setNotifyDoneFinYear","createFinYear","saveFinYear","editFinYear","saveEditedFinYear","fetchFinYearById","saveFetchedFinYearById","fetchFinYear","requestFinYear","finYearSaga","finyear_data_sagas_marked","saveFinYearAPI","finyear_data_sagas_marked2","finyear_data_sagas_marked3","editFinYearAPI","finyear_data_sagas_marked4","finyear_data_sagas_marked5","fetchFinYearByIdAPI","finyear_data_sagas_marked6","finyear_data_sagas_marked7","requestFinYearAPI","finyear_data_sagas_marked8","finyear_data_sagas_marked9","SAVED_STANDARD","EDIT_STANDARD","FETCH_STANDARD","FETCHED_STANDARD","FETCHED_STANDARD_BY_ID","NOTIFICATION_DONE_STANDARD","savedStandard","standard","setNotifyDoneStandard","createStandard","saveStandard","editStandard","saveEditedStandard","fetchStandardById","saveFetchedStandardById","fetchStandard","requestStandard","standardSaga","standard_data_sagas_marked","saveStandardAPI","standard_data_sagas_marked2","standard_data_sagas_marked3","editStandardAPI","standard_data_sagas_marked4","standard_data_sagas_marked5","fetchStandardByIdAPI","standard_data_sagas_marked6","standard_data_sagas_marked7","requestStandardAPI","standard_data_sagas_marked8","standard_data_sagas_marked9","SAVED_MILKRATES","EDIT_MILKRATES","FETCH_MILKRATES","FETCHED_MILKRATES","FETCHED_MILKRATES_BY_ID","NOTIFICATION_DONE_MILKRATES","savedMilkRates","milkRates","setNotifyDoneMilkRates","createMilkRates","saveMilkRates","editMilkRates","saveEditedMilkRates","fetchMilkRatesById","saveFetchedMilkRatesById","fetchMilkRates","requestMilkRates","milkRatesSaga","milkRates_data_sagas_marked","saveMilkRatesAPI","milkRates_data_sagas_marked2","milkRates_data_sagas_marked3","editMilkRatesAPI","milkRates_data_sagas_marked4","milkRates_data_sagas_marked5","fetchMilkRatesByIdAPI","milkRates_data_sagas_marked6","milkRates_data_sagas_marked7","requestMilkRatesAPI","milkRates_data_sagas_marked8","milkRates_data_sagas_marked9","CREATE_PURCHASE","SAVED_PURCHASE","EDIT_PURCHASE","EDITED_PURCHASE","FETCH_PURCHASE","FETCHED_PURCHASE","FETCH_ALL_PURCHASE","FETCHED_ALL_PURCHASE","FETCHED_PURCHASE_BY_ID","NOTIFICATION_DONE_PURCHASE","DELETE_PURCHASE","DELETED_PURCHASE","PRINT_PURCHASE","MULTIPLE_PRINT_PURCHASE","MULTIPLE_DELETE_PURCHASE","MULTIPLE_DELETED_PURCHASE","FETCH_MAX_BILLNO","FETCHED_MAX_BILLNO","fetchMaxBillNo","setNotifyDonePurchase","createPurchase","savePurchase","editPurchase","saveEditedPurchase","fetchPurchaseById","saveFetchedPurchaseById","fetchPurchase","requestPurchase","fetchAllPurchase","requestAllPurchase","fetchMaxBillNoR","requestMaxBillNo","deletePurchase","saveDeletePurchase","deleteMultiPurchase","saveDeleteMultiPurchase","postPurchasePrint","sendPurchasePrint","postPurchaseMultiPrint","sendPurchaseMultiPrint","purchaseSaga","purchase_data_sagas_marked","savePurchaseAPI","purchase","purchase_data_sagas_marked2","purchase_data_sagas_marked3","editPurchaseAPI","removeid","purchase_data_sagas_marked4","purchase_data_sagas_marked5","fetchPurchaseByIdAPI","purchase_data_sagas_marked6","purchase_data_sagas_marked7","requestPurchaseAPI","purchase_data_sagas_marked8","purchase_data_sagas_marked9","requestAllPurchaseAPI","purchase_data_sagas_marked10","purchase_data_sagas_marked11","_ref6","requestMaxBillNoAPI","sagas_marked12","sagas_marked13","_ref7","_context14","deletePurchaseAPI","_marked14","_context15","_marked15","_ref8","_context16","deleteMultiPurchaseAPI","_marked16","_context17","_marked17","_context18","sendPurchasePrintAPI","_marked18","_context19","_marked19","_context20","sendPurchaseMultiPrintAPI","_marked20","_context21","_marked21","SAVED_MISC","EDIT_MISC","FETCH_MISC","FETCHED_MISC","NOTIFICATION_DONE_MISC","setNotifyDoneMisc","editMisc","saveEditedMisc","fetchMisc","requestMisc","miscSaga","misc_data_sagas_marked","editMiscAPI","misc","misc_data_sagas_marked2","misc_data_sagas_marked3","requestMiscAPI","misc_data_sagas_marked4","misc_data_sagas_marked5","postSummaryRegister","sendSummaryRegister","postAllPartyRegister","sendAllPartyRegister","postSinglePartyRegister","sendSinglePartyRegister","registerSaga","register_data_sagas_marked","sendSummaryRegisterAPI","register_data_sagas_marked2","register_data_sagas_marked3","sendAllPartyRegisterAPI","register_data_sagas_marked4","register_data_sagas_marked5","sendSinglePartyRegisterAPI","register_data_sagas_marked6","register_data_sagas_marked7","SAVED_COMBINATION","EDIT_COMBINATION","FETCH_COMBINATION","FETCHED_COMBINATION","FETCHED_COMBINATION_BY_ID","NOTIFICATION_DONE_COMBINATION","savedCombination","combination","setNotifyDoneCombination","createCombination","saveCombination","editCombination","saveEditedCombination","fetchCombinationById","saveFetchedCombinationById","fetchCombination","requestCombination","combinationSaga","combination_data_sagas_marked","saveCombinationAPI","combination_data_sagas_marked2","combination_data_sagas_marked3","editCombinationAPI","combination_data_sagas_marked4","combination_data_sagas_marked5","fetchCombinationByIdAPI","combination_data_sagas_marked6","combination_data_sagas_marked7","requestCombinationAPI","combination_data_sagas_marked8","combination_data_sagas_marked9","rootSaga","store_sagas_marked","schema","Entity","idAttribute","partyListSchema","defaultPartyParams","createTitle","createSubmitButtonText","editTitle","editSubmitButtonText","savedPartyId","partyID","normalizedParty","normalize","merge","entities","partys","finalState","byListId","searchParams","delete","save","_action$payload","idValue","restOfState","objectWithoutProperties","_toPropertyKey","restOfId","bankListSchema","defaultBankParams","savedBankId","reducers_toPropertyKey","bankID","normalizedBank","banks","groupListSchema","defaultGroupParams","savedGroupId","groupID","normalizedGroup","groups","data_reducers_toPropertyKey","finYearSchema","finYearListSchema","defaultFinYearParams","finYearFetched","savedFinYearId","finYearID","normalizedFinYear","finYears","finyear_data_reducers_toPropertyKey","standardSchema","standardListSchema","defaultStandardParams","savedStandardId","standardID","normalizedStandard","standards","standard_data_reducers_toPropertyKey","milkRatesSchema","milkRatesListSchema","defaultMilkRatesParams","savedMilkRatesId","milkRatesID","normalizedMilkRates","milkRates_data_reducers_toPropertyKey","purchaseSchema","purchaseListSchema","defaultPurchaseParams","purchaseFetched","purchaseDeleted","savedPurchaseId","maxBillNo","purchaseID","removeID","normalizedPurchase","purchases","idObj","split","i","purchase_data_reducers_toPropertyKey","miscListSchema","defaultMiscParams","savedMiscId","miscID","name","normalizedMisc","miscs","misc_data_reducers_toPropertyKey","combinationSchema","combinationListSchema","defaultCombinationParams","savedCombinationId","combinationID","normalizedCombination","combination_data_reducers_toPropertyKey","rootReducer","history","router","connectRouter","sagaMiddleware","createSagaMiddleware","createBrowserHistory","basename","menu","icon","title","submenu","list","label","Notification","notifySelector","notifyDoneAction","notifyObj","useSelector","useDispatch","useEffect","getNotObj","edit","toast","position","autoClose","hideProgressBar","react_default","createElement","react_toastify","transition","Slide","Party","isNegative","_useState","useState","_useState2","slicedToArray","deletePartyId","setDeletePartyId","_useState3","_useState4","modalOption","setModalOption","groupMaster","bankMaster","deletePartyFromList","values","Table","Row","negative","Cell","index","phone","partyBankAccNo","textAlign","style","width","balance","parseFloat","Fragment","Link","to","cursor","color","onClick","notificationUtils","Modal","size","onClose","Header","Content","Actions","Button","positive","labelPosition","content","PartyList","printPartyDetails","Container","Grid","columns","className","Column","as","align","floated","push","Icon","selectable","basic","TableHeader","HeaderCell","TableBody","partyList_Party","colSpan","checkValidDateFormats","str","split_str","replace","DD","MM","YY","isDD","isNaN","isMM","isYY","currDate","format","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","getCurrentDate","isValidDay1","checkDay","isValidMonth1","checkMonth","yyStrLen","prefixStr","reqDate","setYear","isValidDay2","isValidMonth2","vfDt","yy","nextYY","calDate","nextDate","diff1","diff2","dateDiff","getYear","nextMM","prevMM","prevYY","prevDate","getMonthYear","validDateRange","yr","isleap","getDateInYYYYMMDD","date","date_split","date1","date2","dt1","dt2","ceil","getTime","FormikInputComponent","validateInput","isLabel","isTxn","placeholder","focus","disabled","isReadonly","field","_ref$form","form","touched","errors","handleChange","submitCount","Form","Field","validate","debounce","startCase","toLower","Input","onChange","autoFocus","readOnly","formik_esm","render","Label","pointing","prompt","FormikDateComponent","setDateManually","_ref2$form","setFieldValue","dirty","setDt","rawEvent","react_datepicker_min_default","placeholderText","dateFormat","scrollableYearDropdown","selected","e","target","onChangeRaw","autoComplete","FormikAmountComponent","decimal","saveOnBlur","compute","path","setValue","setStateValue","onChangeFunc","onchangeset","tabindex","_ref3$form","handleSubmit","handleBlur","react_number_format_es","thousandSeparator","thousandsGroupStyle","decimalScale","onValueChange","val","setValueChange","floatValue","tabIndex","onBlur","FormikCheckBoxComponent","userProps","_ref4$form","Radio","checked","FormikSelectComponent","isSelection","_ref5$form","setField","Dropdown","search","selection","options","isLowerCaseEnable","getValue","clearable","isDisable","FormikMultiSelectComponent","_React$createElement","_ref7$form","fluid","multiple","allowAdditions","FormikTextAreaComponent","_ref12","_ref12$form","HeaderClick","count","setCount","displayCount","height","isFloatLeft","float","maxLength","TextArea","resize","syntheticEvent","rows","getholder","PlantSelect","component","GroupSelect","opt","BankSelect","GroupPopup","setFieldVal","displayStatus","setDisplayStatus","trigger","initialValues","validationSchema","onSubmit","FormikForm","Body","Group","widths","BankPopup","resetForm","PartyForm","plantNo","address","nickName","bankM","groupM","plantName","obj","cloneDeep","bankId","groupId","getParty","getSavedPartyId","submitButtonText","getPartyParams","bankMst","groupMst","plantSelect","setName","bankSelect","bankPopup","groupSelect","groupPopup","fixed","Route","withRouter","Bank","deleteBankId","setDeleteBankId","deleteBankFromList","getVlaue","BankList","bankList_Bank","BankForm","getBank","getSavedBankId","getBankParams","deleteGroupId","setDeleteGroupId","deleteGroupFromList","GroupList","groupList_Group","GroupForm","getGroup","getSavedGroupId","getGroupParams","pageName","goodFat","goodSnf","badFat","badSnf","getMilkRatesList","TypeSelect","settings","MilkRatesForm","typeSelect","MilkRates","getStandardList","StandardForm","components_typeSelect","Standard","miscSchema","operationOn","getMiscListByName","MiscNameTypeSelect","trim","typeName","operation","description","MiscOperationType","MiscForm","updatedOn","createdOn","saveMisc","miscNameType","miscOperationType","Misc","fdt","tdt","selectFinYearList","sessionName","FinYearForm","addFinYear","onchangeDD","FinYear","getPurchaseList","periodFromDate","periodToDate","billDate","billNo","partyM","getPurchase","totalFatAmount","totalSnfAmount","totalQty","deductOthersType","adjustmentType","addAdvanceNarration","totalKgfat","shareType","commissionValue","sourMilkType","headLoadType","deductAdvanceNarration","testEquipMentValue","sourMilkNarration","commissionNarration","cattleFeedType","addOthersNarration","testEquipMentType","lateArrivalType","addOthersValue","vaccineType","mtevalue","totalRejected","splIncentiveNarration","fodderNarration","purchaseVoucherDetails","splIncentiveValue","billTotal","sourMilkValue","addAdvanceType","shareValue","arrearNarration","adjustment","headLoadNarration","deductOthersValue","arrearValue","shareNarration","cowLoanNarration","totalSour","fodderType","headLoadValue","deductAdvanceType","vaccineValue","totalMilkprice","mtenarration","cowLoanValue","addOthersType","vaccineNarration","deductAdvanceValue","totalAdditions","cattleFeedNarration","netAmount","totalDeductions","mtetype","addAdvanceValue","testEquipMentNarration","lateArrivalValue","lateArrivalNarration","commissionType","splIncentiveType","arrearType","fodderValue","cowLoanType","adjustmentValue","adjustmentNarration","cattleFeedValue","deductOthersNarration","totalKgsnf","totalAvgRateKg","totalGoodFat","totalGoodSnf","totalAvgKg","totalBadFat","totalBadSnf","headLoadCalVal","partyMaster","listingPurchaseBySid","purchaseName","sort","b","sId","PartySelect","setState","Purchase","deletePurchaseId","setDeletePurchaseId","deletePurchaseFromList","printPurchaseFromList","Checkbox","toFixed","PurchaseList","isPurchaseDeleted","_useState5","isOpen","keyWord","_useState6","modalState","setModalState","_useState7","_useState8","modal","setModal","_useState9","_useState10","checkedIds","setCheckedIds","calculateTotal","fetchList","fromDt","toDt","linkCreate","addPurchaseBulkPrint","callToDeleteData","Dimmer","active","Loader","padding","partySelect","purchaseList_Purchase","PartyDisplayView","partyObj","partyId","closeIcon","TypeTxnSelect","ShiftSelect","session","QualitySelect","AddQuickVdetails","setItemObject","setNextDate","voucherObj","vdetails","qty","netQty","setNetQty","isAuto","setIsAuto","clrP","isCLRhas","setIsCLRhas","_useState11","_useState12","popNextDate","setPopNextDate","_useState13","_useState14","onOpen","setOnOpen","getCombinationById","object","getId","getIndex","sourQty","kgFat","snfRate","rejectedQty","snfP","fatRate","fatAmount","pvid","fatP","snfAmount","kgSnf","milkPrice","remarks","milkRate","setStandard","setRate","shift","fatQuality","snfQuality","purchaseDetails","filter","element","getVdetailsObj","getAuto","shiftGet","saveItems","flag","rejectQty","new_date","add","day","month","year","onChangeQty","onChangeCLR","react_draggable_min_default","handle","dimmer","closeOnEscape","closeOnDimmerClick","getOpenPopup","typeTxnSelect","ischeck","setAutoTiming","shiftSelect","margin","qualitySelect","getStandard","getMilkRate","standardObj","milkRateObj","qtyGet","fat","clr","snf","fatType","snfType","fatAmt","snfAmt","totalRs","calculateRate","VdetailsNonEditable","move","swap","insert","unshift","pop","remove","arrKeys","fieldName","isActive","setIsActive","concat","set","onclickRow","AddNotesCommon","setValueFor","addNote","addNotes","AddHeadLoad","afterWork","sendValue","headLoad","addHeadLoad","PurchaseForm","getSavedPurchaseId","getPurchaseParams","commisionMisc","sourMilkMisc","getMaxBillNo","commissionValGet","setCommissionValGet","commissionOn","setCommissionOn","sourValGet","setSourValGet","sourOn","setSourOn","headLoadOn","setHeadLoadOn","_useState15","_useState16","setPartyId","setItemObjectAdd","callSetAllData","setItemObjectEdit","totalRejectedQty","totalSourQty","totalKgFat","totalKgSnf","totalFatAmt","totalSnfAmt","ratePerKg","pDetails","computeHeadLoad","computeCommission","computeSourMilk","nowSetTotalValue","totalAdditionAndDeduction","purchaseV","totalAddition","totalDeduction","additionOnChange","autoAdj","getAdj","commisionValue","commissionVal","milkP","kgFatSNF","sourMilkVal","partyDisplayView","visibility","addQuickVdetails","newPurchaseDetails","setItemObjectDelete","addNotePopUpCommon","addHeadLoadPopup","POST_REGISTER_SUMMARY","POST_REGISTER_ALLPARTY","MultiPartySelect","RegisterForm","postRegister","fromDate","summaryData","partytype","allPartyData","register","postAllPartyDetails","partyid","toString","singlePartyData","postSinglePartyDetails","defaultCheck","multiPartySelect","Register","CombinationForm","combination_components_typeSelect","Combination","App","stores","es","esm","Menu","attached","Item","item","simple","m","s","sindex","preloadedState","configureStore","middleware","routerMiddleware","toConsumableArray","getDefaultMiddleware","enhancers","monitorReducersEnhancer","run","subscribe","throttle","ReactDOM","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b85d444e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve dairy farm; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const loggerMiddleware = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default loggerMiddleware","import diff from 'deep-diff';\nimport v4 from 'uuid';\nimport { combineReducers } from 'redux'\nimport moment  from 'moment'\n\nexport const txnMiddleware = store => next => action => {\n\n  const prevState = store.getState();\n  const result = next(action)\n  const nextState = store.getState();\n\n  if (action.hasOwnProperty('diff') || action.hasOwnProperty('txn')){\n\n        let txnid = v4()        \n        if (action.hasOwnProperty('txn'))\n            txnid = action.payload.txnid\n\n        let error = '';\n        if (action.hasOwnProperty('err'))\n            error = action.err\n\n        let difference = '';\n        if (action.hasOwnProperty('diff'))\n            difference = JSON.stringify(diff(prevState, nextState));\n\n        const txn = { \n                id: txnid,\n                type: action.type !== 'SERVER_ERROR' ? action.type : action.fromAction,\n                payload : action.payload,\n                txnStatus: action.txn,\n                err : error,\n                diff: difference,\n                dt: moment().toJSON() \n            }\n\n        store.dispatch ( {type:'STORE_TXN', payload: txn } )\n    }\n  return result\n}\n  \nfunction txnLog (state = {}, action) {\n    if (action.type === 'STORE_TXN') { \n        const txnid = action.payload.id;   \n        return { ...state, \n            [txnid]: action.payload }        \n    } else {\n        return state\n    }\n}\n\nexport const txns = combineReducers({\n    txnLog\n});\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('taskState')\n      if (serializedState === null){\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  };\n  \n  export const saveState = (state) => {\n    try{\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('taskState',serializedState)\n    } catch (err) {\n      // ignore write error\n    }\n  }","import moment from 'moment'\nimport * as Yup from 'yup';\n\nexport function parseDateFromFormats (formats, parseStrict) {\n  return Yup.date().transform(function(value, originalValue) {\n    if (Yup.date().isType(value)) return value;\n\n    value = moment(originalValue, formats, parseStrict);\n    return value.isValid() ? value.toDate() : moment();\n  });\n}\n\n// export function parseNumberFromFormats (formats, parseStrict) {\n//   return Yup.number().transform(function(value, originalValue) {\n//     if (Yup.number().isType(value)) return value;\n\n//     value = moment(originalValue, formats, parseStrict);\n//     return value.isValid() ? value : Nan;\n//   });\n// }\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const party =  () => ( {\n  \"plantNo\": \"\",\n  \"address\": \"\",\n  \"nickName\": \"\",\n  \"bankMaster\": \"\",\n  \"bankM\": \"\",\n  \"balance\": \"\",\n  \"phone\": \"\",\n  \"partyName\": \"\",\n  \"groupMaster\": \"\",\n  \"groupM\": \"\",\n  \"partyBankAccNo\": \"\",\n  \"plantName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const partySchema = Yup.object().shape({\n      \n    partyName: Yup.string()\n                .required('This is a Required Field')    \n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { party } from './model'\n\nexport const getIsFetchingParty = (state, props) => state.party.params.isFetching\nexport const getIsPartyFetched = (state, props) => state.party.params.partyFetched\nexport const getSavedPartyId = (state, props) => state.party.params.savedPartyId\nexport const getPartyList = (state, prop) => state.party.byId\nexport const getPartyObjById = (state, id) => state.party.byId[id]\nexport const getNotification = (state, id) => state.party.notifications[id]\n\nexport const getParty = (state, props) => {\n    if (props.match.path === '/party/create') {\n        return party()\n    }\n    if (props.match.path === '/party/edit/:id') {\n        let id = props.match.params.id\n        let obj = cloneDeep(state.party.byId[id])\n        console.log(obj)\n        let bankId = obj.bankMaster ? obj.bankMaster.id : 0\n        obj.bankM = bankId\n        let groupId = obj.groupMaster ? obj.groupMaster.id : 0\n        obj.groupM = groupId\n        return obj\n    }\n}\n\nexport const getPartyParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/party/create') {\n        params.title = state.party.params.createTitle\n        params.submitButtonText = state.party.params.createSubmitButtonText\n    } else if (props.match.path === '/party/edit/:id') {\n        params.title = state.party.params.editTitle\n        params.submitButtonText = state.party.params.editSubmitButtonText\n    }\n    return params\n}\n\n\nexport const selectParty = createSelector(\n    getPartyList,\n    party => {\n        const keys = Object.keys(party)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: party[key].partyName } })\n        return obj\n    }\n)","export const CREATE_PARTY = 'CREATE_PARTY'\nexport const SAVED_PARTY = 'SAVED_PARTY'\nexport const EDIT_PARTY = 'EDIT_PARTY'\nexport const EDITED_PARTY = 'EDITED_PARTY'\nexport const FETCH_PARTY = 'FETCH_PARTY'\nexport const FETCHED_PARTY = 'FETCHED_PARTY'\nexport const FETCH_PARTY_BY_ID = 'FETCH_PARTY_BY_ID'\nexport const FETCHED_PARTY_BY_ID = 'FETCHED_PARTY_BY_ID'\nexport const NOTIFICATION_DONE_PARTY = 'NOTIFICATION_DONE_PARTY'\nexport const DELETE_PARTY = 'DELETE_PARTY'\nexport const DELETED_PARTY = 'DELETED_PARTY'\nexport const PRINT_PARTY = 'PRINT_PARTY'\n","import * as type from './types'\n\nexport function createParty(party) {\n    return {\n        type: type.CREATE_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function savedParty(party) {\n    return {\n        type: type.SAVED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function editParty(party) {\n    return {\n        type: type.EDIT_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function editedParty(party) {\n    return {\n        type: type.EDITED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchParty() {\n    return {\n        type: type.FETCH_PARTY\n    };\n}\n\nexport function fetchedParty(party) {\n    return {\n        type: type.FETCHED_PARTY,\n        payload: party\n    };\n}\n\n\nexport function fetchPartyById(party) {\n    return {\n        type: type.FETCH_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function fetchedPartyById(party) {\n    return {\n        type: type.FETCHED_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function setNotifyDoneParty(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PARTY,\n        payload: props\n    };\n}\n\n\nexport function deleteParty(party) {\n    return {\n        type: type.DELETE_PARTY,\n        payload: party\n    };\n}\n\nexport function deletedParty(party) {\n    return {\n        type: type.DELETED_PARTY,\n        payload: party\n    };\n}\n\nexport function partyPrint(){\n    return {\n        type: type.PRINT_PARTY\n    };\n}","\nexport const parseError = (err) => {\n    return  {\n        url : err.config.url,\n        headers : err.config.headers,\n        data : err.response.data,\n        status : err.status,\n        statusText : err.statusText,\n        message : err.message,\n        stack : err.stack\n    };\n}\n\nexport const handlError = (action, err) => {\n    return ({\n        type : 'SERVER_ERROR',\n        payload : action.payload,\n        fromAction : action.type,\n        txn : 'err',\n        err : err\n    })\n}\n\n","export default URL = 'http://localhost:8080/dairyfarm'","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsPartyFetched } from './selectors'\nimport { savedParty, fetchedParty, fetchedPartyById, deletedParty, editedParty } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Party \n\nfunction* createParty() {\n    yield takeEvery('CREATE_PARTY',saveParty)\n  }\n\nfunction* saveParty(action){\n  const { response, error } = yield call(savePartyAPI, action.payload)\n  if (response) yield put (savedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction savePartyAPI(data) {\n    return axios.post(URL+'/partymaster/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Party \n\nfunction* editParty() {\n  yield takeEvery('EDIT_PARTY',saveEditedParty)\n}\n\nfunction* saveEditedParty(action){\n  const { response, error } = yield call(editPartyAPI, action.payload)  \n  if (response) yield put (editedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editPartyAPI(data) {\n  return axios.post(URL+'/partymaster/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Party by ID\n\nfunction* fetchPartyById() {\n  yield takeEvery('FETCH_PARTY_BY_ID',saveFetchedPartyById)\n}\n\nfunction* saveFetchedPartyById(action){\n  const { response, error } = yield call(fetchPartyByIdAPI, action.payload)  \n  if (response) yield put (fetchedPartyById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchPartyByIdAPI(data) {\n  let id = data\n  return axios.get(URL+'/partymaster/fetch/'+ id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchParty() {\n\n  yield takeEvery('FETCH_PARTY',requestParty)\n\n}\n  \nfunction* requestParty(){\n  const isPartyFetched = yield select(getIsPartyFetched);\n  if(!isPartyFetched){\n    let { data } = yield call(requestPartyAPI)\n    yield put (fetchedParty(data.data))\n  }\n}\n\nfunction requestPartyAPI(data) {\n  return axios.get(URL+'/partymaster/fetch/all', {crossDomain: true})\n}\n\n//#endregion\n\n//#region Saga for Delete Party \n\nfunction* deleteParty() {\n  yield takeEvery('DELETE_PARTY',saveDeleteParty)\n}\n\nfunction* saveDeleteParty(action){\n  const { response, error } = yield call(deletePartyAPI, action.payload)\n  if (response) yield put (deletedParty({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction deletePartyAPI(data) {\n  return axios.post(URL+'/partymaster/delete', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Post Party Print\n\nfunction* postPartyPrint() {\n  yield takeEvery('PRINT_PARTY', sendPartyPrint)\n}\n\nfunction* sendPartyPrint() {\n  yield call(sendPartyPrintAPI)\n}\n\nfunction sendPartyPrintAPI() {\n  window.open(URL+'/partyprintlist', '_blank')\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.party(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.partyEnd()\n}\n\nexport default function* partySaga() {\n    yield all([\n        createParty(),\n        fetchParty(),\n        editParty(),\n        deleteParty(),\n        fetchPartyById(),\n        postPartyPrint()\n    ])\n  }  ","import * as Yup from 'yup'\n\nexport const bank =  () => ({\n    bankName: \"\"\n})\n\nexport const bankSchema = Yup.object().shape({\n\n    bankName: Yup.string()\n                .required('This is a Required Field')\n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { bank } from './model'\n\nexport const getIsFetchingBank = (state, props) => state.bank.params.isFetching;\nexport const getIsBankFetched = (state, props) => state.bank.params.bankFetched;\nexport const getSavedBankId = (state, props) => state.bank.params.savedBankId;\nexport const getBankList = (state, prop) => state.bank.byId\nexport const getBankById = (state, id) => state.bank.byId[id]\nexport const getNotification = (state, id) => state.bank.notifications[id]\n\nexport const getBank = (state, props) => {\n    if(props.match.path==='/bank/create'){\n        return bank()\n    }\n    if(props.match.path==='/bank/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.bank.byId[_id]);\n        return obj\n    }\n}\n\nexport const getBankParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/bank/create'){ \n        params.title = state.bank.params.createTitle\n        params.submitButtonText = state.bank.params.createSubmitButtonText        \n    }else if(props.match.path==='/bank/edit/:id'){ \n        params.title = state.bank.params.editTitle\n        params.submitButtonText = state.bank.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectBank = createSelector(\n    getBankList,\n    bank => { \n        const keys = Object.keys(bank)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : bank[key].bankName }})\n        return obj\n    }\n)","export const CREATE_BANK = 'CREATE_BANK'\nexport const SAVED_BANK = 'SAVED_BANK'\nexport const EDIT_BANK = 'EDIT_BANK'\nexport const EDITED_BANK = 'EDITED_BANK'\nexport const FETCH_BANK = 'FETCH_BANK'\nexport const FETCHED_BANK = 'FETCHED_BANK'\nexport const FETCH_BANK_BY_ID = 'FETCH_BANK_BY_ID'\nexport const FETCHED_BANK_BY_ID = 'FETCHED_BANK_BY_ID'\nexport const NOTIFICATION_DONE_BANK = 'NOTIFICATION_DONE_BANK'\nexport const DELETE_BANK = 'DELETE_BANK'\nexport const DELETED_BANK = 'DELETED_BANK'\n","import * as type from './types'\n\nexport function createBank(bank) {\n    return {\n        type: type.CREATE_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function savedBank(bank) {\n    return {\n        type: type.SAVED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function editBank(bank) {\n    return {\n        type: type.EDIT_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function editedBank(bank) {\n    return {\n        type: type.EDITED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchBank() {\n    return {\n        type: type.FETCH_BANK\n    };\n}\n\nexport function fetchedBank(bank) {\n    return {\n        type: type.FETCHED_BANK,\n        payload: bank\n    };\n}\n\n\nexport function fetchBankById(bank) {\n    return {\n        type: type.FETCH_BANK_BY_ID,\n        payload: bank\n    };\n}\n\nexport function fetchedBankById(bank) {\n    return {\n        type: type.FETCHED_BANK_BY_ID,\n        payload: bank\n    };\n}\n\n\nexport function setNotifyDoneBank(props) {\n    return {\n        type: type.NOTIFICATION_DONE_BANK,\n        payload: props\n    };\n}\n\n\nexport function deleteBank(bank) {\n    return {\n        type: type.DELETE_BANK,\n        payload: bank\n    };\n}\n\nexport function deletedBank(bank) {\n    return {\n        type: type.DELETED_BANK,\n        payload: bank\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsBankFetched } from './selectors'\nimport { savedBank, fetchedBank, fetchedBankById, deletedBank, editedBank } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Bank \n\nfunction* createBank() {\n  yield takeEvery('CREATE_BANK', saveBank)\n}\n\nfunction* saveBank(action) {\n  const { response, error } = yield call(saveBankAPI, action.payload)\n  if (response) yield put(savedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveBankAPI(data) {\n  return axios.post(URL + '/bankmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Bank \n\nfunction* editBank() {\n  yield takeEvery('EDIT_BANK', saveEditedBank)\n}\n\nfunction* saveEditedBank(action) {\n  const { response, error } = yield call(editBankAPI, action.payload)\n  console.log(response)\n  if (response) yield put(editedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editBankAPI(data) {\n  return axios.post(URL + '/bankmaster/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Bank by ID\n\nfunction* fetchBankById() {\n  yield takeEvery('FETCH_BANK_BY_ID', saveFetchedBankById)\n}\n\nfunction* saveFetchedBankById(action) {\n  const { response, error } = yield call(fetchBankByIdAPI, action.payload)\n  if (response) yield put(fetchedBankById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchBankByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/bankmaster/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchBank() {\n\n  yield takeEvery('FETCH_BANK', requestBank)\n\n}\n\nfunction* requestBank() {\n  const isBankFetched = yield select(getIsBankFetched);\n  if (!isBankFetched) {\n    let { data } = yield call(requestBankAPI)\n    yield put(fetchedBank(data.data))\n  }\n\n}\n\nfunction requestBankAPI() {\n  return axios.get(URL + '/bankmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Bank \n\nfunction* deleteBank() {\n  yield takeEvery('DELETE_BANK', saveDeleteBank)\n}\n\nfunction* saveDeleteBank(action) {\n  const { response, error } = yield call(deleteBankAPI, action.payload)\n  if (response) yield put(deletedBank({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteBankAPI(data) {\n  return axios.post(URL + '/bankmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* bankSaga() {\n  yield all([\n    createBank(),\n    fetchBank(),\n    editBank(),\n    fetchBankById(),\n    deleteBank()\n  ])\n}  ","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const group =  () => ({\n  \"groupName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const groupSchema = Yup.object().shape({\n\n  groupName: Yup.string()\n            .required('This is a Required Field')\n\n});\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { group } from './model'\n\nexport const getIsFetchingGroup = (state, props) => state.group.params.isFetching\nexport const getIsGroupFetched = (state, props) => state.group.params.groupFetched\nexport const getSavedGroupId = (state, props) => state.group.params.savedGroupId\nexport const getGroupList = (state, prop) => state.group.byId\nexport const getGroupById = (state, id) => state.group.byId[id]\nexport const getNotification = (state, id) => state.group.notifications[id]\n\nexport const getGroup = (state, props) => {\n    if (props.match.path === '/group/create') {\n        return group()\n    }\n    if (props.match.path === '/group/edit/:id') {\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.group.byId[_id]);\n        return obj\n    }\n}\nexport const getGroupParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/group/create') {\n        params.title = state.group.params.createTitle\n        params.submitButtonText = state.group.params.createSubmitButtonText\n    } else if (props.match.path === '/group/edit/:id') {\n        params.title = state.group.params.editTitle\n        params.submitButtonText = state.group.params.editSubmitButtonText\n    }\n    return params\n}\n\nexport const selectGroup = createSelector(\n    getGroupList,\n    group => {\n        const keys = Object.keys(group)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: group[key].groupName } })\n        return obj\n    }\n)","export const CREATE_GROUP = 'CREATE_GROUP'\nexport const SAVED_GROUP = 'SAVED_GROUP'\nexport const EDIT_GROUP = 'EDIT_GROUP'\nexport const EDITED_GROUP = 'EDITED_GROUP'\nexport const FETCH_GROUP = 'FETCH_GROUP'\nexport const FETCHED_GROUP = 'FETCHED_GROUP'\nexport const FETCH_GROUP_BY_ID = 'FETCH_GROUP_BY_ID'\nexport const FETCHED_GROUP_BY_ID = 'FETCHED_GROUP_BY_ID'\nexport const NOTIFICATION_DONE_GROUP = 'NOTIFICATION_DONE_GROUP'\nexport const DELETE_GROUP = 'DELETE_GROUP'\nexport const DELETED_GROUP = 'DELETED_GROUP'\n\n","import * as type from './types'\n\nexport function createGroup(group) {\n    return {\n        type: type.CREATE_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function savedGroup(group) {\n    return {\n        type: type.SAVED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function editGroup(group) {\n    return {\n        type: type.EDIT_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function editedGroup(group) {\n    return {\n        type: type.EDITED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchGroup() {\n    return {\n        type: type.FETCH_GROUP\n    };\n}\n\nexport function fetchedGroup(group) {\n    return {\n        type: type.FETCHED_GROUP,\n        payload: group\n    };\n}\n\n\nexport function fetchGroupById(group) {\n    return {\n        type: type.FETCH_GROUP_BY_ID,\n        payload: group\n    };\n}\n\nexport function fetchedGroupById(group) {\n    return {\n        type: type.FETCHED_GROUP_BY_ID,\n        payload: group\n    };\n}\n\n\nexport function setNotifyDoneGroup(props) {\n    return {\n        type: type.NOTIFICATION_DONE_GROUP,\n        payload: props\n    };\n}\n\nexport function deleteGroup(group) {\n    return {\n        type: type.DELETE_GROUP,\n        payload: group\n    };\n}\n\nexport function deletedGroup(group) {\n    return {\n        type: type.DELETED_GROUP,\n        payload: group\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsGroupFetched } from './selectors'\nimport { savedGroup, fetchedGroup, fetchedGroupById, deletedGroup, editedGroup } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Group \n\nfunction* createGroup() {\n  yield takeEvery('CREATE_GROUP', saveGroup)\n}\n\nfunction* saveGroup(action) {\n  const { response, error } = yield call(saveGroupAPI, action.payload)\n  if (response) yield put(savedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Group \n\nfunction* editGroup() {\n  yield takeEvery('EDIT_GROUP', saveEditedGroup)\n}\n\nfunction* saveEditedGroup(action) {\n  const { response, error } = yield call(editGroupAPI, action.payload)\n  if (response) yield put(editedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/update/', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Group by ID\n\nfunction* fetchGroupById() {\n  yield takeEvery('FETCH_GROUP_BY_ID', saveFetchedGroupById)\n}\n\nfunction* saveFetchedGroupById(action) {\n  const { response, error } = yield call(fetchGroupByIdAPI, action.payload)\n  if (response) yield put(fetchedGroupById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchGroupByIdAPI(data) {\n  let _id = data\n  return axios.get(URL + '/groupmaster/fetch/' + _id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchGroup() {\n\n  yield takeEvery('FETCH_GROUP', requestGroup)\n\n}\n\nfunction* requestGroup() {\n  const isGroupFetched = yield select(getIsGroupFetched);\n  if (!isGroupFetched) {\n    let { data } = yield call(requestGroupAPI)\n    yield put(fetchedGroup(data.data))\n  }\n}\n\nfunction requestGroupAPI() {\n  return axios.get(URL + '/groupmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Group \n\nfunction* deleteGroup() {\n  yield takeEvery('DELETE_GROUP', saveDeleteGroup)\n}\n\nfunction* saveDeleteGroup(action) {\n  const { response, error } = yield call(deleteGroupAPI, action.payload)\n  if (response) yield put(deletedGroup({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* groupSaga() {\n  yield all([\n    createGroup(),\n    fetchGroup(),\n    editGroup(),\n    deleteGroup(),\n    fetchGroupById()\n  ])\n}  ","export const CREATE_FINYEAR = 'CREATE_FINYEAR'\nexport const SAVED_FINYEAR = 'SAVED_FINYEAR'\nexport const EDIT_FINYEAR = 'EDIT_FINYEAR'\nexport const EDITED_FINYEAR = 'EDITED_FINYEAR'\nexport const FETCH_FINYEAR = 'FETCH_FINYEAR'\nexport const FETCHED_FINYEAR = 'FETCHED_FINYEAR'\nexport const FETCH_FINYEAR_BY_ID = 'FETCH_FINYEAR_BY_ID'\nexport const FETCHED_FINYEAR_BY_ID = 'FETCHED_FINYEAR_BY_ID'\nexport const NOTIFICATION_DONE_FINYEAR = 'NOTIFICATION_DONE_FINYEAR'\n","import * as type from './types'\n\nexport function createFinYear(finYear) {\n    return {\n        type : type.CREATE_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function savedFinYear(finYear) {\n    return {\n        type : type.SAVED_FINYEAR,\n        payload : finYear.data.data,        \n        txn: finYear.data.type,\n        msg: finYear.data.msg,\n        diff : true\n    };\n}\n\nexport function editFinYear(finYear) {\n    return {\n        type : type.EDIT_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchFinYear(finYear) {\n    return {\n        type : type.FETCH_FINYEAR,\n        payload: finYear\n    };\n}\n\nexport function fetchedFinYear(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR,\n        payload : finYear\n    };\n}\n\n\nexport function fetchFinYearById(finYear) {\n    return {\n        type : type.FETCH_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function fetchedFinYearById(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function setNotifyDoneFinYear(props) {\n    return {\n        type : type.NOTIFICATION_DONE_FINYEAR,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedFinYear, fetchedFinYear, fetchedFinYearById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create FinYear \n\nfunction* createFinYear() {\n    yield takeEvery('CREATE_FINYEAR',saveFinYear)\n  }\n\nfunction* saveFinYear(action){\n  const { response, error } = yield call(saveFinYearAPI, action.payload)\n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveFinYearAPI(data) {\n    return axios.post(URL+'/sessionperiod/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited FinYear \n\nfunction* editFinYear() {\n  yield takeEvery('EDIT_FINYEAR',saveEditedFinYear)\n}\n\nfunction* saveEditedFinYear(action){\n  const { response, error } = yield call(editFinYearAPI, action.payload)  \n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editFinYearAPI(data) {\n  return axios.post(URL+'/sessionperiod/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting FinYear by ID\n\nfunction* fetchFinYearById() {\n  yield takeEvery('FETCH_FINYEAR_BY_ID',saveFetchedFinYearById)\n}\n\nfunction* saveFetchedFinYearById(action){\n  const { response, error } = yield call(fetchFinYearByIdAPI, action.payload)  \n  if (response) yield put (fetchedFinYearById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchFinYearByIdAPI(data) {\n  let id = data\n  return axios.post(URL+'sessionperiod/fetch/'+id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchFinYear() {\n\n  yield takeEvery('FETCH_FINYEAR',requestFinYear)\n\n}\n  \nfunction* requestFinYear(action){\n\n  let { data } = yield call(requestFinYearAPI, action.payload)\n  yield put (fetchedFinYear(data.data))\n\n}\n\nfunction requestFinYearAPI(data) {\n  return axios.get(URL+'/sessionperiod/fetch/all', data,  {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* finYearSaga() {\n    yield all([\n        createFinYear(),\n        fetchFinYear(),\n        editFinYear(),\n        fetchFinYearById()\n    ])\n  }  ","export const CREATE_STANDARD = 'CREATE_STANDARD'\nexport const SAVED_STANDARD = 'SAVED_STANDARD'\nexport const EDIT_STANDARD = 'EDIT_STANDARD'\nexport const EDITED_STANDARD = 'EDITED_STANDARD'\nexport const FETCH_STANDARD = 'FETCH_STANDARD'\nexport const FETCHED_STANDARD = 'FETCHED_STANDARD'\nexport const FETCH_STANDARD_BY_ID = 'FETCH_STANDARD_BY_ID'\nexport const FETCHED_STANDARD_BY_ID = 'FETCHED_STANDARD_BY_ID'\nexport const NOTIFICATION_DONE_STANDARD = 'NOTIFICATION_DONE_STANDARD'\n","import * as type from './types'\n\nexport function createStandard(standard) {\n    return {\n        type : type.CREATE_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function savedStandard(standard) {\n    return {\n        type : type.SAVED_STANDARD,\n        payload : standard.data.data,\n        txn: standard.data.type,\n        msg: standard.data.msg,\n        diff : true\n    };\n}\n\nexport function editStandard(standard) {\n    return {\n        type : type.EDIT_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchStandard(params) {\n    return {\n        type : type.FETCH_STANDARD,\n        payload : params\n    };\n}\n\nexport function fetchedStandard(standard) {\n    return {\n        type : type.FETCHED_STANDARD,\n        payload : standard\n    };\n}\n\n\nexport function fetchStandardById(standard) {\n    return {\n        type : type.FETCH_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function fetchedStandardById(standard) {\n    return {\n        type : type.FETCHED_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function setNotifyDoneStandard(props) {\n    return {\n        type : type.NOTIFICATION_DONE_STANDARD,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedStandard, fetchedStandard, fetchedStandardById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Standard \n\nfunction* createStandard() {\n    yield takeEvery('CREATE_STANDARD',saveStandard)\n  }\n\nfunction* saveStandard(action){\n  const { response, error } = yield call(saveStandardAPI, action.payload)\n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveStandardAPI(data) {\n    return axios.post(URL+'/standard/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Standard \n\nfunction* editStandard() {\n  yield takeEvery('EDIT_STANDARD',saveEditedStandard)\n}\n\nfunction* saveEditedStandard(action){\n  const { response, error } = yield call(editStandardAPI, action.payload)  \n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editStandardAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Standard by ID\n\nfunction* fetchStandardById() {\n  yield takeEvery('FETCH_STANDARD_BY_ID',saveFetchedStandardById)\n}\n\nfunction* saveFetchedStandardById(action){\n  const { response, error } = yield call(fetchStandardByIdAPI, action.payload)  \n  if (response) yield put (fetchedStandardById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchStandardByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/standard/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchStandard() {\n\n  yield takeEvery('FETCH_STANDARD',requestStandard)\n\n}\n  \nfunction* requestStandard(action){\n\n  let { data } = yield call(requestStandardAPI, action.payload)\n  yield put (fetchedStandard(data.data))\n\n}\n\nfunction requestStandardAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* standardSaga() {\n    yield all([\n        createStandard(),\n        fetchStandard(),\n        editStandard(),\n        fetchStandardById()\n    ])\n  }  ","export const CREATE_MILKRATES = 'CREATE_MILKRATES'\nexport const SAVED_MILKRATES = 'SAVED_MILKRATES'\nexport const EDIT_MILKRATES = 'EDIT_MILKRATES'\nexport const EDITED_MILKRATES = 'EDITED_MILKRATES'\nexport const FETCH_MILKRATES = 'FETCH_MILKRATES'\nexport const FETCHED_MILKRATES = 'FETCHED_MILKRATES'\nexport const FETCH_MILKRATES_BY_ID = 'FETCH_MILKRATES_BY_ID'\nexport const FETCHED_MILKRATES_BY_ID = 'FETCHED_MILKRATES_BY_ID'\nexport const NOTIFICATION_DONE_MILKRATES = 'NOTIFICATION_DONE_MILKRATES'\n","import * as type from './types'\n\nexport function createMilkRates(milkRates) {\n    return {\n        type : type.CREATE_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function savedMilkRates(milkRates) {\n    return {\n        type : type.SAVED_MILKRATES,\n        payload : milkRates.data.data,\n        txn: milkRates.data.type,\n        msg: milkRates.data.msg,\n        diff : true\n    };\n}\n\nexport function editMilkRates(milkRates) {\n    return {\n        type : type.EDIT_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMilkRates(params) {\n    return {\n        type : type.FETCH_MILKRATES,\n        payload : params\n    };\n}\n\nexport function fetchedMilkRates(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES,\n        payload : milkRates\n    };\n}\n\n\nexport function fetchMilkRatesById(milkRates) {\n    return {\n        type : type.FETCH_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function fetchedMilkRatesById(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function setNotifyDoneMilkRates(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MILKRATES,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMilkRates, fetchedMilkRates, fetchedMilkRatesById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create MilkRates \n\nfunction* createMilkRates() {\n    yield takeEvery('CREATE_MILKRATES',saveMilkRates)\n  }\n\nfunction* saveMilkRates(action){\n  const { response, error } = yield call(saveMilkRatesAPI, action.payload)\n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveMilkRatesAPI(data) {\n    return axios.post(URL+'/milkRates/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited MilkRates \n\nfunction* editMilkRates() {\n  yield takeEvery('EDIT_MILKRATES',saveEditedMilkRates)\n}\n\nfunction* saveEditedMilkRates(action){\n  const { response, error } = yield call(editMilkRatesAPI, action.payload)  \n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMilkRatesAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting MilkRates by ID\n\nfunction* fetchMilkRatesById() {\n  yield takeEvery('FETCH_MILKRATES_BY_ID',saveFetchedMilkRatesById)\n}\n\nfunction* saveFetchedMilkRatesById(action){\n  const { response, error } = yield call(fetchMilkRatesByIdAPI, action.payload)  \n  if (response) yield put (fetchedMilkRatesById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchMilkRatesByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/milkRates/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMilkRates() {\n\n  yield takeEvery('FETCH_MILKRATES',requestMilkRates)\n\n}\n  \nfunction* requestMilkRates(action){\n\n  let { data } = yield call(requestMilkRatesAPI, action.payload)\n  yield put (fetchedMilkRates(data.data))\n\n}\n\nfunction requestMilkRatesAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* milkRatesSaga() {\n    yield all([\n        createMilkRates(),\n        fetchMilkRates(),\n        editMilkRates(),\n        fetchMilkRatesById()\n    ])\n  }  ","export const CREATE_PURCHASE = 'CREATE_PURCHASE'\nexport const SAVED_PURCHASE = 'SAVED_PURCHASE'\nexport const EDIT_PURCHASE = 'EDIT_PURCHASE'\nexport const EDITED_PURCHASE = 'EDITED_PURCHASE'\nexport const FETCH_PURCHASE = 'FETCH_PURCHASE'\nexport const FETCHED_PURCHASE = 'FETCHED_PURCHASE'\nexport const FETCH_ALL_PURCHASE = 'FETCH_ALL_PURCHASE'\nexport const FETCHED_ALL_PURCHASE = 'FETCHED_ALL_PURCHASE'\nexport const FETCH_PURCHASE_BY_ID = 'FETCH_PURCHASE_BY_ID'\nexport const FETCHED_PURCHASE_BY_ID = 'FETCHED_PURCHASE_BY_ID'\nexport const NOTIFICATION_DONE_PURCHASE = 'NOTIFICATION_DONE_PURCHASE'\nexport const DELETE_PURCHASE = 'DELETE_PURCHASE'\nexport const DELETED_PURCHASE = 'DELETED_PURCHASE'\nexport const PRINT_PURCHASE = 'PRINT_PURCHASE'\nexport const MULTIPLE_PRINT_PURCHASE = 'MULTIPLE_PRINT_PURCHASE'\nexport const MULTIPLE_DELETE_PURCHASE = 'MULTIPLE_DELETE_PURCHASE'\nexport const MULTIPLE_DELETED_PURCHASE = 'MULTIPLE_DELETED_PURCHASE'\nexport const FETCH_MAX_BILLNO = 'FETCH_MAX_BILLNO'\nexport const FETCHED_MAX_BILLNO = 'FETCHED_MAX_BILLNO'\n\n\n","import * as type from './types'\n\nexport function createPurchase(purchase) {\n    return {\n        type: type.CREATE_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function savedPurchase(purchase) {\n    return {\n        type: type.SAVED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        diff: true\n    };\n}\n\nexport function editPurchase(purchase) {\n    return {\n        type: type.EDIT_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function updatedPurchase(purchase) {\n    return {\n        type: type.EDITED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        removeid: purchase.removeid,\n        diff: true\n    };\n}\n\nexport function fetchPurchase(link) {\n    return {\n        type: type.FETCH_PURCHASE,\n        payload: link\n    };\n}\n\nexport function fetchedPurchase(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function fetchAllPurchase() {\n    return {\n        type: type.FETCH_ALL_PURCHASE\n    };\n}\n\nexport function fetchedAllPurchase(purchase) {\n    return {\n        type: type.FETCHED_ALL_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function fetchMaxBillNo() {\n    return {\n        type: type.FETCH_MAX_BILLNO\n    };\n}\n\nexport function fetchedMaxBillNo(purchase) {\n    return {\n        type: type.FETCHED_MAX_BILLNO,\n        payload: purchase\n    };\n}\n\nexport function fetchPurchaseById(purchase) {\n    return {\n        type: type.FETCH_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\nexport function fetchedPurchaseById(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\n\nexport function setNotifyDonePurchase(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PURCHASE,\n        payload: props\n    };\n}\n\n\nexport function deletePurchase(purchase) {\n    return {\n        type: type.DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedPurchase(purchase) {\n    return {\n        type: type.DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function postPrintPurchase(id) {\n    return {\n        type: type.PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function postMultiplePrintPurchase(id) {\n    return {\n        type: type.MULTIPLE_PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function deleteMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedPurchase, fetchedPurchase, fetchedPurchaseById, deletedPurchase, updatedPurchase, deletedMultiPurchase, fetchedAllPurchase, fetchMaxBillNo, fetchedMaxBillNo } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Purchase \n\nfunction* createPurchase() {\n  yield takeEvery('CREATE_PURCHASE', savePurchase)\n}\n\nfunction* savePurchase(action) {\n  const { response, error } = yield call(savePurchaseAPI, action.payload)\n  if (response){ \n    yield put(savedPurchase({ data: response.data, msg: response.msg, type: response.type }))\n    yield put (fetchMaxBillNo())\n  }\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction savePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Purchase \n\nfunction* editPurchase() {\n  yield takeEvery('EDIT_PURCHASE', saveEditedPurchase)\n}\n\nfunction* saveEditedPurchase(action) {\n  const { response, error } = yield call(editPurchaseAPI, action.payload)\n  console.log(response)\n  if (response) {\n    yield put(updatedPurchase({ data: response.data, msg: response.msg, type: response.type, removeid: action.payload.id }))\n  }\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Purchase by ID\n\nfunction* fetchPurchaseById() {\n  yield takeEvery('FETCH_PURCHASE_BY_ID', saveFetchedPurchaseById)\n}\n\nfunction* saveFetchedPurchaseById(action) {\n  const { response, error } = yield call(fetchPurchaseByIdAPI, action.payload)\n  if (response) yield put(fetchedPurchaseById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchPurchaseByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/purchasetxn/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchPurchase() {\n\n  yield takeEvery('FETCH_PURCHASE', requestPurchase)\n\n}\n\nfunction* requestPurchase(action) {\n  let { data } = yield call(requestPurchaseAPI, action.payload)\n  yield put(fetchedPurchase(data.data))\n}\n\nfunction requestPurchaseAPI(data) {\n  return axios.get(URL + '/purchasetxn/fetch/'+data, { crossDomain: true })\n}\n\n//#endregion\n\n\n//#region Saga for List Tasks \n\nfunction* fetchAllPurchase() {\n\n  yield takeEvery('FETCH_ALL_PURCHASE', requestAllPurchase)\n\n}\n\nfunction* requestAllPurchase() {\n  let { data } = yield call(requestAllPurchaseAPI)\n  yield put(fetchedAllPurchase(data.data))\n}\n\nfunction requestAllPurchaseAPI() {\n  return axios.get(URL + '/purchasetxn/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Max Bill No \n\nfunction* fetchMaxBillNoR() {\n\n  yield takeEvery('FETCH_MAX_BILLNO', requestMaxBillNo)\n\n}\n\nfunction* requestMaxBillNo() {\n  let { data } = yield call(requestMaxBillNoAPI)\n  yield put(fetchedMaxBillNo(data))\n}\n\nfunction requestMaxBillNoAPI() {\n  return axios.get(URL + '/purchasetxn/getmaxbillno', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Purchase \n\nfunction* deletePurchase() {\n  yield takeEvery('DELETE_PURCHASE', saveDeletePurchase)\n}\n\nfunction* saveDeletePurchase(action) {\n  const { response, error } = yield call(deletePurchaseAPI, action.payload)\n  if (response) yield put(deletedPurchase({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deletePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Multiple Delete Purchase \n\nfunction* deleteMultiPurchase() {\n  yield takeEvery('MULTIPLE_DELETE_PURCHASE', saveDeleteMultiPurchase)\n}\n\nfunction* saveDeleteMultiPurchase(action) {\n  const { response, error } = yield call(deleteMultiPurchaseAPI, action.payload)\n  if (response) yield put(deletedMultiPurchase({ id: action.payload, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteMultiPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/multidelete/'+data, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for Post Purchase Print\n\nfunction* postPurchasePrint() {\n  yield takeEvery('PRINT_PURCHASE', sendPurchasePrint)\n}\n\nfunction* sendPurchasePrint(action) {\n  yield call(sendPurchasePrintAPI, action.payload)\n}\n\nfunction sendPurchasePrintAPI(data) {\n  window.open(URL+'/invoice/print/'+data, '_blank')\n}\n\n//#endregion\n\n\n\n//#region Saga for Post Purchase Multiple Print\n\nfunction* postPurchaseMultiPrint() {\n  yield takeEvery('MULTIPLE_PRINT_PURCHASE', sendPurchaseMultiPrint)\n}\n\nfunction* sendPurchaseMultiPrint(action) {\n  yield call(sendPurchaseMultiPrintAPI, action.payload)\n}\n\nfunction sendPurchaseMultiPrintAPI(data) {\n  window.open(URL+'/invoice/multiprint/'+data, '_blank')\n}\n\n//#endregion\n\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* purchaseSaga() {\n  yield all([\n    createPurchase(),\n    fetchPurchase(),\n    fetchAllPurchase(),\n    editPurchase(),\n    fetchPurchaseById(),\n    deletePurchase(),\n    postPurchasePrint(),\n    postPurchaseMultiPrint(),\n    deleteMultiPurchase(),\n    fetchMaxBillNoR()\n  ])\n}  ","export const SAVED_MISC = 'SAVED_MISC'\nexport const EDIT_MISC = 'EDIT_MISC'\nexport const FETCH_MISC = 'FETCH_MISC'\nexport const FETCHED_MISC = 'FETCHED_MISC'\nexport const NOTIFICATION_DONE_MISC = 'NOTIFICATION_DONE_MISC'\n","import * as type from './types'\n\nexport function savedMisc(misc) {\n    return {\n        type : type.SAVED_MISC,\n        payload : misc.data.data,\n        txn: misc.data.type,\n        msg: misc.data.msg,\n        diff : true\n    };\n}\n\nexport function editMisc(misc) {\n    return {\n        type : type.EDIT_MISC,\n        payload : misc,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMisc(params) {\n    return {\n        type : type.FETCH_MISC,\n        payload : params\n    };\n}\n\nexport function fetchedMisc(misc) {\n    return {\n        type : type.FETCHED_MISC,\n        payload : misc\n    };\n}\n\n\nexport function setNotifyDoneMisc(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MISC,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMisc, fetchedMisc, fetchedMiscById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Edited Misc \n\nfunction* editMisc() {\n  yield takeEvery('EDIT_MISC',saveEditedMisc)\n}\n\nfunction* saveEditedMisc(action){\n  const { response, error } = yield call(editMiscAPI, action.payload)  \n  if (response) yield put (savedMisc({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMiscAPI(data) {\n  return axios.post(URL+'/miscsettings/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMisc() {\n\n  yield takeEvery('FETCH_MISC',requestMisc)\n\n}\n  \nfunction* requestMisc(action){\n\n  let { data } = yield call(requestMiscAPI, action.payload)\n  yield put (fetchedMisc(data.data))\n\n}\n\nfunction requestMiscAPI(data) {\n  return axios.get(URL+'/miscsettings/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* miscSaga() {\n    yield all([\n        fetchMisc(),\n        editMisc()\n    ])\n  }  ","import { call, takeEvery, all } from 'redux-saga/effects'\nimport URL from '../../../store/path'\n\n\n//#region Saga for Post Summary Register \n\nfunction* postSummaryRegister() {\n  yield takeEvery('POST_REGISTER_SUMMARY', sendSummaryRegister)\n}\n\nfunction* sendSummaryRegister(action) {\n  yield call(sendSummaryRegisterAPI, action.payload)\n}\n\nfunction sendSummaryRegisterAPI(data) {\n  window.open(URL+'/report/purchasesummary/'+ data, '_blank')\n}\n\n//#endregion\n\n\n//#region Saga for Post Summary Register \n\nfunction* postAllPartyRegister() {\n  yield takeEvery('POST_REGISTER_ALLPARTY', sendAllPartyRegister)\n}\n\nfunction* sendAllPartyRegister(action) {\n  yield call(sendAllPartyRegisterAPI, action.payload)\n}\n\nfunction sendAllPartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n//#region Saga for Post Summary Register \n\nfunction* postSinglePartyRegister() {\n  yield takeEvery('POST_REGISTER_SINGLEPARTY', sendSinglePartyRegister)\n}\n\nfunction* sendSinglePartyRegister(action) {\n  yield call(sendSinglePartyRegisterAPI, action.payload)\n}\n\nfunction sendSinglePartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n\nexport default function* registerSaga() {\n  yield all([\n    postSummaryRegister(),\n    postAllPartyRegister(),\n    postSinglePartyRegister()\n  ])\n}  ","export const CREATE_COMBINATION = 'CREATE_COMBINATION'\nexport const SAVED_COMBINATION = 'SAVED_COMBINATION'\nexport const EDIT_COMBINATION = 'EDIT_COMBINATION'\nexport const EDITED_COMBINATION = 'EDITED_COMBINATION'\nexport const FETCH_COMBINATION = 'FETCH_COMBINATION'\nexport const FETCHED_COMBINATION = 'FETCHED_COMBINATION'\nexport const FETCH_COMBINATION_BY_ID = 'FETCH_COMBINATION_BY_ID'\nexport const FETCHED_COMBINATION_BY_ID = 'FETCHED_COMBINATION_BY_ID'\nexport const NOTIFICATION_DONE_COMBINATION = 'NOTIFICATION_DONE_COMBINATION'\n","import * as type from './types'\n\nexport function createCombination(combination) {\n    return {\n        type : type.CREATE_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function savedCombination(combination) {\n    return {\n        type : type.SAVED_COMBINATION,\n        payload : combination.data.data,\n        txn: combination.data.type,\n        msg: combination.data.msg,\n        diff : true\n    };\n}\n\nexport function editCombination(combination) {\n    return {\n        type : type.EDIT_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchCombination(params) {\n    return {\n        type : type.FETCH_COMBINATION,\n        payload : params\n    };\n}\n\nexport function fetchedCombination(combination) {\n    return {\n        type : type.FETCHED_COMBINATION,\n        payload : combination\n    };\n}\n\n\nexport function fetchCombinationById(combination) {\n    return {\n        type : type.FETCH_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function fetchedCombinationById(combination) {\n    return {\n        type : type.FETCHED_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function setNotifyDoneCombination(props) {\n    return {\n        type : type.NOTIFICATION_DONE_COMBINATION,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedCombination, fetchedCombination, fetchedCombinationById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Combination \n\nfunction* createCombination() {\n    yield takeEvery('CREATE_COMBINATION',saveCombination)\n  }\n\nfunction* saveCombination(action){\n  const { response, error } = yield call(saveCombinationAPI, action.payload)\n  if (response) yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveCombinationAPI(data) {\n    return axios.post(URL+'/combination/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Combination \n\nfunction* editCombination() {\n  yield takeEvery('EDIT_COMBINATION',saveEditedCombination)\n}\n\nfunction* saveEditedCombination(action){\n  const { response, error } = yield call(editCombinationAPI, action.payload)  \n  if (response){ \n    console.log(\"response----------\", response)\n    yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))}\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editCombinationAPI(data) {\n  return axios.post(URL+'/setcombination/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Combination by ID\n\nfunction* fetchCombinationById() {\n  yield takeEvery('FETCH_COMBINATION_BY_ID',saveFetchedCombinationById)\n}\n\nfunction* saveFetchedCombinationById(action){\n  const { response, error } = yield call(fetchCombinationByIdAPI, action.payload)  \n  if (response) yield put (fetchedCombinationById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchCombinationByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/combination/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchCombination() {\n\n  yield takeEvery('FETCH_COMBINATION',requestCombination)\n\n}\n  \nfunction* requestCombination(action){\n\n  let { data } = yield call(requestCombinationAPI, action.payload)\n  yield put (fetchedCombination(data.data))\n\n}\n\nfunction requestCombinationAPI(data) {\n  return axios.get(URL+'/setcombination/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* combinationSaga() {\n    yield all([\n        createCombination(),\n        fetchCombination(),\n        editCombination(),\n        fetchCombinationById()\n    ])\n  }  ","import { all } from 'redux-saga/effects'\nimport partySaga from '../modules/party/data/sagas'\nimport bankSaga from '../modules/bank/data/sagas'\nimport groupSaga from '../modules/group/data/sagas'\nimport finYearSaga from '../modules/finyear/data/sagas'\nimport standardSaga from '../modules/standard/data/sagas'\nimport milkRatesSaga from '../modules/milkRates/data/sagas'\nimport purchaseSaga from '../modules/purchase/data/sagas'\nimport miscSaga from '../modules/misc/data/sagas'\nimport registerSaga from '../modules/register/data/sagas'\nimport combinationSaga from '../modules/combination/data/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      finYearSaga(),\n      partySaga(),\n      bankSaga(),\n      groupSaga(),\n      standardSaga(),\n      milkRatesSaga(),\n      purchaseSaga(),\n      miscSaga(),\n      registerSaga(),\n      combinationSaga()\n    ])\n  } ","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a partys schema\nconst partySchema = new schema.Entity('partys',{}, { idAttribute: 'id' });\nconst partyListSchema = [partySchema];\n\n\nconst defaultPartyParams = {\n  createTitle: 'Create Party',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Party',\n  editSubmitButtonText: 'Update',\n  partyFetched: false,\n  savedPartyId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n      const normalizedParty = normalize(action.payload, partySchema);\n      return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'FETCHED_PARTY') {  \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY') { \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }  \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PARTY'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPartyParams, action) {\n    if (action.type === 'FETCH_PARTY') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_PARTY') { \n        return {...state, \n          savedPartyId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_PARTY') { \n      return {...state, \n        savedPartyId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_PARTY') { \n      return {...state, \n        partyFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst party = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default party;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a banks schema\nconst bankSchema = new schema.Entity('banks',{}, { idAttribute: 'id' });\nconst bankListSchema = [bankSchema];\n\n\nconst defaultBankParams = {\n  createTitle: 'Create Bank',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Bank',\n  editSubmitButtonText: 'Update',\n  bankFetched: false,\n  savedBankId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      const normalizedBank = normalize(action.payload, bankListSchema);\n      return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n      const normalizedBank = normalize(action.payload, bankSchema);\n      return merge({},normalizedBank.entities.banks)\n    }\n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n        const normalizedBank = normalize(action.payload, bankListSchema);\n        return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    }else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultBankParams, action) {\n    if (action.type === 'FETCH_BANK') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      return {...state, \n        bankFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst bank = combineReducers({\n  notifications,  \n  byId,\n  byListId,\n  params\n});\n\n\nexport default bank;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a groups schema\nconst groupSchema = new schema.Entity('groups',{}, { idAttribute: 'id' });\nconst groupListSchema = [groupSchema];\n\n\nconst defaultGroupParams = {\n  createTitle: 'Create Group',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Group',\n  editSubmitButtonText: 'Update',\n  groupFetched: false,\n  savedGroupId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n      const normalizedGroup = normalize(action.payload, groupListSchema);\n      return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n      const normalizedGroup = normalize(action.payload, groupSchema);\n      return merge({},normalizedGroup.entities.groups)\n    }\n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n        const normalizedGroup = normalize(action.payload, groupListSchema);\n        return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_GROUP'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultGroupParams, action) {\n    if (action.type === 'FETCH_GROUP') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_GROUP') { \n        return {...state, \n          savedGroupId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_GROUP') { \n      return {...state, \n        savedGroupId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_GROUP') { \n      return {...state, \n        groupFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst group = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default group;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a finYears schema\nconst finYearSchema = new schema.Entity('finYears',{}, { idAttribute: 'id' });\nconst finYearListSchema = [finYearSchema];\n\n\nconst defaultFinYearParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  finYearFetched: false,\n  savedFinYearId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n      const normalizedFinYear = normalize(action.payload, finYearSchema);\n      return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_FINYEAR'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultFinYearParams, action) {\n    if (action.type === 'FETCH_FINYEAR') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_FINYEAR') { \n        return {...state, \n          savedFinYearId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_FINYEAR') { \n      return {...state, \n        savedFinYearId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_FINYEAR') { \n      return {...state, \n        finYearFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst finYear = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default finYear;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a standards schema\nconst standardSchema = new schema.Entity('standards',{}, { idAttribute: 'type' });\nconst standardListSchema = [standardSchema];\n\n\nconst defaultStandardParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedStandardId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_STANDARD') { \n      const normalizedStandard = normalize(action.payload, standardListSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n      const normalizedStandard = normalize(action.payload, standardSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_STANDARD') { \n        const normalizedStandard = normalize(action.payload, standardListSchema);\n        return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_STANDARD'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultStandardParams, action) {\n    if (action.type === 'FETCH_STANDARD') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_STANDARD') { \n        return {...state, \n          savedStandardId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_STANDARD') { \n      return {...state, \n        savedStandardId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst standard = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default standard;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a milkRates schema\nconst milkRatesSchema = new schema.Entity('milkRates',{}, { idAttribute: 'type' });\nconst milkRatesListSchema = [milkRatesSchema];\n\n\nconst defaultMilkRatesParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMilkRatesId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_MILKRATES') {\n    const milkRatesID = action.payload.type\n    return {...state, \n      [milkRatesID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_MILKRATES') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n      const normalizedMilkRates = normalize(action.payload, milkRatesSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') {\n      const milkRatesID = action.payload.type\n      return {...state, \n        [milkRatesID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MILKRATES') { \n        const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n        return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MILKRATES'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMilkRatesParams, action) {\n    if (action.type === 'FETCH_MILKRATES') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_MILKRATES') { \n        return {...state, \n          savedMilkRatesId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MILKRATES') { \n      return {...state, \n        savedMilkRatesId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst milkRates = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default milkRates;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a purchases schema\nconst purchaseSchema = new schema.Entity('purchases',{}, { idAttribute: 'id' });\nconst purchaseListSchema = [purchaseSchema];\n\n\nconst defaultPurchaseParams = {\n  createTitle: 'Create Milk Purchase',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Milk Purchase',\n  editSubmitButtonText: 'Update',\n  purchaseFetched: false,\n  purchaseDeleted: false,\n  savedPurchaseId: 0,\n  maxBillNo: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n      const normalizedPurchase = normalize(action.payload, purchaseSchema);\n      return merge({},normalizedPurchase.entities.purchases)\n    }\n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        let finalState = {...state}\n        let purchaseID = action.payload.id\n        let idObj = purchaseID.split(\",\")\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n        const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n        return merge({}, normalizedPurchase.entities.purchases)\n    } \n    if (action.type === 'FETCHED_ALL_PURCHASE') { \n      const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n      return merge({}, normalizedPurchase.entities.purchases)\n  } \n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        const idObj = purchaseID.split(\",\")\n        let finalState = {...state}\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PURCHASE') {\n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPurchaseParams, action) {\n    if (action.type === 'FETCH_PURCHASE') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_ALL_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    }   \n    if (action.type === 'MULTIPLE_DELETE_PURCHASE') { \n        return {...state,\n          purchaseDeleted: true\n        }\n    } \n    if (action.type === 'FETCHED_MAX_BILLNO') { \n      return {...state,\n        maxBillNo: (parseInt(action.payload, 10) + 1)\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') { \n      return {...state,\n        purchaseDeleted: false\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst purchase = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default purchase;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a miscs schema\nconst miscSchema = new schema.Entity('miscs',{}, { idAttribute: 'name' });\nconst miscListSchema = [miscSchema];\n\n\nconst defaultMiscParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMiscId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_MISC') { \n      const normalizedMisc = normalize(action.payload, miscListSchema);\n      return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MISC') { \n        const normalizedMisc = normalize(action.payload, miscListSchema);\n        return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MISC') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MISC'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMiscParams, action) {\n    if (action.type === 'FETCH_MISC') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_MISC') { \n        return {...state, \n          savedMiscId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MISC') { \n      return {...state, \n        savedMiscId: action.payload.id\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst misc = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default misc;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a combination schema\nconst combinationSchema = new schema.Entity('combination',{}, { idAttribute: 'id' });\nconst combinationListSchema = [combinationSchema];\n\n\nconst defaultCombinationParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedCombinationId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_COMBINATION') {\n    const combinationID = action.payload.id\n    return {...state, \n      [combinationID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_COMBINATION') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedCombination = normalize(action.payload, combinationListSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n      const normalizedCombination = normalize(action.payload, combinationSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') {\n      const combinationID = action.payload.id\n      return {...state, \n        [combinationID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_COMBINATION') { \n        const normalizedCombination = normalize(action.payload, combinationListSchema);\n        return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_COMBINATION'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultCombinationParams, action) {\n    if (action.type === 'FETCH_COMBINATION') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_COMBINATION') { \n        return {...state, \n          savedCombinationId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_COMBINATION') { \n      return {...state, \n        savedCombinationId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst combination = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default combination;\n","import { txns } from './store/txnMiddleware'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport party from './modules/party/data/reducers'\nimport bank from './modules/bank/data/reducers'\nimport group from './modules/group/data/reducers'\nimport finYear from './modules/finyear/data/reducers'\nimport standard from './modules/standard/data/reducers'\nimport milkRates from './modules/milkRates/data/reducers'\nimport purchase from './modules/purchase/data/reducers'\nimport misc from './modules/misc/data/reducers'\nimport combination from './modules/combination/data/reducers';\n\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    txns,\n    finYear,\n    party,\n    bank,\n    group,\n    standard,\n    milkRates,\n    purchase,\n    misc,\n    combination\n})\n\nexport default rootReducer","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport createSagaMiddleware from 'redux-saga'\nimport { throttle } from 'lodash'\n\nimport monitorReducersEnhancer from './store/monitorReducers'\nimport loggerMiddleware from './store/logger'\nimport { txnMiddleware } from './store/txnMiddleware' //logActionDiff\nimport { loadState, saveState } from './store/localStorage';\nimport rootSaga from './store/sagas'\nimport rootReducer from './reducers'\n\nimport { fetchFinYear } from './modules/finyear/data/actions'\nimport { fetchBank } from './modules/bank/data/actions'\nimport { fetchGroup } from './modules/group/data/actions'\nimport { fetchParty } from './modules/party/data/actions'\nimport { fetchStandard } from './modules/standard/data/actions'\nimport { fetchMilkRates } from './modules/milkRates/data/actions'\nimport { fetchMisc } from './modules/misc/data/actions'\nimport { fetchCombination } from './modules/combination/data/actions'\nimport { fetchMaxBillNo } from './modules/purchase/data/actions'\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const history = createBrowserHistory({\n  basename: '/dairyfarm',\n});\n\nexport default function configureAppStore() {\n\n  const preloadedState = loadState();\n\n  const store = configureStore({\n    reducer: rootReducer(history),\n    middleware: [sagaMiddleware,txnMiddleware,loggerMiddleware,routerMiddleware(history), ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer(history)))\n  }  \n\n  sagaMiddleware.run(rootSaga)\n\n  store.subscribe(throttle(() => {\n    saveState({\n      // loginDetails : store.getState().loginDetails,\n      // messagesById: store.getState().messagesById,\n      // messagesPrimary : store.getState().messagesPrimary\n    });\n  }), 1000);\n  store.dispatch(fetchCombination())\n  store.dispatch(fetchFinYear())\n  store.dispatch(fetchBank())\n  store.dispatch(fetchGroup())\n  store.dispatch(fetchParty())\n  store.dispatch(fetchMaxBillNo())\n  store.dispatch(fetchStandard(\"SetStandard\"))\n  store.dispatch(fetchMilkRates(\"SetPriceRate\"))\n  store.dispatch(fetchMisc())\n  console.log(\"call\")\n  return store\n}\n\n\n\n","export const menu = [\n  {\n    icon: '',\n    title: 'Master',\n    submenu: [\n      {\n        icon: '',\n        title: 'Bank',\n        list: '/bank/list',\n        label: 'Bank'\n      },\n      {\n        icon: '',\n        title: 'Group',\n        list: '/group/list',\n        label: 'Group'\n      },\n      {\n        icon: '',\n        title: 'Party',\n        list: '/party/list',\n        label: 'Party'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Transaction',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase',\n        list: '/purchase/list',\n        label: 'Milk Purchase'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Settings',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Rates',\n        list: '/milkRates/update',\n        label: 'Milk Rates'\n      },\n      {\n        icon: '',\n        title: 'Standard',\n        list: '/standard/update',\n        label: 'Standard'\n      },\n      {\n        icon: '',\n        title: 'Misc',\n        list: '/misc/update',\n        label: 'Misc'\n      },\n      {\n        icon: '',\n        title: 'Combination',\n        list: '/combination/update',\n        label: 'Combination'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Reports',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase Register',\n        list: '/register/list',\n        label: 'Milk Purchase Register'\n      }\n    ]\n  }\n]","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Notification = ({ id, notifySelector, type, notifyDoneAction }, props) => {\n    const notifyObj = useSelector(state => notifySelector(state, id))\n    console.log(\"id-------------------\", id)\n    console.log(\"notifyObj-------------------\", notifyObj)\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        if(id !== 0 && notifyObj){\n            const options = {\n                position: \"bottom-center\",\n                autoClose: 3000,\n                hideProgressBar: true\n            }\n            const getNotObj = type === \"save\" ? notifyObj.save : type === \"edit\" ? notifyObj.edit : type === \"delete\" ? notifyObj.delete : {}\n            if(getNotObj){\n                toast[getNotObj.status]( getNotObj.msg, options );\n                dispatch(notifyDoneAction({id, type}))\n            }\n        }\n    })\n\n    if (notifyObj){\n    return (\n        <ToastContainer transition={Slide}/>\n    )} else return null\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteParty, setNotifyDoneParty, partyPrint } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchParty } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\nimport { getGroupById } from '../../group/data/selectors'\nimport { getBankById } from '../../bank/data/selectors'\n\nconst Party = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.party.status === 1 ? false : true\n\n    const [deletePartyId, setDeletePartyId] = useState(false)\n    const [modalOption, setModalOption] = useState({ status: false, id: 0 })\n\n    const group = useSelector(state => getGroupById(state, props.party ? props.party.groupMaster ? props.party.groupMaster.id : 0 : 0))\n    const bank = useSelector(state => getBankById(state, props.party ? props.party.bankMaster ? props.party.bankMaster.id : 0 : 0))\n\n    const deletePartyFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deleteParty(getVlaue))\n        setDeletePartyId(values)\n        setModalOption({ status: false, id: 0 })\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.party.partyName}</Table.Cell>\n            <Table.Cell>{props.party.phone}</Table.Cell>\n            <Table.Cell>{group ? group.groupName !== undefined ? group.groupName : '' : ''}</Table.Cell>\n            <Table.Cell>{bank ? bank.bankName !== undefined ? bank.bankName : '' : '' + \" - \" + props.party.partyBankAccNo}</Table.Cell>\n            <Table.Cell textAlign='right' style={{ width: '10%' }}>{props.party.balance > 0 ? props.party.balance : (props.party.balance * -1)} {parseFloat(props.party.balance) >= 0 ? \"Dr\" : \"Cr\"}</Table.Cell>\n            <Table.Cell textAlign='center' style={{ width: '10%' }}>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/party/edit/\" + props.party.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({ status: true, id: props.party.id })}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                    {\n                        deletePartyId ?\n                            <Notification id={deletePartyId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneParty} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({ status: false, id: 0 })}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Party?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePartyFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes' />\n                        <Button onClick={() => setModalOption({ status: false, id: 0 })} negative labelPosition='right' icon='close' content='No' />\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PartyList = (props) => {\n    // Loading Logic if tasks not fetched\n    const party = useSelector(state => select.getPartyList(state, props))\n    const partyFetched = useSelector(state => select.getIsPartyFetched(state, props))\n    const dispatch = useDispatch()\n\n    const addPartyClick = () => {\n        props.history.push('/party/create');\n    }\n\n    const printPartyDetails = () => {\n        dispatch(partyPrint())\n    }\n\n    useEffect(() => {\n        dispatch(fetchParty())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Party List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addPartyClick()}>\n                            Add Party<Icon name='add' />\n                        </Button>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => printPartyDetails()}>\n                            Print<Icon name='print' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '5%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Party Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '15%' }}>Phone</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Group</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Bank & A/C No</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='right' style={{ width: '10%' }}>Balance</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center' style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!partyFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"7\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(party).map((key, index) =>\n                                <Party party={party[key]} key={party[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PartyList;\n","\n/*\n * @param str (Given Date String)\n * @param dateObj (Date Field Object)\n * @description This function is called when str is not blank.\n */\nexport const checkValidDateFormats = (str) => {\n    str = str.replace(/[ ]/gi, \"-\").replace(/[*]/gi, \"-\").replace(/[.]/gi, \"-\").replace(/[+]/gi, \"-\").replace(/[/]/gi, \"-\")\n    let split_str = str.split(\"-\");\n    if (split_str.length <= 3) { // Within dd,MM and yyyy.\n        let DD = parseInt(split_str[0], 10) < 10 ? \"0\" + parseInt(split_str[0], 10) : parseInt(split_str[0]),\n            MM = parseInt(split_str[1], 10) < 10 ? \"0\" + parseInt(split_str[1], 10) : parseInt(split_str[1]),\n            YY = split_str[2],\n            isDD = !isNaN(DD) && DD ? true : false,\n            isMM = !isNaN(MM) && MM ? true : false,\n            isYY = !isNaN(YY) && YY ? true : false,\n            currDate = getCurrentDate(\"yyyy-MM-dd\"),\n            reqDate = \"\";\n\n        if ((isDD === true && isMM === true  && isYY === true)) {    // All three (dd-MM-yyy)\n            let isValidDay1 = checkDay(DD, MM, YY);\n            let isValidMonth1 = checkMonth(MM);\n            if (isValidDay1 === true && isValidMonth1 === true) {\n                return setYear(DD, MM, YY);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\");\n            }\n        } else if (isDD === true && isMM === true && split_str.length === 2) {            // Only first two (dd-MM)\n            let isValidDay2 = checkDay(DD, MM, YY);\n            let isValidMonth2 = checkMonth(MM);\n            if (isValidDay2 === true && isValidMonth2 === true) {\n                reqDate = getYear(DD, MM, currDate);\n                return reqDate\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else if (isDD === true && split_str.length === 1) {                                                // Only first one (dd)\n            let isValidDay3 = checkDay(DD, MM, YY);\n            if (isValidDay3 === true) {\n                reqDate = getMonthYear(DD, currDate);\n                return reqDate\n                // checkValidDateFormats(reqDate);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else {\n            console.log(\"Please enter proper date in 'dd-MM-yyyy' format.\");\n        }\n    } else { // Not Within dd,MM and yyyy.\n        console.log(\"Please enter date in 'dd-MM-yyyy' format.\")\n    }\n}\n\n\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @return true if DD satisfy the valid day range, else false\n */\nfunction checkDay(DD, MM, YY){\n    var validDateRange = 31;\n    if(MM !== undefined && !isNaN(MM)){\n        if(MM === 1 || MM ===3 || MM === 5 || MM === 7 || MM === 8 || MM === 10 || MM === 12){\n            validDateRange = 31;\n        }else if(MM === 2){\n            if(YY === undefined){\n                console.log('YY not defined')\n            }\n            var isLeapYear = isleap(YY);\n            validDateRange = isLeapYear === true ? 29 : 28;\n        }else{\n            validDateRange = 30;\n        }\n    }    \n    return DD !== 0 ? (DD <= validDateRange ? true : false) : false;\n}\n\n/*\n * @param MM (Given Month)\n * @return true if MM satisfy the valid month range, else false\n */\nfunction checkMonth(MM){\n    var validMonthRange = 12;\n    return MM !== 0 ? (MM <= validMonthRange ? true : false) : false;\n}\n\n/*\n * @param dateObj (Date Field Object)\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @description This function is called when DD, MM and YY is given.\n * Checks valid Year format and set required Date to the Date field.\n */\nfunction setYear(DD, MM, YY){\n    var yyStrLen = YY.length,\n    prefixStr = \"\",\n    reqDate = DD+\"-\"+MM+\"-\"+YY;\n    //    console.log(\"DD: \"+DD+\"\\nMM: \"+MM+\"\\nYY: \"+YY+\"\\nyyStrLen: \"+yyStrLen)\n    if(yyStrLen === 2){\n        prefixStr = parseInt(YY, 10) >= 80 && parseInt(YY, 10) <= 99 ? \"19\" : \"20\";\n        reqDate = DD+\"-\"+MM+\"-\"+prefixStr+YY;\n    }else if(yyStrLen === 4){\n        if(parseInt(YY,10) < 1980){\n            console.log(\"Year cannot be less than 1980\");\n        }\n    }\n    if(yyStrLen !== 2 && yyStrLen !== 4){\n        console.log(\"Date out of range. Please ensure you enter proper date.\");\n    }\n    // const rDt = getDateInYYYYMMDD(reqDate, \"-\", \"-\")\n    // console.log('DD MM YY',reqDate)\n    return reqDate\n}\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param currDate (Current Date)\n * @description This function is called when DD and MM is given.\n * @return Required Date\n */\nfunction getYear(DD, MM, currDate){\n    // console.log(\"DD: \"+DD+\"\\nMM: \"+MM)\n\n    const vfDt = currDate\n        \n    //console.log(\"v_fromDate: \"+vfDt)\n    var yy = vfDt.split(\"-\")[0],\n    mm = vfDt.split(\"-\")[1],\n    nextYY = parseInt(yy, 10) + 1,\n    calDate = yy+\"-\"+MM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+MM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    // console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate);\n    // alert(parseInt(MM, 10)+\" > \"+parseInt(mm, 10))\n    if(parseInt(MM, 10) <  parseInt(mm, 10)){\n        diff1 = dateDiff(vfDt, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(vfDt, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) > parseInt(diff2, 10) ? DD+\"-\"+MM+\"-\"+yy : DD+\"-\"+MM+\"-\"+nextYY;\n    // alert(parseInt(diff1, 10) +\">\" +parseInt(diff2, 10))\n    //  console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }\n    else{\n        reqDate = DD+\"-\"+MM+\"-\"+yy;\n    }\n    return reqDate;\n}\n\n/*\n * @param DD (Given Day)\n * @param currDate (Current Date)\n * @description This function is called when only DD is given.\n * @return Required Date\n */\nfunction getMonthYear(DD, currDate){\n    //    console.log(\"DD: \"+DD)\n    var yy = currDate.split(\"-\")[0],\n    mm = currDate.split(\"-\")[1],\n    dd = currDate.split(\"-\")[2],\n    nextMM = parseInt(mm, 10) === 12 ? '01' : ((parseInt(mm, 10) + 1) < 10 ? \"0\"+(parseInt(mm, 10) + 1) : (parseInt(mm, 10) + 1)),\n    prevMM = parseInt(mm, 10) === 1 ? 12 : ((parseInt(mm, 10) - 1) < 10 ? \"0\"+(parseInt(mm, 10) - 1) : (parseInt(mm, 10) - 1)),\n    nextYY = parseInt(mm, 10) === 12 ? parseInt(yy, 10) + 1 : yy,\n    prevYY = parseInt(mm, 10) === 1 ? parseInt(yy, 10) - 1 : yy,\n    calDate = yy+\"-\"+mm+\"-\"+DD,\n    prevDate = prevYY+\"-\"+prevMM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+nextMM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    //    console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate)\n    if(parseInt(DD, 10) > parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, prevDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+prevMM+\"-\"+prevYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else if(parseInt(DD, 10) < parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+nextMM+\"-\"+nextYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else{\n        reqDate = DD+\"-\"+mm+\"-\"+yy;\n    }  \n    return reqDate;\n}\n\n/*\n * @param YY (Given Year)\n * @return true if the given year is a Leap Year, else false\n */\nfunction isleap(YY){\n    var yr = YY;\n    if ((parseInt(yr, 10) % 4) === 0){\n        if (parseInt(yr, 10) % 100 === 0){\n            if (parseInt(yr, 10) % 400 !== 0){\n                //                alert(\"Not Leap\");\n                return false;\n            }else if(parseInt(yr, 10) % 400 === 0){\n                //                alert(\"Leap\");\n                return true;\n            }\n        }else if(parseInt(yr, 10) % 100 !== 0){\n            //            alert(\"Leap\");\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * @param format (Required Format)\n * @return Current Date\n */\nfunction getCurrentDate(format){\n    var d = new Date(),\n    dd = d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\n    mm = (d.getMonth() + 1) < 10 ? \"0\"+(d.getMonth() + 1) : (d.getMonth() + 1),\n    yyyy = d.getFullYear(),\n    currDate = \"\";\n    if(format === \"yyyy-MM-dd\"){\n        currDate = yyyy + \"-\" + mm + \"-\" + dd;\n    }else if(format === \"dd-MM-yyyy\"){\n        currDate = dd + \"-\" + mm + \"-\" + yyyy;\n    }\n    return currDate;\n}\n\n/*\n * @param date (Given Date)\n * @param separator (Given Separator)\n * @param reqseparator (Required Separator)\n * @return Given Date in yyyy-MM-dd\n */\nexport function getDateInYYYYMMDD(date){\n    if(date !== undefined) {\n        const date_split = date.split('-')\n        return  date_split[2] + '-' + date_split[1] + '-' + date_split[0];    \n    } else\n        return date\n}\n\n/*\n * @param v_fromDate (Voucher Period From Date)\n * @param v_toDate (Voucher Period To Date)\n * @param date (Given Date)\n * @return true if given date is within period range, else false\n */\n/*\n * @return Difference between two dates in number of day\n */\nfunction dateDiff(date1, date2){ //date1: To Date(greater)-----date2: From Date(smaller)\n    //    console.log(\"date1: \"+date1+\"\\ndate2: \"+date2)\n    var dt1 = new Date(date1);\n    var dt2 = new Date(date2);\n    var oneDay=1000*60*60*24;    \n    return Math.ceil((dt1.getTime()-dt2.getTime())/oneDay);\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorMessage } from 'formik'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport NumberFormat from 'react-number-format';\nimport { isObject, startCase, toLower, get } from \"lodash\";\nimport { Form, Radio, Input, Label, Dropdown, TextArea, Loader } from 'semantic-ui-react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { checkValidDateFormats, getDateInYYYYMMDD } from './dateUtils'\nimport { debounce } from 'lodash'\n\n\nexport function getValueFromEvent(e) {\n  const { target } = e;\n  let newValues;\n  if (target) {\n    const value = (target.type === \"checkbox\") ? target.checked : target.value;\n    newValues = { [target.name]: value }\n  }\n  else if (isObject(e)) { newValues = e; }\n  return newValues;\n}\n\n\nexport const FormikInputComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, disabled, isReadonly,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      <Input name={field.name}\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={field.value}\n        autoFocus={focus ? focus : false}\n        style={{width: '100%'}}\n        readOnly = {isReadonly ? isReadonly : false}\n        disabled = {disabled ? disabled : false}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  );\n\n\n  export const FormikDateComponent = ({\n    isLabel, label, placeholder, width, focus, isTxn, setDateManually,\n    field, // { name, value, onChange, onBlur }\n    form: { touched, errors, values, handleChange, setFieldValue, dirty }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n    ...props\n  }) => {\n  \n  const [dt, setDt] = useState((setDateManually && setDateManually !== undefined && setDateManually !== \"\") ? moment(setDateManually).toDate() : field.value ? moment(field.value).toDate() : null)\n  let rawEvent = ''\n  useEffect(() => {\n    if(setDateManually !== undefined && setDateManually !== \"\" && setDateManually !== 0){\n      setFieldValue(field.name, setDateManually)\n      // console.log(\"_-------------done-1------------_\", setDateManually)\n      setDt(moment(setDateManually).toDate())\n    }else{\n      if(setDateManually !== undefined && setDateManually !== \"\"){\n        setFieldValue(field.name, setDateManually)\n        // console.log(\"_-------------done-2------------_\", setDateManually)\n        setDt(moment(setDateManually).toDate())\n      }\n    }\n  }, [setDateManually])\n\n  const handleDateChange = (e) => {\n    if (rawEvent.type === 'change'){\n        let str = rawEvent.target.value\n        const dt1 = checkValidDateFormats(str)\n        handleChange(dt1)\n        setFieldValue(field.name, getDateInYYYYMMDD(dt1))\n        setDt(moment(getDateInYYYYMMDD(dt1)).toDate())  \n    } else {\n        setDt(e)\n        const dt = moment(e)\n        handleChange(dt.format(\"DD-MM-YYYY\"))\n        setFieldValue(field.name, dt.format(\"YYYY-MM-DD\"))\n    }\n  }\n\n  return (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n      <Form.Field style={{width: '100%'}} width={width ? width : null} error={get(errors,field.name) && get(touched,field.name)}>\n        {errors[field.name] && touched[field.name] && !isTxn ?\n          <label>{errors[field.name]}</label> :\n          <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        <DatePicker\n          name={field.name}\n          placeholderText={placeholder}\n          dateFormat=\"dd-MM-yyyy\"\n          scrollableYearDropdown\n          selected={field.value ? dt : null}\n          onChange={handleDateChange}\n          onChangeRaw={e=> rawEvent = e}\n          autoComplete='off'\n          autoFocus={focus ? focus : false}\n          style={{width: '100%'}}\n        />\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikAmountComponent = ({\n  isLabel, label, saveOnBlur, decimal, compute, isTxn, path, placeholder, focus, setValue, disabled, setStateValue, isReadonly, onChangeFunc, onchangeset, tabindex,\n  field, // { name, value, onChange, onBlur }\n  index,\n  form: { touched, errors, values, handleSubmit, handleBlur, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) =>  {\n\n  useEffect(() => {\n    if(setValue !== undefined && setValue !== \"\" && setValue !== 0){\n      setFieldValue(field.name, setValue)\n    }else{\n      if(setValue !== undefined && setValue !== \"\"){\n        setFieldValue(field.name, setValue)\n      }\n    }\n  }, [setValue])\n\n  const setValueChange = (setFieldValue, val) => {\n    setFieldValue(field.name, val)\n    if(setStateValue){\n      setStateValue(val !== undefined && val !== \"\" ? val : 0)\n    }\n    if(onChangeFunc){\n      onChangeFunc(val !== undefined && val !== \"\" ? val : 0, setFieldValue)\n    }\n    if(onchangeset){\n      onchangeset(values, setFieldValue)\n    }\n  }\n\n  return(\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <NumberFormat \n        thousandSeparator={true} \n        thousandsGroupStyle=\"lakh\"\n        decimalScale = {(decimal) ? decimal : 2 }\n        placeholder={placeholder}\n        name={field.name}\n        value={field.value}\n        onValueChange={(val) => setValueChange(setFieldValue, val.floatValue)}\n        autoFocus={focus ? focus : false}\n        disabled = {disabled ? disabled : false}\n        style={{textAlign: \"right\", width: '100%'}}\n        readOnly={isReadonly ? isReadonly : false}\n        tabIndex={tabindex ? tabindex : '0'}\n        onBlur={(e) =>{\n          // e.persist()\n          // handleBlur(e)\n          if (compute) compute(values, index, setFieldValue)\n        }}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  )\n}\n\n\nexport const FormikCheckBoxComponent = ({\n  userProps, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n      <Radio\n      name={field.name}\n      id={userProps.id}\n      value={userProps.id}\n      checked={userProps.id === field.value}\n      onChange={field.onChange}\n      autoFocus={focus ? focus : false}\n    />&nbsp;&nbsp;<b>{userProps.id}</b>\n      {/* {errors[field.name] && touched[field.name] ?\n        <label>{errors[field.name]}</label> :\n        <label>{userProps.isLabel ? null : startCase(toLower(field.name))}</label>} */}\n    </Form.Field>\n  );  \n\nexport const FormikSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, placeholder,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\nconst onChange = (value) => {\n  setFieldValue(field.name, value)\n  if (userProps.getValue)\n    userProps.getValue(value);\n}\n\nuseEffect(() => {\n  if(userProps.setValue && userProps.setField){\n    userProps.setField(field.name, userProps.setValue)\n  }\n}, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n      search\n      selection={isSelection ? true : false}\n      id={field.id}\n      name={field.name}\n      placeholder={placeholder}\n      options={userProps.options}\n      value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n      onChange={(e, { value }) => onChange(value)}\n      autoFocus={focus ? focus : false}\n      clearable\n      disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n      style={{width: '100%'}}\n      />     \n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikMultiSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n  \n  useEffect(() => {\n    if(userProps.setValue && userProps.setField){\n      userProps.setField(field.name, userProps.setValue)\n    }\n  }, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n        options={userProps.options}\n        placeholder={userProps.placeholder}\n        search\n        selection\n        fluid\n        multiple\n        allowAdditions\n        value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n        onChange={(e, { value }) => onChange(value)}\n        disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n        style={{width: '100%'}}\n        selection={isSelection ? true : false}\n        id={field.id}\n        name={field.name}\n      />\n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikAsyncSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, width, appendLabel, appendLabelText, className, isFetching,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n\n\n  const loadOptions = (searchQuery) => {\n      userProps.getInputValue(searchQuery, values.id);\n  }\n  return (\n\n    // <Form.Field error={errors[field.name] && touched[field.name]}>{appendLabel ? className : \"\"}\n    <Form.Field width={width ? width : null} className=\"goRelative\" error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <Dropdown\n        search\n        selection={isSelection ? true : false}\n        // selectOnNavigation={true}\n        id={field.id}\n        name={field.name}\n        placeholder={userProps.placeHolder}\n        options={userProps.searchOptions && userProps.searchOptions.length>0 ? userProps.searchOptions : userProps.options}\n        value={field.value}\n        onSearchChange={(e, { searchQuery }) => loadOptions(searchQuery)}\n        onChange={(e, { value }) => onChange(value)}\n        placeholder={userProps.placeholder}\n        clearable\n        searchInput={{ autoFocus: focus ? focus : false }}\n        style={{width: '100%'}}\n        />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      {appendLabel ? isFetching  ? <Loader active size=\"mini\" className=\"smallLoader\"/> : <Label size=\"mini\" className=\"noColorLabel\">{appendLabelText}</Label> : null}\n      </Form.Field>\n  )\n};  \n\n\nexport const FormikTextAreaComponent = ({\n  userProps, isTxn, isLabel, label, tabindex,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, handleBlur, setFieldValue, HeaderClick }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const [ count, setCount ] = useState(0)\n\n  const onChange = (syntheticEvent, value) => {\n    setFieldValue(field.name, value.value)\n    setCount(value.value.length)\n    if(value.value !== \"\"){\n      if (userProps.getValue)\n        userProps.getValue(value.value);\n    }else{\n      if (userProps.getValue)\n        userProps.getValue('');\n    }\n  }\n  \n  useEffect(() => {\n    if(userProps){\n      if(userProps.value){\n        setFieldValue(field.name, userProps.value)\n      }\n    }\n  }, [userProps.value])\n\n  useEffect(() => {\n    if(userProps && userProps.displayCount !== undefined && userProps.displayCount === true && field.value && field.value.length === 0){\n      setCount(0)\n    }else{\n      if(field.value && field.value.length > 0){\n        setCount(field.value.length)\n      }else{\n        setCount(0)\n      }\n    }\n  }, [field.value])\n\n  const height = userProps ? (userProps.height === undefined ? 3 : (userProps.height === '' ? 3 : userProps.height === 0 ? 3 : userProps.height)): 3;\n  const isFloatLeft = userProps && userProps.displayCount !== undefined && userProps.displayCount === true ? 'left' : null\n  return (\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label style={{float: isFloatLeft}}>{errors[field.name]}</label> :\n        <label style={{float: isFloatLeft}}>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      {userProps ? userProps.displayCount !== undefined && userProps.displayCount === true ?\n          <label style={{float: 'right'}}>{count} / {userProps.maxLength}</label>\n          : null: null}\n        <TextArea\n          name={field.name}\n          style={{ \n              resize: 'none', \n              width: '100%'\n          }}\n          value={field.value}\n          onChange={onChange}\n          rows={height}\n          maxLength={userProps ? userProps.maxLength : null}\n          tabIndex={tabindex ? tabindex : '0'}\n          placeholder={userProps ? userProps.getholder : null}>\n        </TextArea>\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikDisplayLabelComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, text,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>\n      <label className=\"AutoGenerate\">{text}</label>\n    </Form.Field>\n  );\n\n// export const FormikAsyncSelectComponent = ({\n//   userProps, isLabel, label, isTxn,\n//   field, // { name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//       userProps.getValue(value);\n//   }\n\n\n//   const loadOptions = (inputValue, callback) => {\n//     userProps.getInputValue(inputValue, callback);\n//   }\n\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <AsyncSelect\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         defaultOptions={userProps.options}\n//         loadOptions={loadOptions} \n//         value={userProps.options ? userProps.options.find(option => option.value === field.value) : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n// export const regexCheckLakhWithZeroDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:|,\\d+)?$/\n// export const regexCheckLakhWithTwoDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,2})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithThreeDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,3})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithFourDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,4})|,\\d+|\\.)?$/\n\n// export const FormikAmtForTxnComponent = ({\n//   isLabel,\n//   label,\n//   field,  //{ name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleBlur, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const [ textVal, setTextValue ] = useState(\"\")\n\n// return (\n//     <Form.Field error={errors[field.name] && touched[field.name]}>\n//       {errors[field.name] && touched[field.name] ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Input \n//         name={field.name}\n//         type=\"text\"\n//         onFocus={e => (field.value) ? setTextValue(parseFloat(field.value).toString().replace(/,/g, '')): \"\"}\n//         onChange={e => {\n//           // const re = /^(?:\\d+|\\d{1,3}(?:,\\d{2})+)(?:(\\.|,)\\d+|\\.\\d{0,2})?$/;\n//           // const re = lakhWithTwoDecimal;\n//           if (e.target.value === '' || regexCheckLakhWithTwoDecimal.test(e.target.value)) {\n//             setTextValue(e.target.value)\n//             setFieldValue(field.name, e.target.value)\n//           }          \n//         }}\n//         onBlur={e => {\n//           // handleBlur(e) \n//           let vl = (field.value) ? parseFloat(field.value).toFixed(2).replace(regexConvertToLakh, '$1,') : \"\"\n//           setTextValue(vl)\n//           // let someValue = e.currentTarget.value\n//     }}\n//         value={textVal}\n//       />\n//     </Form.Field>\n//   )};\n\n\n// export const FormikSelectComponent = ({\n//     userProps, isLabel, label, isTxn,\n//     field, // { name, value, onChange, onBlur }\n//     form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//     ...props\n//   }) => {\n  \n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//     userProps.getValue(value);\n//   }\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Select\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         options={userProps.options}\n//         // value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n","import React from 'react';\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\n    \n\nconst PlantSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = [{\n        key : \"1\",\n        value : 1,\n        text : \"1\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default PlantSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectGroup } from '../data/selectors'\n    \n\nconst GroupSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = useSelector(state => selectGroup(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default GroupSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectBank } from '../data/selectors'\n    \n\nconst BankSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n    \n    const opt = useSelector(state => selectBank(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default BankSelect;\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createGroup } from '../data/actions' \r\nimport { groupSchema, group } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst GroupPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const saveGroup = (values) => {\r\n        dispatch(createGroup(values))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Group' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Group</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"groupPopupForm\" size=\"large\" width={5}\r\n                    initialValues={group()}\r\n                    validationSchema={groupSchema}\r\n                    onSubmit={(values) => saveGroup(values)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupPopup;","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBank } from '../data/actions'\r\nimport { bankSchema, bank } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst BankPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const saveBank = (values) => {\r\n        dispatch(createBank(values))\r\n        setDisplayStatus(false)\r\n    }\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Bank</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"bankPopupForm\" size=\"large\" width={5}\r\n                    initialValues={bank()}\r\n                    validationSchema={bankSchema}\r\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BankPopup;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getParty, getPartyParams, getSavedPartyId, getNotification } from '../data/selectors'\nimport { createParty, editParty, setNotifyDoneParty } from '../data/actions'\nimport { partySchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikAmountComponent, FormikInputComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\nimport PlantSelect from '../../party/components/plantSelect'\nimport GroupSelect from '../../group/components/groupSelect'\nimport BankSelect from '../../bank/components/bankSelect'\nimport GroupPopup from '../../group/components/groupPopup'\nimport BankPopup from '../../bank/components/bankPopup'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst PartyForm = (props) => {\n\n    const party = useSelector(state => getParty(state, props))\n    const savedPartyId = useSelector(state => getSavedPartyId(state, props))\n    const params = useSelector(state => getPartyParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveParty = (values, resetForm) => {\n        if (props.match.path === '/party/create') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(createParty(values))\n            resetForm()\n        }\n        if (props.match.path === '/party/edit/:id') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(editParty(values))\n            props.history.push(`/party/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"partyForm\" size=\"large\" width={5}\n                    initialValues={party}\n                    validationSchema={partySchema}\n                    onSubmit={(values, { resetForm }) => saveParty(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <PlantSelect name=\"plantNo\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'plantNo' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"plantName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"address\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 400, displayCount: true, height: 3 }} focus={true} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"phone\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <BankSelect name=\"bankM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'bankM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <BankPopup setFieldVal={setFieldValue} name='bankPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyBankAccNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"balance\" label=' ' component={FormikAmountComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"nickName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <GroupSelect name=\"groupM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'groupM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <GroupPopup setFieldVal={setFieldValue} name='groupPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <br /><br /><br /><br />\n                            {savedPartyId && savedPartyId !== 0 && props.match.path === '/party/create' ?\n                            <Notification id={savedPartyId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneParty} type='save' />\n                            :\n                            null}\n                            {console.log(\"text----------------\" + params.submitButtonText)}\n                            <div className=\"stickeyDiv CustomeFormPurchase\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/party/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PartyForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport PartyList from \"./components/partyList\";\nimport PartyForm from \"./components/partyForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Party = () => {\n    return (\n        <Container>\n            <Route path=\"/party/list\" component={withRouter(PartyList)} />\n            <Route path=\"/party/edit/:id\" component={PartyForm} />\n            <Route path=\"/party/create\" component={PartyForm} />\n        </Container>\n    )\n};\n\nexport default Party;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteBank, setNotifyDoneBank } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchBank } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Bank = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.bank.status === 1 ? false : true;\n\n    const [deleteBankId, setDeleteBankId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const deleteBankFromList = (values) => {\n        const getVlaue = { id: values }\n        setDeleteBankId(values)\n        dispatch(deleteBank(getVlaue))\n        setModalOption({status: false, id: 0})\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.bank.bankName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/bank/edit/\" + props.bank.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({status: true, id: props.bank.id})}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                {console.log(deleteBankId)}\n                    { \n                        deleteBankId ?\n                            <Notification id={deleteBankId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneBank} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteBankFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst BankList = (props) => {\n    // Loading Logic if tasks not fetched\n    const bank = useSelector(state => select.getBankList(state, props))\n    const bankFetched = useSelector(state => select.getIsBankFetched(state, props))\n    const dispatch = useDispatch()\n    const addBankClick = () => {\n        props.history.push('/bank/create')\n    }\n\n    useEffect(() => {\n        dispatch(fetchBank())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Bank List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addBankClick()}>\n                            Add Bank<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '10%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '80%' }}>Bank Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!bankFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(bank).map((key, index) =>\n                                <Bank bank={bank[key]} key={bank[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default BankList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getBank, getBankParams, getSavedBankId, getNotification } from '../data/selectors'\nimport { createBank, editBank, setNotifyDoneBank } from '../data/actions' \nimport { bankSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst BankForm = (props) => {\n\n    const bank = useSelector(state => getBank(state, props))\n    const savedBankId = useSelector(state => getSavedBankId(state, props))\n    const params = useSelector(state => getBankParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveBank = (values, resetForm) => {\n        if (props.match.path === '/bank/create') {\n            dispatch(createBank(values))\n            resetForm()\n        }\n        if (props.match.path === '/bank/edit/:id') {\n            dispatch(editBank(values))\n            props.history.push(`/bank/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"bankForm\" size=\"large\" width={5}\n                    initialValues={bank}\n                    validationSchema={bankSchema}\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/bank/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedBankId && savedBankId !== 0 && props.match.path === '/bank/create' ? \n                            <Notification id={savedBankId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneBank} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default BankForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BankList from \"./components/bankList\";\nimport BankForm from \"./components/bankForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Bank = () => {\n    return (\n        <Container>\n            <Route path=\"/bank/list\" component={withRouter(BankList)} />\n            <Route path=\"/bank/edit/:id\" component={BankForm} />\n            <Route path=\"/bank/create\" component={BankForm} />\n        </Container>\n    )\n};\n\nexport default Bank;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteGroup, setNotifyDoneGroup, fetchGroup } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Group = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.group.status === 1 ? false : true;\n    \n    const [deleteGroupId, setDeleteGroupId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n    \n    const deleteGroupFromList = (values) => {\n        const getVlaue = {id: values}\n        dispatch(deleteGroup(getVlaue))\n        setDeleteGroupId(values)\n        setModalOption({status: false, id: 0})\n    }\n    \n    return(\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.group.groupName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ? \n                    <>\n                        <Link to={\"/group/edit/\"+props.group.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{cursor: 'pointer', color: 'red'}} onClick={() => setModalOption({status: true, id: props.group.id})}>Delete</span>\n                    </>\n                :\n                    <span>Deleted</span>\n                }\n                <>\n                {\n                    deleteGroupId ? \n                    <Notification id={deleteGroupId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneGroup} type='delete'/>\n                    :\n                    null\n                }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Group?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteGroupFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst GroupList = (props) => {\n    // Loading Logic if tasks not fetched\n    const group = useSelector(state => select.getGroupList(state, props)) \n    const groupFetched = useSelector(state => select.getIsGroupFetched(state, props))\n    const dispatch = useDispatch()\n    \n    const addGroupClick = () => {\n        props.history.push('/group/create');\n    }\n    \n    useEffect(()=>{\n        dispatch(fetchGroup())\n    })      \n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Group List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addGroupClick()}>\n                            Add Group<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br/>\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{width: '10%'}}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '80%'}}>Group Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '10%'}}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!groupFetched ? \n                    <>\n                        <Table.Row>\n                            <Table.Cell style={{width: '100%'}} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>                             \n                        </Table.Row>\n                    </> :\n                    <>\n                    { Object.keys(group).map((key, index) => \n                    <Group group={group[key]} key={group[key].id} index={index}/> )}\n                    </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default GroupList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getGroup, getGroupParams, getSavedGroupId, getNotification } from '../data/selectors'\nimport { createGroup, editGroup, setNotifyDoneGroup } from '../data/actions' \nimport { groupSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst GroupForm = (props) => {\n\n    const group = useSelector(state => getGroup(state, props))\n    const savedGroupId = useSelector(state => getSavedGroupId(state, props))\n    const params = useSelector(state => getGroupParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveGroup = (values, resetForm) => {\n        if (props.match.path === '/group/create') {\n            dispatch(createGroup(values))\n            resetForm()\n        }\n        if (props.match.path === '/group/edit/:id') {\n            dispatch(editGroup(values))\n            props.history.push(`/group/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"groupForm\" size=\"large\" width={5}\n                    initialValues={group}\n                    validationSchema={groupSchema}\n                    onSubmit={(values, { resetForm }) => saveGroup(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/group/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedGroupId && savedGroupId !== 0 && props.match.path === '/group/create' ? \n                            <Notification id={savedGroupId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneGroup} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default GroupForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport GroupList from \"./components/groupList\";\nimport GroupForm from \"./components/groupForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Group = () => {\n    return (\n        <Container>\n            <Route path=\"/group/list\" component={withRouter(GroupList)} />\n            <Route path=\"/group/edit/:id\" component={GroupForm} />\n            <Route path=\"/group/create\" component={GroupForm} />\n        </Container>\n    )\n};\n\nexport default Group;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const milkRates =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const milkRatesSchema = Yup.object().shape({\n    type: Yup.string()\n        .required('This is a Required Field'),\n\n    pageName: Yup.string()\n        .required('This is a Required Field'),\n        \n    goodFat: Yup.string()\n        .required('This is a Required Field'),\n\n    goodSnf: Yup.string()\n        .required('This is a Required Field'),\n\n    badFat: Yup.string()\n        .required('This is a Required Field'),\n\n    badSnf: Yup.string()\n        .required('This is a Required Field')\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { milkRates } from './model'\n\nexport const getIsFetchingMilkRates = (state, props) => state.milkRates.params.isFetching\nexport const getIsMilkRatesFetched = (state, props) => state.milkRates.params.milkRatesFetched\nexport const getSavedMilkRatesId = (state, props) => state.milkRates.params.savedMilkRatesId\nexport const getMilkRatesList = (state, prop) => state.milkRates.byId\nexport const getNotification = (state, id) => state.milkRates.notifications[id]\n\nexport const getMilkRates = (state, props) => {\n    return milkRates()\n}\nexport const getMilkRatesParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/milkRates/create')){ \n        params.title = state.milkRates.params.createTitle\n        params.submitButtonText = state.milkRates.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/milkRates/edit/')){ \n        params.title = state.milkRates.params.editTitle\n        params.submitButtonText = state.milkRates.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const settings = useSelector(state => select.getMilkRatesList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { milkRatesSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editMilkRates, setNotifyDoneMilkRates } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MilkRatesForm = (props) => {\r\n    \r\n    const milkRates = useSelector(state => select.getMilkRates(state, props))\r\n    const savedMilkRatesId = useSelector(state => select.getSavedMilkRatesId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMilkRates = (values, resetForm) => {\r\n        dispatch(editMilkRates(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Milk Price / Rates</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={milkRates}\r\n                    validationSchema={milkRatesSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveMilkRates(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMilkRatesId && savedMilkRatesId !== 0 ? \r\n                            <Notification id={savedMilkRatesId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMilkRates} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MilkRatesForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MilkRatesForm from \"./components/milkRatesForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst MilkRates = () => {\n    return (\n        <Container>\n            <Route path=\"/milkRates/update\" component={withRouter(MilkRatesForm)} />\n        </Container>\n    )\n};\n\nexport default MilkRates;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const standard =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const standardSchema = Yup.object().shape({\n\n  type: Yup.string()\n  .required('This is a Required Field'),\n\n  pageName: Yup.string()\n    .required('This is a Required Field'),\n    \n  goodFat: Yup.string()\n    .required('This is a Required Field'),\n\n  goodSnf: Yup.string()\n    .required('This is a Required Field'),\n\n  badFat: Yup.string()\n    .required('This is a Required Field'),\n\n  badSnf: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { standard } from './model'\n\nexport const getIsFetchingStandard = (state, props) => state.standard.params.isFetching\nexport const getIsStandardFetched = (state, props) => state.standard.params.standardFetched\nexport const getSavedStandardId = (state, props) => state.standard.params.savedStandardId\nexport const getStandardList = (state, prop) => state.standard.byId\nexport const getNotification = (state, id) => state.standard.notifications[id]\n\nexport const getStandard = (state, props) => {\n    return standard()\n}\n\nexport const getStandardParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/standard/create')){ \n        params.title = state.standard.params.createTitle\n        params.submitButtonText = state.standard.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/standard/edit/')){ \n        params.title = state.standard.params.editTitle\n        params.submitButtonText = state.standard.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const settings = useSelector(state => select.getStandardList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { standardSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editStandard, setNotifyDoneStandard } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst StandardForm = (props) => {\r\n\r\n    const standard = useSelector(state => select.getStandard(state, props))\r\n    const savedStandardId = useSelector(state => select.getSavedStandardId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveStandard = (values, resetForm) => {\r\n        dispatch(editStandard(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Standard</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={standard}\r\n                    validationSchema={standardSchema}\r\n                    onSubmit={(values, { resetForm }) => saveStandard(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedStandardId && savedStandardId !== 0 ? \r\n                            <Notification id={savedStandardId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneStandard} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StandardForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport StandardForm from \"./components/standardForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Standard = () => {\n    return (\n        <Container>\n            <Route path=\"/standard/update\" component={withRouter(StandardForm)} />\n        </Container>\n    )\n};\n\nexport default Standard;\n\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const misc =  () => ({\n    \"typeName\": \"\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"updatedOn\": \"\",\n    \"value\": \"\",\n    \"operation\": \"\",\n    \"operationOn\": \"\",\n    \"createdOn\" : \"\",\n    \"status\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const miscSchema = Yup.object().shape({\n\n  name: Yup.string()\n  .required('This is a Required Field'),\n\n  value: Yup.string()\n    .required('This is a Required Field'),\n\n  operationOn: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { misc } from './model'\n\nexport const getIsFetchingMisc = (state, props) => state.misc.params.isFetching\nexport const getIsMiscFetched = (state, props) => state.misc.params.miscFetched\nexport const getSavedMiscId = (state, props) => state.misc.params.savedMiscId\nexport const getMiscList = (state, prop) => state.misc.byId\nexport const getMiscListByName = (state, name) => state.misc.byId[name]\nexport const getNotification = (state, id) => state.misc.notifications[id]\n\nexport const getMisc = (state, props) => {\n    return misc()\n}\n\nexport const getMiscParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/misc/create')){ \n        params.title = state.misc.params.createTitle\n        params.submitButtonText = state.misc.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/misc/edit/')){ \n        params.title = state.misc.params.editTitle\n        params.submitButtonText = state.misc.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst MiscNameTypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const misc = useSelector(state => select.getMiscList(state, props))\n    const opt = [{\n        key : \"Commision\",\n        value : \"Commision\",\n        text : \"Commision\"\n    }\n    // ,{\n    //     key : \"Head Load\",\n    //     value : \"Head Load\",\n    //     text : \"Head Load\"\n    // }\n    ,{\n        key : \"Sour Milk\",\n        value : \"Sour Milk\",\n        text : \"Sour Milk\"\n    }]\n\n    const getSelectedValue = (values) => {\n        values = values.trim()\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('name', values)\n            userProps.setField('id', misc[values] ? misc[values].id ? misc[values].id : '' : '')\n            userProps.setField('typeName', misc[values] ? misc[values].typeName ? misc[values].typeName.trim() : '' : '')\n            userProps.setField('operation', misc[values] ? misc[values].operation ? misc[values].operation.trim() : '' : '')\n            userProps.setField('operationOn', misc[values] ? misc[values].operationOn ? misc[values].operationOn.trim() : '' : '')\n            userProps.setField('value', misc[values] ? misc[values].value ? misc[values].value : '' : '')\n            userProps.setField('description', misc[values] ? misc[values].description ? misc[values].description : '' : '')\n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default MiscNameTypeSelect;\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst MiscOperationType = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\r\n    const opt = [{\r\n        key : \"QTY(KG)\",\r\n        value : \"QTY(KG)\",\r\n        text : \"QTY(KG)\"\r\n    },{\r\n        key : \"Milk Price\",\r\n        value : \"Milk Price\",\r\n        text : \"Milk Price\"\r\n    },{\r\n        key : \"FAT/SNF(KG)\",\r\n        value : \"FAT/SNF(KG)\",\r\n        text : \"FAT/SNF(KG)\"\r\n    }]\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MiscOperationType;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { miscSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\r\nimport MiscNameType from './miscNameType'\r\nimport MiscOperationType from './miscOperationType'\r\nimport * as select from '../data/selectors'\r\nimport { editMisc, setNotifyDoneMisc } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MiscForm = (props) => {\r\n\r\n    const misc = useSelector(state => select.getMisc(state, props))\r\n    const savedMiscId = useSelector(state => select.getSavedMiscId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMisc = (values, resetForm) => {\r\n        console.log(values, \"------------------saving values\")\r\n        dispatch(editMisc(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Misc</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"miscForm\" size=\"large\" width={5}\r\n                    initialValues={misc}\r\n                    validationSchema={miscSchema}\r\n                    onSubmit={(values, { resetForm }) => saveMisc(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscNameType name=\"name\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    {values.name !== \"Sour Milk\" ? \r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Operation On: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscOperationType name=\"operationOn\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    : null }\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Value (Rs.): </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"value\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Description: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"description\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 200, displayCount: false, height: 3}} focus={true}/>\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMiscId && savedMiscId !== 0 ? \r\n                            <Notification id={savedMiscId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMisc} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MiscForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MiscForm from \"./components/miscForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Misc = () => {\n    return (\n        <Container>\n            <Route path=\"/misc/update\" component={withRouter(MiscForm)} />\n        </Container>\n    )\n};\n\nexport default Misc;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const finYear =  () => ({\n    \n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSchema = Yup.object().shape({\n\n    \n\n  });\n\nexport const finYearSearchList =  () => ({\n    fintype: \"\",\n    finco: \"\",\n    fdt: \"\",\n    tdt: \"\"\n})\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSearchListSchema = Yup.object().shape({\n    fdt: Yup.string()\n                .required('This is a Required Field'),\n    \n    tdt: Yup.string()\n                .required('This is a Required Field')\n\n  });","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { finYear } from './model'\n\nexport const getIsFetchingFinYear = (state, props) => state.finYear.params.isFetching\nexport const getIsFinYearFetched = (state, props) => state.finYear.params.finYearFetched\nexport const getSavedFinYearId = (state, props) => state.finYear.params.savedFinYearId\nexport const getFinYearList = (state, prop) => state.finYear.byId\nexport const getNotification = (state, id) => state.finYear.notifications[id]\n\nexport const getFinYear = (state, props) => {\n    if(props.match.path==='/finYear/create'){\n        return finYear()\n    }\n    if(props.match.path==='/finYear/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.finYear.byListId[_id]);\n        return obj\n    }\n}\n\nexport const getFinYearParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/finYear/create')){ \n        params.title = state.finYear.params.createTitle\n        params.submitButtonText = state.finYear.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/finYear/edit/')){ \n        params.title = state.finYear.params.editTitle\n        params.submitButtonText = state.finYear.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\nexport const selectFinYearList = createSelector(\n    getFinYearList,\n    finYear => { \n        const keys = Object.keys(finYear)\n        // const obj = keys.map( (key) => { return { value : key, label : year[key].name }})\n        const obj = keys.map( (key) => { return { key : key,  value : key, text : finYear[key].sessionName }})\n        return obj\n    })","import React, { useState } from 'react'\r\nimport store from 'store2'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Container, Button, Table, Icon, Dropdown, Modal } from 'semantic-ui-react'\r\nimport * as select from '../data/selectors'\r\nimport { createFinYear, setNotifyDoneFinYear } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\nconst FinYearForm = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [year, setYear] = useState(false)\r\n    const dispatch = useDispatch()\r\n    \r\n    const finYearFetched = useSelector(state => select.getIsFinYearFetched(state, props))\r\n    const savedFinYearId = useSelector(state => select.getSavedFinYearId(state, props))\r\n    const options = useSelector(state => select.selectFinYearList(state, props))\r\n    \r\n    const onchangeDD = (value) => {\r\n        setYear(value)\r\n    }\r\n\r\n    const addNewFinYear = () => {\r\n        setDisplayStatus(true)\r\n    }\r\n\r\n    const addFinYear = () => {\r\n        dispatch(createFinYear({}))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    const setSessionAndGoToApp = () => {}\r\n\r\n    return (\r\n        <Container className='formContainer'>\r\n            <Table>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Financial Year: </label></Table.Cell>\r\n                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                        {\r\n                            !finYearFetched && options.length > 0 ? \r\n                                <>Loading</> \r\n                            : \r\n                                <Dropdown clearable options={options} selection style={{float: 'right', width: '85%'}} onChange={(e, { value }) => onchangeDD(value)}/>\r\n                        }\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n            <Modal open={displayStatus} size='mini' trigger={<Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'left' }} onClick={() => addNewFinYear()}>Add Year<Icon name='add circle' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header>Confirmation</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Do you want to add new Financial Year?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => addFinYear(false)} positive labelPosition='right' icon='checkmark' content='Yes'/>\r\n                    <Button onClick={() => setDisplayStatus(false)} negative labelPosition='right' icon='close' content='No'/>\r\n                </Modal.Actions>\r\n            </Modal>\r\n            <Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }} onClick={() => setSessionAndGoToApp()}>\r\n                Go\r\n                <Icon name='arrow alternate circle right' />\r\n            </Button>\r\n            <br /><br /><br /><br />\r\n            {savedFinYearId && savedFinYearId !== 0 ? \r\n                <Notification id={savedFinYearId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneFinYear} type='save'/>\r\n            :\r\n            null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FinYearForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport FinYearForm from \"./components/finYearForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst FinYear = () => {\n    return (\n        <Container>\n            <Route path=\"/finyear\" component={withRouter(FinYearForm)} />\n        </Container>\n    )\n};\n\nexport default FinYear;\n\n","import { createSelector } from 'reselect'\nimport { cloneDeep } from 'lodash'\nimport { purchase, purchaseDetails } from './model'\nimport store from 'store2'\n\nexport const getIsFetchingPurchase = (state, props) => state.purchase.params.isFetching\nexport const getIsPurchaseFetched = (state, props) => state.purchase.params.purchaseFetched\nexport const getSavedPurchaseId = (state, props) => state.purchase.params.savedPurchaseId\nexport const getIsPurchaseDeleted = (state, props) => state.purchase.params.purchaseDeleted\nexport const getPurchaseList = (state, prop) => state.purchase.byListId\nexport const getPurchaseById = (state, id) => state.purchase.byListId[id]\nexport const getNotification = (state, id) => state.purchase.notifications[id]\nexport const getMaxBillNo = (state, id) => state.purchase.params.maxBillNo\n\nexport const getPurchase = (state, props) => {\n    if(props.match.path==='/purchase/create'){\n        return purchase()\n    }\n    if(props.match.path==='/purchase/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.purchase.byListId[_id])\n        let partyM = obj.partyMaster ? obj.partyMaster.id : 0\n        obj.partyM = partyM\n        return obj\n    }\n}\n\nexport const getVdetailsObj = (state, object, index, getId, getIndex, combination) => {\n    if(index === \"\"){\n        let obj = purchaseDetails()\n        let shift = store.session('getShift')\n        obj.shift = shift\n        if(combination){\n            obj.setStandard = combination.setStandard\n            obj.setRate = combination.setRate\n        }\n        return obj\n    }else{\n        let obj = {}\n        if(object && index !== \"\" && getId !== undefined && getId !== null && object.purchaseVoucherDetails){\n            let purchaseDetails\n            if(getId !== null && getId !== undefined && getId !== \"\"){\n                purchaseDetails = object.purchaseVoucherDetails.filter((element) => {\n                    return parseInt(element.id, 10) === parseInt(getId, 10);\n                })\n                obj = purchaseDetails ? purchaseDetails[0] : {}\n            }else{\n                obj = object.purchaseVoucherDetails[getIndex]\n            }\n            cloneDeep(obj);\n        }\n        return obj\n    }\n}\n\nexport const getPurchaseParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/purchase/create'){\n        params.title = state.purchase.params.createTitle\n        params.submitButtonText = state.purchase.params.createSubmitButtonText        \n    }else if(props.match.path==='/purchase/edit/:id'){\n        params.title = state.purchase.params.editTitle\n        params.submitButtonText = state.purchase.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectPurchase = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : purchase[key].purchaseName }})\n        return obj\n    }\n)\n\nexport const listingPurchaseBySid = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map((key) => { \n            return purchase[key]\n        }).sort((a,b) => {\n             return  a.sId - b.sId \n        })\n        return obj\n    }\n)","import * as Yup from 'yup'\nimport moment from 'moment'\n\nexport const purchase =  () => ({\n    \"periodFromDate\": moment().format('YYYY-MM-DD'),\n    \"totalFatAmount\": \"\",\n    \"totalSnfAmount\": \"\",\n    \"totalQty\": \"\",\n    \"deductOthersType\": \"\",\n    \"adjustmentType\": \"\",\n    \"addAdvanceNarration\": \"\",\n    \"totalKgfat\": \"\",\n    \"shareType\": \"\",\n    \"commissionValue\": \"\",\n    \"sourMilkType\": \"\",\n    \"headLoadType\": \"\",\n    \"deductAdvanceNarration\": \"\",\n    \"testEquipMentValue\": \"\",\n    \"sourMilkNarration\": \"\",\n    \"id\": \"\",\n    \"commissionNarration\": \"\",\n    \"billNo\": \"\",\n    \"cattleFeedType\": \"\",\n    \"addOthersNarration\": \"\",\n    \"testEquipMentType\": \"\",\n    \"lateArrivalType\": \"\",\n    \"addOthersValue\": \"\",\n    \"billDate\": moment().format('YYYY-MM-DD'),\n    \"updatedOn\": \"\",\n    \"vaccineType\": \"\",\n    \"mtevalue\": \"\",\n    \"totalRejected\": \"\",\n    \"splIncentiveNarration\": \"\",\n    \"fodderNarration\": \"\",\n    \"purchaseVoucherDetails\": [],\n    \"splIncentiveValue\": \"\",\n    \"billTotal\": \"\",\n    \"sourMilkValue\": \"\",\n    \"periodToDate\": moment().format('YYYY-MM-DD'),\n    \"addAdvanceType\": \"\",\n    \"shareValue\": \"\",\n    \"arrearNarration\": \"\",\n    \"adjustment\": \"\",\n    \"headLoadNarration\": \"\",\n    \"deductOthersValue\": \"\",\n    \"arrearValue\": \"\",\n    \"shareNarration\": \"\",\n    \"cowLoanNarration\": \"\",\n    \"totalSour\": \"\",\n    \"fodderType\": \"\",\n    \"createdOn\": \"\",\n    \"headLoadValue\": \"\",\n    \"deductAdvanceType\": \"\",\n    \"partyM\": \"\",\n    \"vaccineValue\": \"\",\n    \"totalMilkprice\": \"\",\n    \"mtenarration\": \"\",\n    \"cowLoanValue\": \"\",\n    \"addOthersType\": \"\",\n    \"vaccineNarration\": \"\",\n    \"deductAdvanceValue\": \"\",\n    \"totalAdditions\": \"\",\n    \"cattleFeedNarration\": \"\",\n    \"netAmount\": \"\",\n    \"totalDeductions\": \"\",\n    \"mtetype\": \"\",\n    \"addAdvanceValue\": \"\",\n    \"testEquipMentNarration\": \"\",\n    \"lateArrivalValue\": \"\",\n    \"lateArrivalNarration\": \"\",\n    \"commissionType\": \"\",\n    \"splIncentiveType\": \"\",\n    \"arrearType\": \"\",\n    \"fodderValue\": \"\",\n    \"cowLoanType\": \"\",\n    \"adjustmentValue\": \"\",\n    \"adjustmentNarration\": \"\",\n    \"cattleFeedValue\": \"\",\n    \"deductOthersNarration\": \"\",\n    \"totalKgsnf\": \"\",\n    \"totalAvgRateKg\": \"\",\n    \"totalGoodFat\": \"\",\n    \"totalGoodSnf\": \"\",\n    \"totalAvgKg\": \"\",\n    \"totalBadFat\": \"\",\n    \"totalBadSnf\": \"\",\n    \"headLoadCalVal\": \"\"\n})\n\nexport const purchaseSchema = Yup.object().shape({\n\n    periodFromDate: Yup.string()\n                .required('This is a Required Field'),\n    periodToDate: Yup.string()\n                .required('This is a Required Field'),\n    billDate: Yup.string()\n                .required('This is a Required Field'),\n    billNo: Yup.string()\n                .required('This is a Required Field'),\n    partyM: Yup.string()\n                .required('This is a Required Field')\n\n  });\n\nexport const purchaseDetails =  () => ({\n    \"date\": \"\",\n    \"sourQty\": \"\",\n    \"updatedOn\": null,\n    \"createdOn\": null,\n    \"kgFat\": \"\",\n    \"snfRate\": \"\",\n    \"rejectedQty\": \"\",\n    \"clrP\": \"\",\n    \"snfP\": \"\",\n    \"fatRate\": \"\",\n    \"fatAmount\": \"\",\n    \"pvid\": \"\",\n    \"qty\": \"\",\n    \"fatP\": \"\",\n    \"snfAmount\": \"\",\n    \"id\": \"\",\n    \"kgSnf\": \"\",\n    \"milkPrice\": \"\",\n    \"remarks\": \"\",\n    \"milkRate\": \"\",\n    \"setStandard\": \"\",\n    \"setRate\": \"\",\n    \"shift\": \"\",\n    \"fatQuality\": \"\",\n    \"snfQuality\": \"\"\n  })\n\nexport const purchaseDetailsSchema = Yup.object().shape({\n\n    date: Yup.string()\n                .required('This is a Required Field')\n\n});\n\nexport const purchaseSearch = () => ({\n  'party': '',\n  'fromDt': '',\n  'toDt': ''\n})","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst PartySelect = ({ name, isTxn, isLabel, label, isSelection, setState, placeholder }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} placeholder={placeholder} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PartySelect;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deletePurchase, setNotifyDonePurchase, postPrintPurchase, postMultiplePrintPurchase, deleteMultiPurchase, fetchAllPurchase } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Form, Modal, Checkbox, Loader, Dimmer } from 'semantic-ui-react'\nimport { FormikDateComponent } from '../../../utilities/formUtils'\nimport { fetchPurchase } from '../data/actions'\nimport { purchaseSearch } from '../data/model'\nimport Notification from '../../../utilities/notificationUtils'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport PartySelect from '../../party/components/partySelect'\nimport moment from 'moment'\nimport { getPartyObjById } from '../../party/data/selectors'\n\nconst Purchase = props => {\n    const dispatch = useDispatch();\n\n    const [deletePurchaseId, setDeletePurchaseId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const party = useSelector(state => getPartyObjById(state, props.purchase ? props.purchase.partyMaster.id : 0))\n\n    const deletePurchaseFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deletePurchase(getVlaue))\n        setDeletePurchaseId(values)\n        setModalOption({status: false, id: 0})\n    }\n\n    const printPurchaseFromList = (values) => {\n        dispatch(postPrintPurchase(values))\n    }\n\n    return (\n        <Table.Row>\n            <Table.Cell> \n                <Checkbox onChange={props.compute} id={props.purchase.id} name={props.purchase.id}/>\n            </Table.Cell>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.purchase.billNo}</Table.Cell>\n            <Table.Cell>{party.partyName}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.billDate).isValid() ? moment(props.purchase.billDate).format(\"DD-MM-YYYY\") : \"\"}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.periodFromDate).isValid() ? moment(props.purchase.periodFromDate).format(\"DD/MM\") : \"\"} - {moment(props.purchase.periodToDate).isValid() ? moment(props.purchase.periodToDate).format(\"DD/MM\") : \"\"}</Table.Cell>\n            <Table.Cell>{props.purchase.totalQty ? parseFloat(props.purchase.totalQty).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgfat ? parseFloat(props.purchase.totalKgfat).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgsnf ? parseFloat(props.purchase.totalKgsnf).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAvgKg ? parseFloat(props.purchase.totalAvgKg).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAdditions ? parseFloat(props.purchase.totalAdditions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalDeductions ? parseFloat(props.purchase.totalDeductions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.billTotal ? parseFloat(props.purchase.billTotal).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalRejected ? parseFloat(props.purchase.totalRejected).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalSour ? parseFloat(props.purchase.totalSour).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>\n                <>\n                \n                    <Icon title=\"Print\" name=\"print\" style={{ cursor: 'pointer', color: '#496d91'}} onClick={() => printPurchaseFromList(props.purchase.id)} />\n                    <span>&nbsp;&nbsp;</span>\n                    <Link to={\"/purchase/edit/\" + props.purchase.id}>\n                        <Icon title=\"Edit\" name=\"pencil alternate\" style={{ cursor: 'pointer', color: '#496d91' }} />\n                    </Link><span>&nbsp;&nbsp;</span>\n                    {/* <span style={{ cursor: 'pointer', color: 'blue' }} onClick={() => editPurchaseFromList(props.purchase.id)}>Edit&nbsp;&nbsp;</span> */}\n                    <Icon title=\"Delete\" name=\"trash\" style={{ cursor: 'pointer', color: '#d44837' }} onClick={() => setModalOption({status: true, id: props.purchase.id})} />\n                </>\n                <>\n                {/* {console.log(deletePurchaseId)} */}\n                    { \n                        deletePurchaseId ?\n                            <Notification id={deletePurchaseId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDonePurchase} type='delete'/>\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Purchase?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePurchaseFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PurchaseList = (props) => {\n    // Loading Logic if tasks not fetched\n    const purchase = useSelector(state => select.listingPurchaseBySid(state, props))\n    const isPurchaseDeleted = useSelector(state => select.getIsPurchaseDeleted(state, props))\n    const dispatch = useDispatch()\n    const addPurchaseClick = () => {\n        props.history.push('/purchase/create')\n    }\n\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [modal, setModal] = useState({status: false, id: 0})\n    const [checkedIds, setCheckedIds] = useState('')\n\n    const calculateTotal = (e, { checked }) => {\n         if (checked){ \n            setCheckedIds(checkedIds + ',' + e.target.name) \n        }else { \n            setCheckedIds(checkedIds.replace(','+e.target.name, '')) \n        }\n    }\n\n    const fetchList = (values, resetForm) => {\n        // console.log(values)\n        // dispatch(fetchPurchase('11/2019-01-01/2020-12-01'))\n        if(values.fromDt !== \"\" && values.toDt !== \"\"){\n            let fromDt = moment(values.fromDt),\n                toDt = moment(values.toDt);\n            if(toDt >= fromDt){\n                let linkCreate = values.party === \"\" ? 0+\"/\"+values.fromDt+\"/\"+values.toDt : 0+\"/\"+values.party+\"/\"+values.fromDt+\"/\"+values.toDt\n                dispatch(fetchPurchase(linkCreate))\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            dispatch(fetchAllPurchase())\n        }\n    }\n\n    const addPurchaseBulkPrint = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            dispatch(postMultiplePrintPurchase(checkedIds))\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectPrint'})\n        }\n    }\n\n    const addPurchaseBulkDelete = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            setModal({status: true, id: 0})\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectDelete'})\n        }\n    }\n\n    const callToDeleteData = () => {\n        dispatch(deleteMultiPurchase(checkedIds))\n        setModal({status: false, id: 0})\n    }\n\n    return (\n        <Container>\n            {\n                isPurchaseDeleted ? \n                    <div>\n                        <Dimmer active>\n                            <Loader size=\"big\">\n                                Please Wait...<br/>Deleting Purchase <br/><br/> \n                                <font className=\"warningLoader\" style={{color: 'red'}}>\n                                    Please do not close the Browser\n                                </font>\n                            </Loader>\n                        </Dimmer>\n                    </div>\n                 :\n                    null\n            } \n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Purchase List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={12} floated={'right'} align='right'>\n                        <Formik id=\"purchaseForm\" size=\"large\" width={10}\n                            initialValues={purchaseSearch()}\n                            onSubmit={(values, { resetForm }) => fetchList(values, resetForm)}\n                            render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                                <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={10} onSubmit={handleSubmit}>\n                                    <Form.Group widths={1}>\n                                        <Table style={{width: '100%'}} className='purchasetablePop' basic='very'>\n                                            <Table.Body>\n                                                <Table.Row>\n                                                    <Table.Cell style={{width: '20%', padding: '0px 10px'}} textAlign='right'>\n                                                        <PartySelect name=\"party\" isLabel={false} placeholder='Supplier' label=\" \" isSelection={true} type=''/>\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '15%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"fromDt\" label=' ' placeholder={'From Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '15%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"toDt\" label=' ' placeholder={'To Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '50%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Button type=\"submit\" icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk'>\n                                                            Go<Icon name='arrow alternate circle right'/>\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk' onClick={() => addPurchaseClick()}>\n                                                            Add<Icon name='add' />\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk' onClick={() => addPurchaseBulkPrint()}>\n                                                            Print<Icon name='print' />\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='google plus' onClick={() => addPurchaseBulkDelete()}>\n                                                            Delete<Icon name='trash alternate outline' />\n                                                        </Button>\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            </Table.Body>\n                                        </Table>\n                                    </Form.Group>\n                                </Form>\n                            )}\n                        />\n                        <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                            <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                            <Modal.Content>\n                                <p>\n                                    {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : (modalState.keyWord === 'notselectDelete' ? 'No purchase checked to delete' : (modalState.keyWord === 'notselectPrint' ? 'No purchase checked to print' : '')))}\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                            </Modal.Actions>\n                        </Modal>\n                        <Modal open={modal.status} size='mini' onClose={() => setModal({status: false, id: 0})}>\n                            <Modal.Header>Confirmation</Modal.Header>\n                            <Modal.Content>\n                                <p>Do you want to delete checked Purchases?</p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => callToDeleteData()} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                                <Button onClick={() => setModal({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                            </Modal.Actions>\n                        </Modal>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell></Table.HeaderCell>\n                        <Table.HeaderCell>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell>Bill No.</Table.HeaderCell>\n                        <Table.HeaderCell>Supplier</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Bill Period</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>FAT(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>SNF(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>AVG(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Addi(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Dedu(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                        <Table.HeaderCell>Reg(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Sour(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                {/* {console.log(\"checkedIds==================\", checkedIds)} */}\n                <TableBody>\n                    {Object.keys(purchase).map((key, index) =>\n                        <Purchase compute={calculateTotal} purchase={purchase[key]} key={purchase[key].id} index={index} />)}\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PurchaseList;\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getPartyObjById } from '../data/selectors'\r\nimport { Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { getGroupById } from '../../group/data/selectors'\r\nimport { getBankById } from '../../bank/data/selectors'\r\n\r\n\r\nconst PartyDisplayView = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const partyObj = useSelector(state => getPartyObjById(state, props.partyId))\r\n    const group = useSelector(state => getGroupById(state, partyObj ? partyObj.groupMaster ? partyObj.groupMaster.id : 0 : 0))\r\n    const bank = useSelector(state => getBankById(state, partyObj ? partyObj.bankMaster ? partyObj.bankMaster.id : 0 : 0))\r\n\r\n    return (\r\n        <Modal size='large' closeIcon open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={() => setDisplayStatus(true)}><Icon name='eye' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Details</Modal.Header>\r\n            <Modal.Content>\r\n                {partyObj ?\r\n                    <Table>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.plantNo}\r\n                                </Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={3} style={{ width: '60%' }}>\r\n                                    {partyObj.plantName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.address}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.phone}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {bank ? bank.bankName === undefined ? '' : bank.bankName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyBankAccNo}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.balance}\r\n                                </Table.Cell>\r\n                                <Table.Cell colSpan={4} style={{ width: '60%' }}>\r\n                                    <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.nickName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {group ? group.groupName === undefined ? '' : group.groupName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    : null}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PartyDisplayView;","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst TypeTxnSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Flush\",\r\n        value : \"Flush\",\r\n        text : \"Flush\"\r\n    },{\r\n        key : \"Lean\",\r\n        value : \"Lean\",\r\n        text : \"Lean\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        setField(name, values)\r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TypeTxnSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport store from 'store2'\r\n    \r\n\r\nconst ShiftSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Morning\",\r\n        value : \"Morning\",\r\n        text : \"Morning\"\r\n    },{\r\n        key : \"Evening\",\r\n        value : \"Evening\",\r\n        text : \"Evening\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        store.session(\"getShift\", values)\r\n        console.log(\"session--------\", store.session(\"getShift\"))\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, setField: setField, setValue: store.session(\"getShift\") }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShiftSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst QualitySelect = ({ name, isTxn, isLabel, label, isSelection, disabled }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Good\",\r\n        value : \"Good\",\r\n        text : \"Good\"\r\n    },{\r\n        key : \"Bad\",\r\n        value : \"Bad\",\r\n        text : \"Bad\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, isDisable: disabled }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default QualitySelect;\r\n","import { startsWith, cloneDeep } from 'lodash'\n\nexport const getIsFetchingCombination = (state, props) => state.combination.params.isFetching\nexport const getIsCombinationFetched = (state, props) => state.combination.params.combinationFetched\nexport const getSavedCombinationId = (state, props) => state.combination.params.savedCombinationId\nexport const getCombinationList = (state, prop) => state.combination.byId\nexport const getCombinationById = (state, id) => state.combination.byId[id]\nexport const getNotification = (state, id) => state.combination.notifications[id]\n\nexport const getCombination = (state, id) => {\n    let obj = cloneDeep(state.combination.byId[id])\n    return obj\n}\n\nexport const getCombinationParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/combination/create')){ \n        params.title = state.combination.params.createTitle\n        params.submitButtonText = state.combination.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/combination/edit/')){ \n        params.title = state.combination.params.editTitle\n        params.submitButtonText = state.combination.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getVdetailsObj } from '../data/selectors'\r\nimport { Form, Button, Modal, Table, Checkbox } from 'semantic-ui-react';\r\nimport { Formik, Field, Form as FormikForm } from 'formik';\r\nimport { FormikAmountComponent, FormikTextAreaComponent, FormikDateComponent } from '../../../utilities/formUtils'\r\nimport TypeTxnSelect from './typeTxnSelect'\r\nimport ShiftSelect from './shiftSelect'\r\nimport QualitySelect from './qualitySelect'\r\nimport store from 'store2'\r\nimport { getMilkRatesList } from '../../milkRates/data/selectors'\r\nimport { getStandardList } from '../../standard/data/selectors'\r\nimport { getCombinationById } from '../../combination/data/selectors'\r\nimport Draggable from 'react-draggable'\r\n\r\nimport moment from 'moment'\r\n\r\nconst AddQuickVdetails = ({ setItemObject, setNextDate, nextDate, index, voucherObj, name, setField, values, ...props }) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [modalState, setModalState] = useState({ isOpen: false, keyWord: '' })\r\n    const [netQty, setNetQty] = useState(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n    const [isAuto, setIsAuto] = useState(false)\r\n    const [isCLRhas, setIsCLRhas] = useState(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n    const [popNextDate, setPopNextDate] = useState(nextDate)\r\n    const [onOpen, setOnOpen] = useState(false)\r\n\r\n    const combination = useSelector(state => getCombinationById(state, 1))\r\n    const vdetails = useSelector(state => getVdetailsObj(state, voucherObj, index, store.get(\"setId\"), store.get(\"setIndex\"), combination))\r\n    // console.log(\"vdetails-==========\", vdetails)\r\n    const milkRates = useSelector(state => getMilkRatesList(state, props))\r\n    const standard = useSelector(state => getStandardList(state, props))\r\n\r\n    useEffect(() => {\r\n        if (index === \"y\" && onOpen) {\r\n            setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n            setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n            setOnOpen(false)\r\n            let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n            let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n            store.session('getShift', shiftGet)\r\n        }\r\n    }, [vdetails])\r\n\r\n    const saveItems = (value, resetForm) => {\r\n        let flag = false,\r\n            qty = value.qty === undefined ? 0 : value.qty === \"\" ? 0 : value.qty,\r\n            rejectQty = value.rejectedQty === undefined ? 0 : value.rejectedQty === \"\" ? 0 : value.rejectedQty,\r\n            sourQty = value.sourQty === undefined ? 0 : value.sourQty === \"\" ? 0 : value.sourQty,\r\n            milkPrice = value.milkPrice === undefined ? 0 : value.milkPrice === \"\" ? 0 : value.milkPrice\r\n        if (qty === 0 && rejectQty === 0 && sourQty === 0) {\r\n            flag = false\r\n            setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n        } else {\r\n            if (qty !== 0) {\r\n                if (milkPrice === 0) {\r\n                    flag = false\r\n                    setModalState({ isOpen: true, keyWord: 'calculate' })\r\n                } else {\r\n                    flag = true\r\n                }\r\n            } else {\r\n                flag = true\r\n            }\r\n        }\r\n        if (flag) {\r\n            if (index === '') {\r\n                let new_date = moment(value.date, \"YYYY-MM-DD\").add('days', 1),\r\n                    day = new_date.format('DD'),\r\n                    month = new_date.format('MM'),\r\n                    year = new_date.format('YYYY')\r\n                setItemObject(values, value, setField)\r\n                if(isAuto){\r\n                    store.session('getShift', value.shift)\r\n                }else{\r\n                    store.session('getShift', value.shift === \"Morning\" ? \"Evening\" : \"Morning\")\r\n                }\r\n                resetForm()\r\n                setNextDate(year+'-'+month+'-' +day)\r\n                setPopNextDate(year+'-'+month+'-' +day)\r\n            } else {\r\n                setItemObject(values, value, setField, store.get(\"setIndex\"))\r\n                setDisplayStatus(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeWindow = () => {\r\n        setDisplayStatus(false)\r\n        if(isAuto === false){\r\n            store.session('getShift', null)\r\n        }\r\n    }\r\n \r\n    const onChangeQty = (values, setField) => {\r\n        setNetQty(values)\r\n        if (values === \"\" || values === 0) {\r\n            setField('clrP', '')\r\n            setField('fatP', '')\r\n            setField('snfP', '')\r\n            setField('fatQuality', '')\r\n            setField('snfQuality', '')\r\n            setField('fatRate', '')\r\n            setField('snfRate', '')\r\n            setField('kgFat', '')\r\n            setField('kgSnf', '')\r\n            setField('fatAmount', '')\r\n            setField('snfAmount', '')\r\n            setField('milkRate', '')\r\n            setField('milkPrice', '')\r\n        }\r\n    }\r\n\r\n    const onChangeCLR = (values, setField) => {\r\n        if (values === \"\" || values === 0) {\r\n            setIsCLRhas(false)\r\n        } else {\r\n            setIsCLRhas(true)\r\n            setField('snfP', '')\r\n        }\r\n    }\r\n\r\n    const getOpenPopup = () => {\r\n        setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n        setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n        let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n        setIsAuto(getAuto)\r\n        setOnOpen(true)\r\n        store.session('isAuto', getAuto)\r\n        let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n        store.session('getShift', shiftGet)\r\n        setPopNextDate(nextDate)\r\n        if (index === \"y\") {\r\n            if (store.get(\"setIndex\") !== undefined && store.get(\"setIndex\") !== null) {\r\n                setDisplayStatus(true)\r\n            }\r\n        } else {\r\n            setDisplayStatus(true)\r\n        }\r\n    }\r\n\r\n    const setAutoTiming = (values, ischeck) => {\r\n        setIsAuto(ischeck)\r\n        store.session('isAuto', ischeck)\r\n        store.session('getShift', values.shift)\r\n    }\r\n\r\n    const calculateRate = (setField, values) => {\r\n        if (values.setStandard !== \"\" && values.setRate !== \"\") {\r\n            if (values.qty !== \"\" && values.qty !== 0) {\r\n                if (values.fatP !== \"\" && values.fatP !== 0) {\r\n                    if ((values.snfP !== undefined && values.snfP !== \"\" && values.snfP !== 0 && isCLRhas === false) || (isCLRhas === true && values.clrP !== undefined && values.clrP !== '' && values.clrP !== 0)) {\r\n                        let getStandard = values.setStandard\r\n                        let getMilkRate = values.setRate\r\n                        let standardObj = standard[getStandard]\r\n                        let milkRateObj = milkRates[getMilkRate]\r\n                        let qtyGet = values.qty\r\n                        let fat = values.fatP\r\n                        let clr = values.clrP\r\n                        let snf = isCLRhas === false ? values.snfP : ((parseFloat(clr) / 4) + (0.25 * parseFloat(fat)) + 0.44)\r\n                        if (isCLRhas) {\r\n                            setField('snfP', snf)\r\n                        }\r\n                        let fatType = parseFloat(fat) >= parseFloat(standardObj.goodFat) ? \"Good\" : \"Bad\"\r\n                        let snfType = parseFloat(snf) >= parseFloat(standardObj.goodSnf) ? \"Good\" : \"Bad\"\r\n                        setField('fatQuality', fatType)\r\n                        setField('snfQuality', snfType)\r\n                        let fatRate = fatType === \"Good\" ? milkRateObj.goodFat : milkRateObj.badFat\r\n                        let snfRate = fatType === \"Good\" ? milkRateObj.goodSnf : milkRateObj.badSnf\r\n                        setField('fatRate', fatRate)\r\n                        setField('snfRate', snfRate)\r\n                        let kgFat = (parseFloat(qtyGet) * parseFloat(fat)) / 100\r\n                        let kgSnf = (parseFloat(qtyGet) * parseFloat(snf)) / 100\r\n                        setField('kgFat', kgFat)\r\n                        setField('kgSnf', kgSnf)\r\n                        let fatAmt = parseFloat(kgFat) * parseFloat(fatRate)\r\n                        let snfAmt = parseFloat(kgSnf) * parseFloat(snfRate)\r\n                        setField('fatAmount', fatAmt)\r\n                        setField('snfAmount', snfAmt)\r\n                        let totalRs = parseFloat(fatAmt) + parseFloat(snfAmt)\r\n                        let milkRatePerKg = parseFloat(totalRs) / parseFloat(qtyGet)\r\n                        setField('milkRate', milkRatePerKg)\r\n                        setField('milkPrice', totalRs)\r\n                    } else {\r\n                        setModalState({ isOpen: true, keyWord: 'clrsnf' })\r\n                    }\r\n                } else {\r\n                    setModalState({ isOpen: true, keyWord: 'fatP' })\r\n                }\r\n            } else {\r\n                setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n            }\r\n        } else {\r\n            setModalState({ isOpen: true, keyWord: 'setDD' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Draggable handle=\".headerModal\">\r\n            <Modal open={displayStatus} dimmer={'inverted'} className=\"noDimmer\" closeOnEscape={false} closeIcon closeOnDimmerClick={false} trigger={<Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }} onClick={() => getOpenPopup()}>{index === '' ? 'Add' : 'Edit'}</Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header className=\"headerModal\" style={{cursor: 'move'}}>\r\n                    Add Details\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                        initialValues={vdetails}\r\n                        // validationSchema={itemsQuickSchema}\r\n                        onSubmit={(values, { resetForm }) => saveItems(values, resetForm)}\r\n                        render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                            <Form key={index} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                                <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                    <Table.Body>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Standard</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <TypeTxnSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Rate Name</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <TypeTxnSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <label className=\"boldText\">Supply Date</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <Form.Group widths={2}>\r\n                                                    <Field name=\"date\" label=' ' component={FormikDateComponent} setDateManually={popNextDate}/>\r\n                                                </Form.Group>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Checkbox label='Auto' checked={isAuto ? true : false} onChange={(e, { checked }) => setAutoTiming(values, checked)} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '35%' }}>\r\n                                                <ShiftSelect name=\"shift\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell colSpan='4' style={{ width: '100%', padding: '0px' }}>\r\n                                                <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                                    <Table.Body>\r\n                                                        <Table.Row className=\"VInputPanel\">\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '25%' }}>\r\n                                                                <Form.Group widths={2}>\r\n                                                                    <Field name=\"qty\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeQty} />\r\n                                                                </Form.Group>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity(R)</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <Field name=\"rejectedQty\" label=' ' component={FormikAmountComponent} tabindex={'-1'}/>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <label className=\"boldText\">Quantity(S)</label>\r\n                                                            </Table.Cell>\r\n                                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                                <Field name=\"sourQty\" label=' ' component={FormikAmountComponent} tabindex={'-1'}/>\r\n                                                            </Table.Cell>\r\n                                                        </Table.Row>\r\n                                                    </Table.Body>\r\n                                                </Table>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Table.Body>\r\n                                </Table>\r\n                                <Table style={{ width: '100%', margin: '0px' }}>\r\n                                    <Table.Body>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">CLR</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"clrP\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeCLR} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Quality</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Rate / Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Total Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Amount</label>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">Fat</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"fatP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <QualitySelect name=\"fatQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"fatRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"kgFat\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"fatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">SNF</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '15%' }}>\r\n                                                <Field name=\"snfP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : (isCLRhas === true ? true : false)} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <QualitySelect name=\"snfQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"snfRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"kgSnf\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"snfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell colSpan='2' style={{ width: '20%' }}>\r\n                                                <center><Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' disabled={netQty === \"\" || netQty === 0 ? true : false} onClick={() => { calculateRate(setFieldValue, values) }}>Calc Rate</Button></center>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Milk Rate / Kg</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"milkRate\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <label className=\"boldText\">Total Rs.</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell style={{ width: '20%' }}>\r\n                                                <Field name=\"milkPrice\" label=' ' component={FormikAmountComponent} isReadonly={true}  tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                        <Table.Row className=\"VInputPanel\">\r\n                                            <Table.Cell style={{ width: '5%' }}>\r\n                                                <label className=\"boldText\">Remarks</label>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell colSpan='3' style={{ width: '55%' }}>\r\n                                                <Field name=\"remarks\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 100, displayCount: false, height: 1 }} focus={true} tabindex={'-1'}/>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell colSpan='2' style={{ width: '40%' }}>\r\n                                                <div style={{float: 'right'}}>\r\n                                                    <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> {index === '' ? 'Add' : 'Update'} </Button>\r\n                                                    <Button type='button' onClick={() => closeWindow()} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> Close </Button>\r\n                                                </div>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Table.Body>\r\n                                </Table>\r\n                                <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({ isOpen: false, keyWord: '' })}>\r\n                                    <Modal.Header style={{ color: 'red' }}>Warning</Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <p>\r\n                                            {modalState.keyWord === 'calculate' ? 'Please enter details and calculate milk price' : (modalState.keyWord === 'anyqty' ? 'Please enter quantity' : (modalState.keyWord === \"setDD\" ? 'Please select Standard and Rate Name' : (modalState.keyWord === \"fatP\" ? 'Please enter FAT' : (modalState.keyWord === \"clrsnf\" ? 'Please enter CLR or SNF' : ''))))}\r\n                                        </p>\r\n                                    </Modal.Content>\r\n                                    <Modal.Actions>\r\n                                        <Button onClick={() => setModalState({ isOpen: false, keyWord: '' })} negative labelPosition='right' icon='checkmark' content='Okay' />\r\n                                    </Modal.Actions>\r\n                                </Modal>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default AddQuickVdetails;","import React, { useState } from 'react'\r\nimport {Table, TableBody, Modal, Button, Icon } from 'semantic-ui-react'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from 'moment'\r\nimport store from 'store2'\r\n\r\n\r\nexport const VdetailsNonEditable = ({\r\n  name, move, swap, push, insert, unshift, pop, setField, remove, // { name, value, onChange, onBlur }\r\n  form: { initialValues, values, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  ...props\r\n}) => {\r\n\r\n    let arrKeys = [];\r\n    const fieldName = name;\r\n    if (values[fieldName] && values[fieldName].length) {\r\n        arrKeys = Object.keys(values[fieldName]);\r\n    }\r\n\r\n    const [isActive, setIsActive] = useState(null)\r\n\r\n    const onclickRow = (index, id) => {\r\n        store.set(\"setIndex\", index)\r\n        store.set(\"setId\", id)\r\n        setIsActive(index)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table basic='very' selectable className='purchaseHead'>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell title=\"Date\">Date</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"Qty\">Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"CLR\">CLR</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FAT(%)\">FAT(%)</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SNF(%)\">SNF(%)</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"KGFat\">KGFat</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"KGSNF\">KGSNF</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FatRate\">FatRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SnfRate\">SnfRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FatAmt\">FatAmt</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SnfAmt\">SnfAmt</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"MilkPrice\">MilkPrice</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"MilkRate\">MilkRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"R.Qty\">R.Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"S.Qty\">S.Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell width={3} title=\"Remarks\">Remarks</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <TableBody>\r\n                {values[fieldName] && values[fieldName].length > 0 ? (\r\n                    arrKeys.map((index) => (\r\n                        <Table.Row key={`${fieldName}[${index}]`} active={isActive === index ? true : false} className=\"VInputPanel\" onClick={() => onclickRow(index, values[fieldName][index].id)}>\r\n                            <Table.Cell>\r\n                                {moment(values[fieldName][index].date).format('DD-MM-YYYY')}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].qty ? parseFloat(values[fieldName][index].qty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].clrP ? parseFloat(values[fieldName][index].clrP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatP ? parseFloat(values[fieldName][index].fatP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfP ? parseFloat(values[fieldName][index].snfP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].kgFat ? parseFloat(values[fieldName][index].kgFat).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].kgSnf ? parseFloat(values[fieldName][index].kgSnf).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatRate ? parseFloat(values[fieldName][index].fatRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfRate ? parseFloat(values[fieldName][index].snfRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatAmount ? parseFloat(values[fieldName][index].fatAmount).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfAmount ? parseFloat(values[fieldName][index].snfAmount).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].milkPrice ? parseFloat(values[fieldName][index].milkPrice).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].milkRate ? parseFloat(values[fieldName][index].milkRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].rejectedQty ? parseFloat(values[fieldName][index].rejectedQty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].sourQty ? parseFloat(values[fieldName][index].sourQty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].remarks}\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        )\r\n                    )) : null}\r\n                </TableBody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VdetailsNonEditable;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikTextAreaComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddNotesCommon = ({setItemObject, name, setField, setValueFor, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addNotes = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.addNote)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' className='labelButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}>N</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Note</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                 //initialValues={vdetails}\r\n                // validationSchema={itemsQuickSchema}\r\n                onSubmit={(values, {resetForm}) => addNotes(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name='addNote' label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 3, value: setValueFor}} focus={true}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNotesCommon;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddHeadLoad = ({setItemObject, name, setField, setValueFor, afterWork, sendValue, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addHeadLoad = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.headLoad)\r\n        sendValue[name] = values.headLoad\r\n        afterWork(sendValue, setField)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}><Icon name='question'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Head Load Value</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                onSubmit={(values, {resetForm}) => addHeadLoad(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name=\"headLoad\" label=' ' component={FormikAmountComponent} setValue={setValueFor}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddHeadLoad;","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPurchase, getPurchaseParams, getSavedPurchaseId, getNotification, getMaxBillNo } from '../data/selectors'\nimport { createPurchase, editPurchase, setNotifyDonePurchase } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, FieldArray, Form as FormikForm } from 'formik'\nimport { FormikInputComponent, FormikDateComponent, FormikTextAreaComponent, FormikAmountComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\nimport PartySelect from '../../party/components/partySelect'\nimport PartyDisplayView from \"../../party/components/partyDisplayView\"\nimport AddQuickVdetails from './addQuickVdetails'\nimport VdetailsNonEditable from './vdetailsNonEditable'\nimport store from 'store2'\nimport AddNotesCommon from './addNotePopUpCommon'\nimport AddHeadLoad from './addHeadLoadPopup'\nimport { getMiscListByName } from '../../misc/data/selectors'\nimport moment from 'moment'\n\n\nconst PurchaseForm = (props) => {\n\n    const purchase = useSelector(state => getPurchase(state, props))\n    const savedPurchaseId = useSelector(state => getSavedPurchaseId(state, props))\n    const params = useSelector(state => getPurchaseParams(state, props))\n    const commisionMisc = useSelector(state => getMiscListByName(state, 'Commision'))\n    const sourMilkMisc = useSelector(state => getMiscListByName(state, 'Sour Milk'))\n    const maxBillNo = useSelector(state => getMaxBillNo(state, props))\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [nextDate, setNextDate] = useState()\n    const [commissionValGet, setCommissionValGet] = useState('')\n    const [commissionOn, setCommissionOn] = useState('')\n    const [sourValGet, setSourValGet] = useState('')\n    const [sourOn, setSourOn] = useState('')\n    const [headLoadOn, setHeadLoadOn] = useState('')\n\n    const billNo = purchase ? (purchase.billNo ? purchase.billNo : maxBillNo) : maxBillNo\n\n    const [partyId, setPartyId] = useState(purchase ? (purchase.partyMaster ? purchase.partyMaster.id : 0) : 0)\n\n    useEffect(() => {\n        store.remove(\"setId\")\n        store.remove(\"setIndex\")\n    }, [])\n    \n\n    const savePurchase = (values, resetForm) => {\n        if(values.billDate !== undefined && values.billDate !== '' && values.billDate !== 0){\n            if(values.periodFromDate !== undefined && values.periodFromDate !== '' && values.periodFromDate !== 0){\n                if(values.periodToDate !== undefined && values.periodToDate !== '' && values.periodToDate !== 0){\n                    let fromDt = moment(values.periodFromDate),\n                        toDt = moment(values.periodToDate);\n                    if(toDt >= fromDt){\n                        if(values.partyM !== undefined && values.partyM !== '' && values.partyM !== 0){\n                            if(Object.keys(values.purchaseVoucherDetails).length > 0){\n                                values.partyMaster = {id: values.partyM}\n                                delete values.partyM\n                                if (props.match.path === '/purchase/create') {\n                                    dispatch(createPurchase(values))\n                                    resetForm()\n                                    setNextDate(null)\n                                }\n                                if (props.match.path === '/purchase/edit/:id') {\n                                    dispatch(editPurchase(values))\n                                    props.history.push(`/purchase/list`)\n                                }\n                            }else{\n                                setModalState({isOpen: true, keyWord: 'Please enter purchase details row'})\n                            }\n                        }else{\n                            setModalState({isOpen: true, keyWord: 'Please select Supplier'})\n                        }\n                    }else{\n                        setModalState({isOpen: true, keyWord: 'Period To Date should be greater than Period From Date'})\n                    }\n                }else{\n                    setModalState({isOpen: true, keyWord: 'Please enter Period To Date'})\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'Please enter Period From Date'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'Please enter Bill Date'})\n        }\n    }\n\n    function getVdArr (setField) {\n        return <FieldArray name='purchaseVoucherDetails' component={VdetailsNonEditable} setField={setField}/>\n    }\n\n    const setItemObjectAdd = (values, value, setField) => {\n        values.purchaseVoucherDetails.push(value)\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectEdit = (values, value, setField, index) => {\n        values.purchaseVoucherDetails[index] = value\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectDelete = (values, setField) => {\n        if(store.get(\"setId\") !== null && store.get(\"setId\") !== undefined && store.get(\"setId\") !== \"\"){\n            let purchaseDetails = values.purchaseVoucherDetails,\n                id = store.get(\"setId\"),\n                newPurchaseDetails =  purchaseDetails.filter((element) => {\n                    return parseInt(element.id, 10) !== parseInt(id, 10);\n                })\n            setField('purchaseVoucherDetails', newPurchaseDetails)\n            values.purchaseVoucherDetails = newPurchaseDetails\n            callSetAllData(setField, values)\n        }\n    }\n\n    const callSetAllData = (setField, values) => {\n        let totalRejectedQty = 0\n        let totalSourQty = 0\n        let totalKgFat = 0\n        let totalKgSnf = 0\n        let totalFatAmt = 0\n        let totalSnfAmt = 0\n        let totalMilkprice = 0\n        let ratePerKg = 0\n        let totalQty = 0\n        let totalGoodFat = 0\n        let totalGoodSnf = 0\n        let totalBadFat = 0\n        let totalBadSnf = 0\n        let pDetails = values.purchaseVoucherDetails\n        if(Object.keys(pDetails).length > 0){\n            for(let i = 0; i < Object.keys(pDetails).length; i++){\n                if(pDetails[i]){\n                    totalRejectedQty = parseFloat(totalRejectedQty) + parseFloat((pDetails[i].rejectedQty === null || pDetails[i].rejectedQty === undefined || pDetails[i].rejectedQty === \"\") ? 0 : pDetails[i].rejectedQty)\n                    totalSourQty = parseFloat(totalSourQty) + parseFloat((pDetails[i].sourQty === null || pDetails[i].sourQty === undefined || pDetails[i].sourQty === \"\") ? 0 : pDetails[i].sourQty)\n                    totalKgFat = parseFloat(totalKgFat) + parseFloat((pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat)\n                    totalKgSnf = parseFloat(totalKgSnf) + parseFloat((pDetails[i].kgSnf === null|| pDetails[i].kgSnf === undefined|| pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf)\n                    totalFatAmt = parseFloat(totalFatAmt) + parseFloat((pDetails[i].fatAmount === null || pDetails[i].fatAmount === undefined || pDetails[i].fatAmount === \"\") ? 0 : pDetails[i].fatAmount)\n                    totalSnfAmt = parseFloat(totalSnfAmt) + parseFloat((pDetails[i].snfAmount === null || pDetails[i].snfAmount === undefined || pDetails[i].snfAmount === \"\") ? 0 : pDetails[i].snfAmount)\n                    totalMilkprice = parseFloat(totalMilkprice) + parseFloat((pDetails[i].milkPrice === null || pDetails[i].milkPrice === undefined || pDetails[i].milkPrice === \"\") ? 0 : pDetails[i].milkPrice)\n                    totalQty = parseFloat(totalQty) + parseFloat((pDetails[i].qty === null || pDetails[i].qty === undefined || pDetails[i].qty === \"\") ? 0 : pDetails[i].qty)\n                    totalGoodFat = parseFloat(totalGoodFat) + parseFloat(pDetails[i].fatQuality === \"Good\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalGoodSnf = parseFloat(totalGoodSnf) + parseFloat(pDetails[i].snfQuality === \"Good\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                    totalBadFat = parseFloat(totalBadFat) + parseFloat(pDetails[i].fatQuality === \"Bad\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalBadSnf = parseFloat(totalBadSnf) + parseFloat(pDetails[i].snfQuality === \"Bad\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                }\n            }\n            if(parseFloat(totalQty) !== 0){\n                ratePerKg = parseFloat(totalMilkprice) / parseFloat(totalQty)\n            }            \n        }\n        setField('totalRejected', totalRejectedQty)\n        setField('totalSour', totalSourQty)\n        setField('totalKgfat', totalKgFat)\n        setField('totalKgsnf', totalKgSnf)\n        setField('totalFatAmount', totalFatAmt)\n        setField('totalSnfAmount', totalSnfAmt)\n        setField('totalQty', totalQty)\n        setField('totalMilkprice', totalMilkprice)\n        setField('totalAvgRateKg', ratePerKg)\n        setField('totalAvgKg', totalQty)\n        setField('totalGoodFat', totalGoodFat)\n        setField('totalGoodSnf', totalGoodSnf)\n        setField('totalBadFat', totalBadFat)\n        setField('totalBadSnf', totalBadSnf)\n        values.totalRejected = totalRejectedQty\n        values.totalSour = totalSourQty\n        values.totalKgfat = totalKgFat\n        values.totalKgsnf = totalKgSnf\n        values.totalFatAmount = totalFatAmt\n        values.totalSnfAmount = totalSnfAmt\n        values.totalQty = totalQty\n        values.totalMilkprice = totalMilkprice\n        values.totalAvgRateKg = ratePerKg\n        values.totalAvgKg = totalQty\n        values.totalGoodFat = totalGoodFat\n        values.totalGoodSnf = totalGoodSnf\n        values.totalBadFat = totalBadFat\n        values.totalBadSnf = totalBadSnf\n        if(values.headLoadValue !== null && values.headLoadValue !== undefined && values.headLoadValue !== \"\"){\n            computeHeadLoad(values, setField)\n        }\n        if(values.commissionValue !== null && values.commissionValue !== undefined && values.commissionValue !== \"\"){\n            computeCommission(values, setField)\n        }\n        if(values.sourMilkValue !== null && values.sourMilkValue !== undefined && values.sourMilkValue !== \"\"){\n            computeSourMilk(values, setField)\n        }\n        nowSetTotalValue(values, setField)\n    }\n\n    const totalAdditionAndDeduction = (val, index, setField) => {\n        let purchaseV = val\n        let commissionValue = purchaseV.commissionValue && purchaseV.commissionValue !== \"\" ? purchaseV.commissionValue : 0\n        let lateArrivalValue = purchaseV.lateArrivalValue && purchaseV.lateArrivalValue !== \"\" ? purchaseV.lateArrivalValue : 0\n        let mtevalue = purchaseV.mtevalue && purchaseV.mtevalue !== \"\" ? purchaseV.mtevalue : 0\n        let cattleFeedValue = purchaseV.cattleFeedValue && purchaseV.cattleFeedValue !== \"\" ? purchaseV.cattleFeedValue : 0\n        let splIncentiveValue = purchaseV.splIncentiveValue && purchaseV.splIncentiveValue !== \"\" ? purchaseV.splIncentiveValue : 0\n        let headLoadValue = purchaseV.headLoadValue && purchaseV.headLoadValue !== \"\" ? purchaseV.headLoadValue : 0\n        let vaccineValue = purchaseV.vaccineValue && purchaseV.vaccineValue !== \"\" ? purchaseV.vaccineValue : 0\n        let fodderValue = purchaseV.fodderValue && purchaseV.fodderValue !== \"\" ? purchaseV.fodderValue : 0\n        let testEquipMentValue = purchaseV.testEquipMentValue && purchaseV.testEquipMentValue !== \"\" ? purchaseV.testEquipMentValue : 0\n        let sourMilkValue = purchaseV.sourMilkValue && purchaseV.sourMilkValue !== \"\" ? purchaseV.sourMilkValue : 0\n        let cowLoanValue = purchaseV.cowLoanValue && purchaseV.cowLoanValue !== \"\" ? purchaseV.cowLoanValue : 0\n        let shareValue = purchaseV.shareValue && purchaseV.shareValue !== \"\" ? purchaseV.shareValue : 0\n        let arrearValue = purchaseV.arrearValue && purchaseV.arrearValue !== \"\" ? purchaseV.arrearValue : 0\n        let addAdvanceValue = purchaseV.addAdvanceValue && purchaseV.addAdvanceValue !== \"\" ? purchaseV.addAdvanceValue : 0\n        let deductAdvanceValue = purchaseV.deductAdvanceValue && purchaseV.deductAdvanceValue !== \"\" ? purchaseV.deductAdvanceValue : 0\n        let deductOthersValue = purchaseV.deductOthersValue && purchaseV.deductOthersValue !== \"\" ? purchaseV.deductOthersValue : 0\n        let adjustmentValue = purchaseV.adjustmentValue && purchaseV.adjustmentValue !== \"\" ? purchaseV.adjustmentValue : 0\n        let addOthersValue = purchaseV.addOthersValue && purchaseV.addOthersValue !== \"\" ? purchaseV.addOthersValue : 0\n        let totalAddition = parseFloat(commissionValue) + parseFloat(lateArrivalValue) + parseFloat(splIncentiveValue) + parseFloat(headLoadValue) + parseFloat(testEquipMentValue) + parseFloat(sourMilkValue) + parseFloat(arrearValue) + parseFloat(addAdvanceValue) + parseFloat(adjustmentValue) + parseFloat(addOthersValue)\n        let totalDeduction = parseFloat(mtevalue) + parseFloat(cattleFeedValue) + parseFloat(vaccineValue) + parseFloat(fodderValue) + parseFloat(cowLoanValue) + parseFloat(shareValue) + parseFloat(deductAdvanceValue) + parseFloat(deductOthersValue)\n        setField('totalAdditions', totalAddition)\n        setField('totalDeductions', totalDeduction)\n        val.totalAdditions = totalAddition\n        val.totalDeductions = totalDeduction\n        nowSetTotalValue(val, setField)\n    }\n\n    const additionOnChange = (val, index, setField) => {\n        nowSetTotalValue(val, setField)\n    }\n\n    const nowSetTotalValue = (val, setField) => {\n        let milkPrice = val.totalMilkprice ? (val.totalMilkprice !== \"\" ? val.totalMilkprice : 0) : 0\n        let totalAdditions = val.totalAdditions ? (val.totalAdditions !== \"\" ? val.totalAdditions : 0 ) : 0\n        let totalDeductions = val.totalDeductions ? (val.totalDeductions !== \"\" ? val.totalDeductions : 0) : 0\n        let netAmount = ((parseFloat(milkPrice) + parseFloat(totalAdditions)) - parseFloat(totalDeductions))\n        setField('netAmount', netAmount)\n        let autoAdj = parseFloat(netAmount).toFixed(0)\n        let getAdj = parseFloat(netAmount) - parseFloat(autoAdj)\n        let billTotal = 0\n        let adjustment = 0\n        if(parseFloat(getAdj) > 0){\n            billTotal = autoAdj\n            adjustment = parseFloat(netAmount) - parseFloat(billTotal)\n        }else{\n            billTotal = parseFloat(autoAdj)\n            adjustment = parseFloat(billTotal) - parseFloat(netAmount)\n        }\n        setField('billTotal', parseFloat(billTotal).toFixed(2))\n        setField('adjustment', parseFloat(adjustment).toFixed(2))\n        // console.log(\"values.....................\", val)\n        val.netAmount = parseFloat(netAmount).toFixed(2)\n        val.billTotal = parseFloat(billTotal).toFixed(2)\n        val.adjustment = parseFloat(adjustment).toFixed(2)\n    }\n\n    const computeCommission = (values, setField) => {\n        let commisionValue = 0\n        if(commisionMisc){\n            let commissionVal = commisionMisc.value\n            setCommissionValGet(parseFloat(commissionVal).toFixed(2))\n            if(commisionMisc.operationOn === \"QTY(KG)\"){\n                let qty = values.totalQty === \"\" ? 0 : values.totalQty\n                commisionValue = parseFloat(qty) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue+\" Kg\")\n            }else if(commisionMisc.operationOn === \"Milk Price\"){\n                let milkP = values.totalMilkprice === \"\" ? 0 : values.totalMilkprice\n                commisionValue = parseFloat(milkP) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue)\n            }else if(commisionMisc.operationOn === \"FAT/SNF(KG)\"){\n                let kgFatSNF = parseFloat(values.totalKgfat) + parseFloat(values.totalKgsnf)\n                commisionValue = parseFloat(kgFatSNF) * parseFloat(commissionVal)\n                setCommissionOn(commisionValue+\" Kg\")\n            } \n        }\n        setField('commissionValue', commisionValue)\n        values.commissionValue = commisionValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeHeadLoad = (values, setField) => {\n        // console.log(\"values...................\", values)\n        let qty = values.totalQty === \"\" ? 0 : values.totalQty\n        let headLoadValue = parseFloat(qty) * parseFloat(values.headLoadCalVal !== null && values.headLoadCalVal !== \"\" ? values.headLoadCalVal : 0)\n        setField('headLoadValue', headLoadValue)\n        values.headLoadValue = headLoadValue\n        setHeadLoadOn((values.headLoadCalVal !== null && values.headLoadCalVal !== \"\" ? values.headLoadCalVal : 0)+\" Rs. on Quantity: \"+qty+\" Kg\")\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeSourMilk = (values, setField) => {\n        let sourMilkValue = 0\n        if(sourMilkMisc){\n            let sourMilkVal = sourMilkMisc.value\n            setSourValGet(sourMilkVal)\n            let qty = values.totalSour === \"\" ? 0 : values.totalSour\n            // console.log(\"qty=======================\", qty)\n            sourMilkValue = parseFloat(qty) * parseFloat(sourMilkVal)\n            setSourOn(qty)\n        }\n        setField('sourMilkValue', sourMilkValue)\n        values.sourMilkValue = sourMilkValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='txnContainer'>\n                <Formik id=\"purchaseForm\" size=\"large\" width={5}\n                    initialValues={purchase}\n                    onSubmit={(values, { resetForm }) => savePurchase(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Bill No </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <label className=\"boldText\">{billNo}</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            <label className=\"boldText\">Date </label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Period </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodFromDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><center><label className=\"boldText\">to</label></center></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodToDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}></Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '10%'}}><label className=\"boldText\">Supplier </label></Table.Cell>\n                                        <Table.Cell style={{width: '21%'}}>\n                                            <PartySelect name=\"partyM\" isLabel={false} label=\" \" isSelection={true} setState={setPartyId} userProps={{setField: setFieldValue, setName: 'partyM'}} type=''/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            {partyId !== 0 ? \n                                            <PartyDisplayView partyId={partyId}/>\n                                            :\n                                            <Button type='button' icon size='small' color='vk' title='Add Bank' style={{visibility: 'hidden'}}><Icon name='eye'/></Button>\n                                            }\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Rejected</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalRejected\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Sour</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalSour\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectAdd} index={''}  setField={setFieldValue} values={values} setNextDate={setNextDate} nextDate={nextDate ? nextDate : values.periodFromDate}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectEdit} index={'y'} voucherObj={values} setField={setFieldValue} values={values}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                        <Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='google plus' style={{ float: 'right' }} onClick={() => setItemObjectDelete(values, setFieldValue)}>Delete</Button>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '100%', padding: '0px'}}>\n                                            <div className='outScrollX' style={{width: '100%', height: '150px'}}>\n                                                <div className='outScrollY' style={{width: '100%', height: '150px'}}>                                                    \n                                                    <Form.Group>\n                                                        {getVdArr()}\n                                                    </Form.Group>\n                                                </div>\n                                            </div>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgfat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgsnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalFatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalSnfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">QTY(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalQty\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Milk Price</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalMilkprice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}} className='rightBorder'>\n                                            <center><label className=\"boldText\">Addition</label></center>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}>\n                                            <center><label className=\"boldText\">Deduction</label></center>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Commision\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"commissionValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeCommission(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='commissionNarration' setField={setFieldValue} setValueFor={(values.commissionNarration === null || values.commissionNarration === undefined || values.commissionNarration === \"\") ? (commisionMisc ? commissionValGet +\" \"+ commisionMisc.description+\" \"+commissionOn : '') : values.commissionNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Late Arrival\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"lateArrivalValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='lateArrivalNarration' setField={setFieldValue} setValueFor={values.lateArrivalNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            M.T.E\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"mtevalue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='mtenarration' setField={setFieldValue} setValueFor={values.mtenarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cattle Feed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cattleFeedValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cattleFeedNarration' setField={setFieldValue} setValueFor={values.cattleFeedNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            S.Incentive\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"splIncentiveValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='splIncentiveNarration' setField={setFieldValue} setValueFor={values.splIncentiveNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Head Load\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"headLoadValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddHeadLoad name='headLoadCalVal' setField={setFieldValue} setValueFor={values.headLoadCalVal} afterWork={computeHeadLoad} sendValue={values}/>\n                                            &nbsp;\n                                            <AddNotesCommon name='headLoadNarration' setField={setFieldValue} setValueFor={(values.headLoadNarration === null || values.headLoadNarration === undefined || values.headLoadNarration === \"\") ? headLoadOn : values.headLoadNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Vaccine\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"vaccineValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='vaccineNarration' setField={setFieldValue} setValueFor={values.vaccineNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Fodder Seed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"fodderValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='fodderNarration' setField={setFieldValue} setValueFor={values.fodderNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Testing Eqp\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"testEquipMentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='testEquipMentNarration' setField={setFieldValue} setValueFor={values.testEquipMentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Sour Milk\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"sourMilkValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeSourMilk(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='sourMilkNarration' setField={setFieldValue} setValueFor={values.sourMilkNarration === \"\" ? (sourMilkMisc ? sourValGet+\" \"+sourMilkMisc.description+\" \"+sourOn : values.totalSour) : values.sourMilkNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cow Loan\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cowLoanValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cowLoanNarration' setField={setFieldValue} setValueFor={values.cowLoanNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Share\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"shareValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='shareNarration' setField={setFieldValue} setValueFor={values.shareNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Arrear\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"arrearValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='arrearNarration' setField={setFieldValue} setValueFor={values.arrearNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addAdvanceNarration' setField={setFieldValue} setValueFor={values.addAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductAdvanceNarration' setField={setFieldValue} setValueFor={values.deductAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductOthersNarration' setField={setFieldValue} setValueFor={values.deductOthersNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Adjustment\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"adjustmentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='adjustmentNarration' setField={setFieldValue} setValueFor={values.adjustmentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addOthersNarration' setField={setFieldValue} setValueFor={values.addOthersNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>                            \n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Rate/Kg\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgRateKg\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Good\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Additions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAdditions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Net Amount\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"netAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Avg(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgKg\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Bad\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Deductions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalDeductions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Adjustments\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"adjustment\" label=' ' component={FormikAmountComponent} compute={additionOnChange} isReadonly={true}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Notes\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '69%'}}>\n                                            <Field name=\"notes\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 1}} focus={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Bill Total</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"billTotal\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <div className=\"stickeyDiv\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{float: 'right'}}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/purchase/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            {savedPurchaseId && savedPurchaseId !== 0 ? \n                            <Notification id={savedPurchaseId} notifySelector={getNotification} notifyDoneAction={setNotifyDonePurchase} type='save'/>\n                            :\n                            null}\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PurchaseForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport PurchaseList from \"./components/purchaseList\"\nimport PurchaseForm from \"./components/purchaseForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Purchase = () => {\n    return (\n        <Container>\n            <Route path=\"/purchase/list\" component={withRouter(PurchaseList)} />\n            <Route path=\"/purchase/edit/:id\" component={PurchaseForm} />\n            <Route path=\"/purchase/create\" component={PurchaseForm} />\n        </Container>\n    )\n};\n\nexport default Purchase;\n\n","export const POST_REGISTER_SUMMARY = 'POST_REGISTER_SUMMARY'\nexport const POST_REGISTER_ALLPARTY = 'POST_REGISTER_ALLPARTY'\nexport const POST_REGISTER_SINGLEPARTY = 'POST_REGISTER_SINGLEPARTY'\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikMultiSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst MultiPartySelect = ({ name, isTxn, isLabel, label, isSelection, setState }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikMultiSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MultiPartySelect;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../data/model'\nimport { postSummaryDetails, postAllPartyDetails, postSinglePartyDetails } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikDateComponent, FormikCheckBoxComponent } from '../../../utilities/formUtils'\nimport MultiPartySelect from '../../party/components/multiPartySelect'\nimport moment from 'moment'\n\n\nconst RegisterForm = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n\n    const postRegister = (values, resetForm) => {\n        if(values.fromDate !== \"\" && values.toDate !== \"\"){\n            let fromDt = moment(values.fromDate),\n                toDt = moment(values.toDate);\n            if(toDt >= fromDt){\n                if(values.type === \"Summary\"){\n                    let summaryData = values.fromDate+\"/\"+values.toDate\n                    dispatch(postSummaryDetails(summaryData))\n                    resetForm()\n                }else if(values.type === \"Detailed\"){\n                    if(values.partytype === \"All Suppliers\"){\n                        let allPartyData = values.fromDate+\"/\"+values.toDate\n                        dispatch(postAllPartyDetails(allPartyData))\n                        resetForm()\n                    }else if(values.partytype === \"Selected Supplier\"){\n                        values.partyid = values.partyid.toString()\n                        let singlePartyData = values.partyid+\"/\"+values.fromDate+\"/\"+values.toDate\n                        dispatch(postSinglePartyDetails(singlePartyData))\n                        resetForm()\n                    }\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }        \n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Milk Purchase Register</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"registerForm\" size=\"large\" width={5}\n                    initialValues={register()}\n                    onSubmit={(values, { resetForm }) => postRegister(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    {console.log(values)}\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">From Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"fromDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">To Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"toDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Summary'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Detailed'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    {values.type === \"Detailed\" ? \n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'All Suppliers'}} defaultCheck={true} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'Selected Supplier'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                    {values.partytype === \"Selected Supplier\" ? \n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}>\n                                            <label className=\"boldText\">Party Name: </label>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='3' style={{width: '80%'}}>\n                                            <MultiPartySelect name=\"partyid\" isLabel={false} label=\" \" isSelection={true} type=''/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                </Table.Body>\n                            </Table>\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                Print\n                                <Icon name='print'/>\n                            </Button>\n                            <br/><br/><br/><br/>\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : '')}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default RegisterForm;","import * as type from './types'\n\nexport function postSummaryDetails(register) {\n    return {\n        type: type.POST_REGISTER_SUMMARY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postAllPartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postSinglePartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n","\nexport const register =  () => ({\n    \"fromDate\": \"\",\n    \"toDate\": \"\",\n    \"type\": \"\",\n    \"partytype\": \"\",\n    \"partyid\": \"\"\n})\n\n","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport RegisterForm from \"./components/register\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Register = () => {\n    return (\n        <Container>\n            <Route path=\"/register/list\" component={withRouter(RegisterForm)} />\n        </Container>\n    )\n};\n\nexport default Register;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const combination =  () => ({\n    \"setStandard\": \"\",\n    \"setRate\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const combinationSchema = Yup.object().shape({\n    setStandard: Yup.string()\n        .required('This is a Required Field'),\n\n    setRate: Yup.string()\n        .required('This is a Required Field'),\n});\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { combinationSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Form as FormikForm } from 'formik'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editCombination, setNotifyDoneCombination } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst CombinationForm = (props) => {\r\n    \r\n    const combination = useSelector(state => select.getCombination(state, '1'))\r\n    const savedCombinationId = useSelector(state => select.getSavedCombinationId(state, props))\r\n    const dispatch = useDispatch()\r\n    const saveCombination = (values, resetForm) => {\r\n        dispatch(editCombination(values))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Combination</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={combination}\r\n                    validationSchema={combinationSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveCombination(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Standard Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Milk Rate Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedCombinationId && savedCombinationId !== 0 ? \r\n                            <Notification id={savedCombinationId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneCombination} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CombinationForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport CombinationForm from \"./components/combinationForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Combination = () => {\n    return (\n        <Container>\n            <Route path=\"/combination/update\" component={withRouter(CombinationForm)} />\n        </Container>\n    )\n};\n\nexport default Combination;\n\n","import React from 'react';\nimport {Route} from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter} from 'connected-react-router'\nimport { history } from '../../configureStore'\nimport { menu } from './menu'\n\nimport Party from '../party/index'\nimport Bank from '../bank/index'\nimport Group from '../group/index'\nimport MilkRates from '../milkRates/index'\nimport Standard from '../standard/index'\nimport Misc from '../misc/index'\nimport FinYear from '../finyear/index'\nimport Purchase from '../purchase/index'\nimport Register from '../register/index'\nimport Combination from '../combination/index'\n\nimport 'semantic-ui-less/semantic.less'\nimport { Container, Dropdown, Menu, Header, Icon } from 'semantic-ui-react'\n\nconst App = ({ stores }) => (\n  <Provider store = {stores}>\n    <ConnectedRouter history={history} >\n      <Container className=\"paddingTopOnly widhtSection\">\n        <Menu attached='top'>\n          <Menu.Item as={Link} to=\"/\"><Icon name='home'/></Menu.Item>\n          <Dropdown item icon='list' simple>\n            <Dropdown.Menu>\n              { menu.map((m, index) => {\n                return(\n                    <Dropdown.Item>\n                      <Icon name='dropdown' />\n                      <span className='text'>{m.title}</span>\n                      <Dropdown.Menu>\n                        { m.submenu.map((s, sindex) => {\n                          return(\n                          <Dropdown.Item text={s.title} key={sindex} as={Link} to={s.list}/>\n                          )\n                        })}\n                      </Dropdown.Menu>\n                    </Dropdown.Item>\n                  )\n              })}\n            </Dropdown.Menu>    \n          </Dropdown>\n          <Menu.Menu position='right'>\n            <Container className='headerMenuRight'>\n              <Header as='h4' className=\"VerticalAlign topTen\" align='right'>Mayurakshi Co-operative Milk Producers' Union Ltd</Header>\n            </Container>\n            <Menu.Item as={Link} to=\"/\" onClick={() => window.location = \"http://localhost:8080/dairyfarm/logout\"}><Icon className=\"logoutRed\" name='power off'/></Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Route path=\"/party\" component={Party} />\n        <Route path=\"/bank\" component={Bank} />\n        <Route path=\"/group\" component={Group} />\n        <Route path=\"/milkRates\" component={MilkRates} />\n        <Route path=\"/standard\" component={Standard} />\n        <Route path=\"/misc\" component={Misc} />\n        <Route path=\"/finyear\" component={FinYear} />\n        <Route path=\"/purchase\" component={Purchase} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/combination\" component={Combination} />\n      </Container>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './modules/app/App';\nimport configureStore from './configureStore';\n\n\nimport './index.css';\n\n// Creating Store\nconst stores = configureStore()\nconst renderApp = () => ReactDOM.render(<App stores={stores}/>, document.getElementById('root'))\nrenderApp()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}