{"version":3,"sources":["serviceWorker.js","store/monitorReducers.js","store/logger.js","store/txnMiddleware.js","store/localStorage.js","utilities/parseDate.js","modules/party/data/model.js","modules/party/data/selectors.js","modules/party/data/types.js","modules/party/data/actions.js","modules/app/serverError.js","store/path.js","modules/party/data/sagas.js","modules/bank/data/model.js","modules/bank/data/selectors.js","modules/bank/data/types.js","modules/bank/data/actions.js","modules/bank/data/sagas.js","modules/group/data/model.js","modules/group/data/selectors.js","modules/group/data/types.js","modules/group/data/actions.js","modules/group/data/sagas.js","modules/finyear/data/types.js","modules/finyear/data/actions.js","modules/finyear/data/sagas.js","modules/standard/data/types.js","modules/standard/data/actions.js","modules/standard/data/sagas.js","modules/milkRates/data/types.js","modules/milkRates/data/actions.js","modules/milkRates/data/sagas.js","modules/purchase/data/types.js","modules/purchase/data/actions.js","modules/purchase/data/sagas.js","modules/misc/data/types.js","modules/misc/data/actions.js","modules/misc/data/sagas.js","modules/register/data/sagas.js","modules/combination/data/types.js","modules/combination/data/actions.js","modules/combination/data/sagas.js","store/sagas.js","modules/party/data/reducers.js","modules/bank/data/reducers.js","modules/group/data/reducers.js","modules/finyear/data/reducers.js","modules/standard/data/reducers.js","modules/milkRates/data/reducers.js","modules/purchase/data/reducers.js","modules/misc/data/reducers.js","modules/combination/data/reducers.js","reducers.js","configureStore.js","modules/app/menu.js","utilities/notificationUtils.js","modules/party/components/partyList.js","utilities/dateUtils.js","utilities/formUtils.js","modules/party/components/plantSelect.js","modules/group/components/groupSelect.js","modules/bank/components/bankSelect.js","modules/group/components/groupPopup.js","modules/bank/components/bankPopup.js","modules/party/components/partyForm.js","modules/party/index.js","modules/bank/components/bankList.js","modules/bank/components/bankForm.js","modules/bank/index.js","modules/group/components/groupList.js","modules/group/components/groupForm.js","modules/group/index.js","modules/milkRates/data/model.js","modules/milkRates/data/selectors.js","modules/milkRates/components/typeSelect.js","modules/milkRates/components/milkRatesForm.js","modules/milkRates/index.js","modules/standard/data/model.js","modules/standard/data/selectors.js","modules/standard/components/typeSelect.js","modules/standard/components/standardForm.js","modules/standard/index.js","modules/misc/data/model.js","modules/misc/data/selectors.js","modules/misc/components/miscNameType.js","modules/misc/components/miscOperationType.js","modules/misc/components/miscForm.js","modules/misc/index.js","modules/finyear/data/model.js","modules/finyear/data/selectors.js","modules/finyear/components/finYearForm.js","modules/finyear/index.js","modules/purchase/data/selectors.js","modules/purchase/data/model.js","modules/party/components/partySelect.js","modules/purchase/components/purchaseList.js","modules/party/components/partyDisplayView.js","modules/purchase/components/typeTxnSelect.js","modules/purchase/components/shiftSelect.js","modules/purchase/components/qualitySelect.js","modules/combination/data/selectors.js","modules/purchase/components/addQuickVdetails.js","modules/purchase/components/vdetailsNonEditable.js","modules/purchase/components/addNotePopUpCommon.js","modules/purchase/components/purchaseForm.js","modules/purchase/index.js","modules/register/data/types.js","modules/party/components/multiPartySelect.js","modules/register/components/register.js","modules/register/data/actions.js","modules/register/data/model.js","modules/register/index.js","modules/combination/data/model.js","modules/combination/components/typeSelect.js","modules/combination/components/combinationForm.js","modules/combination/index.js","modules/app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","loggerMiddleware","store","next","group","type","info","result","getState","groupEnd","txnMiddleware","prevState","nextState","hasOwnProperty","txnid","v4","payload","error","err","difference","JSON","stringify","txn","id","fromAction","txnStatus","dt","moment","toJSON","dispatch","txns","combineReducers","txnLog","arguments","length","undefined","Object","objectSpread","defineProperty","loadState","serializedState","localStorage","getItem","parse","saveState","setItem","parseDateFromFormats","formats","parseStrict","Yup","transform","value","originalValue","isType","isValid","toDate","partySchema","shape","partyName","required","getIsPartyFetched","props","party","params","partyFetched","getPartyList","prop","byId","getPartyObjById","getNotification","notifications","selectParty","createSelector","keys","map","key","parseInt","text","CREATE_PARTY","SAVED_PARTY","EDIT_PARTY","FETCH_PARTY","FETCHED_PARTY","FETCHED_PARTY_BY_ID","NOTIFICATION_DONE_PARTY","DELETE_PARTY","DELETED_PARTY","PRINT_PARTY","savedParty","data","msg","fetchParty","setNotifyDoneParty","parseError","url","config","headers","response","status","statusText","message","stack","handlError","URL","createParty","saveParty","editParty","saveEditedParty","fetchPartyById","saveFetchedPartyById","requestParty","deleteParty","saveDeleteParty","postPartyPrint","sendPartyPrint","partySaga","regenerator_default","a","wrap","_context","prev","takeEvery","stop","_marked","_ref","_context2","call","savePartyAPI","sent","put","sagaErrorMessage","_marked2","axios","post","crossDomain","then","catch","_context3","_marked3","_ref2","_context4","editPartyAPI","_marked4","_context5","_marked5","_ref3","_context6","fetchPartyByIdAPI","_marked6","get","_context7","_marked7","_ref4","_context8","select","requestPartyAPI","_marked8","_context9","_marked9","_ref5","_context10","deletePartyAPI","_marked10","_context11","_marked11","_context12","sendPartyPrintAPI","_marked12","open","partyEnd","_context13","all","_marked13","bankSchema","bankName","getIsBankFetched","bank","bankFetched","getBankList","getBankById","selectBank","CREATE_BANK","SAVED_BANK","EDIT_BANK","FETCH_BANK","FETCHED_BANK","FETCHED_BANK_BY_ID","NOTIFICATION_DONE_BANK","DELETE_BANK","DELETED_BANK","createBank","savedBank","fetchBank","setNotifyDoneBank","saveBank","editBank","saveEditedBank","fetchBankById","saveFetchedBankById","requestBank","deleteBank","saveDeleteBank","bankSaga","sagas_marked","saveBankAPI","sagas_marked2","sagas_marked3","editBankAPI","sagas_marked4","sagas_marked5","fetchBankByIdAPI","sagas_marked6","sagas_marked7","requestBankAPI","sagas_marked8","sagas_marked9","deleteBankAPI","sagas_marked10","sagas_marked11","groupSchema","groupName","getIsGroupFetched","groupFetched","getGroupList","getGroupById","selectGroup","CREATE_GROUP","SAVED_GROUP","EDIT_GROUP","FETCH_GROUP","FETCHED_GROUP","FETCHED_GROUP_BY_ID","NOTIFICATION_DONE_GROUP","DELETE_GROUP","DELETED_GROUP","createGroup","savedGroup","fetchGroup","setNotifyDoneGroup","saveGroup","editGroup","saveEditedGroup","fetchGroupById","saveFetchedGroupById","requestGroup","deleteGroup","saveDeleteGroup","groupSaga","data_sagas_marked","saveGroupAPI","data_sagas_marked2","data_sagas_marked3","editGroupAPI","data_sagas_marked4","data_sagas_marked5","fetchGroupByIdAPI","data_sagas_marked6","_id","data_sagas_marked7","requestGroupAPI","data_sagas_marked8","data_sagas_marked9","deleteGroupAPI","data_sagas_marked10","data_sagas_marked11","CREATE_FINYEAR","SAVED_FINYEAR","FETCH_FINYEAR","FETCHED_FINYEAR","FETCHED_FINYEAR_BY_ID","NOTIFICATION_DONE_FINYEAR","savedFinYear","finYear","setNotifyDoneFinYear","createFinYear","saveFinYear","editFinYear","saveEditedFinYear","fetchFinYearById","saveFetchedFinYearById","fetchFinYear","requestFinYear","finYearSaga","finyear_data_sagas_marked","saveFinYearAPI","finyear_data_sagas_marked2","finyear_data_sagas_marked3","editFinYearAPI","finyear_data_sagas_marked4","finyear_data_sagas_marked5","fetchFinYearByIdAPI","finyear_data_sagas_marked6","finyear_data_sagas_marked7","requestFinYearAPI","finyear_data_sagas_marked8","finyear_data_sagas_marked9","SAVED_STANDARD","EDIT_STANDARD","FETCH_STANDARD","FETCHED_STANDARD","FETCHED_STANDARD_BY_ID","NOTIFICATION_DONE_STANDARD","savedStandard","standard","setNotifyDoneStandard","createStandard","saveStandard","editStandard","saveEditedStandard","fetchStandardById","saveFetchedStandardById","fetchStandard","requestStandard","standardSaga","standard_data_sagas_marked","saveStandardAPI","standard_data_sagas_marked2","standard_data_sagas_marked3","editStandardAPI","standard_data_sagas_marked4","standard_data_sagas_marked5","fetchStandardByIdAPI","standard_data_sagas_marked6","standard_data_sagas_marked7","requestStandardAPI","standard_data_sagas_marked8","standard_data_sagas_marked9","SAVED_MILKRATES","EDIT_MILKRATES","FETCH_MILKRATES","FETCHED_MILKRATES","FETCHED_MILKRATES_BY_ID","NOTIFICATION_DONE_MILKRATES","savedMilkRates","milkRates","setNotifyDoneMilkRates","createMilkRates","saveMilkRates","editMilkRates","saveEditedMilkRates","fetchMilkRatesById","saveFetchedMilkRatesById","fetchMilkRates","requestMilkRates","milkRatesSaga","milkRates_data_sagas_marked","saveMilkRatesAPI","milkRates_data_sagas_marked2","milkRates_data_sagas_marked3","editMilkRatesAPI","milkRates_data_sagas_marked4","milkRates_data_sagas_marked5","fetchMilkRatesByIdAPI","milkRates_data_sagas_marked6","milkRates_data_sagas_marked7","requestMilkRatesAPI","milkRates_data_sagas_marked8","milkRates_data_sagas_marked9","CREATE_PURCHASE","SAVED_PURCHASE","EDIT_PURCHASE","FETCH_PURCHASE","FETCHED_PURCHASE","FETCHED_PURCHASE_BY_ID","NOTIFICATION_DONE_PURCHASE","DELETE_PURCHASE","DELETED_PURCHASE","PRINT_PURCHASE","savedPurchase","purchase","setNotifyDonePurchase","createPurchase","savePurchase","editPurchase","saveEditedPurchase","fetchPurchaseById","saveFetchedPurchaseById","fetchPurchase","requestPurchase","deletePurchase","saveDeletePurchase","postPurchasePrint","sendPurchasePrint","purchaseSaga","purchase_data_sagas_marked","savePurchaseAPI","purchase_data_sagas_marked2","purchase_data_sagas_marked3","editPurchaseAPI","purchase_data_sagas_marked4","purchase_data_sagas_marked5","fetchPurchaseByIdAPI","purchase_data_sagas_marked6","purchase_data_sagas_marked7","requestPurchaseAPI","purchase_data_sagas_marked8","purchase_data_sagas_marked9","deletePurchaseAPI","purchase_data_sagas_marked10","purchase_data_sagas_marked11","sendPurchasePrintAPI","sagas_marked12","sagas_marked13","SAVED_MISC","EDIT_MISC","FETCH_MISC","FETCHED_MISC","NOTIFICATION_DONE_MISC","setNotifyDoneMisc","editMisc","saveEditedMisc","fetchMisc","requestMisc","miscSaga","misc_data_sagas_marked","editMiscAPI","misc","misc_data_sagas_marked2","misc_data_sagas_marked3","requestMiscAPI","misc_data_sagas_marked4","misc_data_sagas_marked5","postSummaryRegister","sendSummaryRegister","postAllPartyRegister","sendAllPartyRegister","postSinglePartyRegister","sendSinglePartyRegister","registerSaga","register_data_sagas_marked","sendSummaryRegisterAPI","register_data_sagas_marked2","register_data_sagas_marked3","sendAllPartyRegisterAPI","register_data_sagas_marked4","register_data_sagas_marked5","sendSinglePartyRegisterAPI","register_data_sagas_marked6","register_data_sagas_marked7","SAVED_COMBINATION","EDIT_COMBINATION","FETCH_COMBINATION","FETCHED_COMBINATION","FETCHED_COMBINATION_BY_ID","NOTIFICATION_DONE_COMBINATION","savedCombination","combination","setNotifyDoneCombination","createCombination","saveCombination","editCombination","saveEditedCombination","fetchCombinationById","saveFetchedCombinationById","fetchCombination","requestCombination","combinationSaga","combination_data_sagas_marked","saveCombinationAPI","combination_data_sagas_marked2","combination_data_sagas_marked3","editCombinationAPI","combination_data_sagas_marked4","combination_data_sagas_marked5","fetchCombinationByIdAPI","combination_data_sagas_marked6","combination_data_sagas_marked7","requestCombinationAPI","combination_data_sagas_marked8","combination_data_sagas_marked9","rootSaga","store_sagas_marked","schema","Entity","idAttribute","partyListSchema","defaultPartyParams","createTitle","createSubmitButtonText","editTitle","editSubmitButtonText","savedPartyId","partyID","normalizedParty","normalize","merge","entities","partys","finalState","byListId","searchParams","delete","save","_action$payload","idValue","restOfState","objectWithoutProperties","_toPropertyKey","restOfId","bankListSchema","defaultBankParams","savedBankId","reducers_toPropertyKey","bankID","normalizedBank","banks","groupListSchema","defaultGroupParams","savedGroupId","groupID","normalizedGroup","groups","data_reducers_toPropertyKey","finYearSchema","finYearListSchema","defaultFinYearParams","finYearFetched","savedFinYearId","finYearID","normalizedFinYear","finYears","finyear_data_reducers_toPropertyKey","standardSchema","standardListSchema","defaultStandardParams","savedStandardId","standardID","normalizedStandard","standards","standard_data_reducers_toPropertyKey","milkRatesSchema","milkRatesListSchema","defaultMilkRatesParams","savedMilkRatesId","milkRatesID","normalizedMilkRates","milkRates_data_reducers_toPropertyKey","purchaseSchema","purchaseListSchema","defaultPurchaseParams","purchaseFetched","savedPurchaseId","purchaseID","normalizedPurchase","purchases","purchase_data_reducers_toPropertyKey","miscListSchema","defaultMiscParams","savedMiscId","miscID","name","normalizedMisc","miscs","misc_data_reducers_toPropertyKey","combinationSchema","combinationListSchema","defaultCombinationParams","savedCombinationId","combinationID","normalizedCombination","combination_data_reducers_toPropertyKey","rootReducer","history","router","connectRouter","sagaMiddleware","createSagaMiddleware","createBrowserHistory","basename","menu","icon","title","submenu","list","label","Notification","notifySelector","notifyDoneAction","notifyObj","useSelector","useDispatch","useEffect","getNotObj","edit","toast","position","autoClose","hideProgressBar","react_default","createElement","react_toastify","transition","Slide","Party","isNegative","_useState","useState","_useState2","slicedToArray","deletePartyId","setDeletePartyId","_useState3","_useState4","modalOption","setModalOption","groupMaster","bankMaster","deletePartyFromList","values","Table","Row","negative","Cell","index","phone","partyBankAccNo","textAlign","style","width","balance","parseFloat","Fragment","Link","to","cursor","color","onClick","notificationUtils","Modal","size","onClose","Header","Content","Actions","Button","positive","labelPosition","content","PartyList","printPartyDetails","Container","Grid","columns","className","Column","as","align","floated","push","Icon","selectable","basic","TableHeader","HeaderCell","TableBody","partyList_Party","colSpan","checkValidDateFormats","str","split_str","replace","split","DD","MM","YY","isDD","isNaN","isMM","isYY","currDate","format","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","getCurrentDate","isValidDay1","checkDay","isValidMonth1","checkMonth","yyStrLen","prefixStr","reqDate","setYear","isValidDay2","isValidMonth2","vfDt","yy","nextYY","calDate","nextDate","diff1","diff2","dateDiff","getYear","nextMM","prevMM","prevYY","prevDate","getMonthYear","validDateRange","yr","isleap","getDateInYYYYMMDD","date","date_split","date1","date2","dt1","dt2","ceil","getTime","FormikInputComponent","validateInput","isLabel","isTxn","placeholder","focus","disabled","isReadonly","field","_ref$form","form","touched","errors","handleChange","submitCount","Form","Field","validate","debounce","startCase","toLower","Input","onChange","autoFocus","readOnly","formik_esm","render","Label","pointing","prompt","FormikDateComponent","setDateManually","_ref2$form","setFieldValue","dirty","setDt","rawEvent","react_datepicker_min_default","placeholderText","dateFormat","scrollableYearDropdown","selected","e","target","onChangeRaw","autoComplete","FormikAmountComponent","decimal","saveOnBlur","compute","path","setValue","setStateValue","onChangeFunc","onchangeset","_ref3$form","handleSubmit","handleBlur","react_number_format_es","thousandSeparator","thousandsGroupStyle","decimalScale","onValueChange","val","setValueChange","floatValue","onBlur","FormikCheckBoxComponent","userProps","_ref4$form","Radio","checked","FormikSelectComponent","isSelection","_ref5$form","setField","Dropdown","search","selection","options","isLowerCaseEnable","_ref6","getValue","clearable","isDisable","FormikMultiSelectComponent","_ref7","_React$createElement","_ref7$form","fluid","multiple","allowAdditions","_ref8","FormikTextAreaComponent","_ref12","_ref12$form","HeaderClick","count","setCount","displayCount","height","isFloatLeft","float","maxLength","TextArea","resize","syntheticEvent","rows","getholder","PlantSelect","component","GroupSelect","opt","BankSelect","GroupPopup","setFieldVal","displayStatus","setDisplayStatus","trigger","initialValues","validationSchema","onSubmit","FormikForm","Body","Group","widths","BankPopup","resetForm","PartyForm","plantNo","address","nickName","bankM","groupM","plantName","obj","cloneDeep","bankId","groupId","getParty","getSavedPartyId","submitButtonText","getPartyParams","bankMst","groupMst","plantSelect","setName","bankSelect","bankPopup","groupSelect","groupPopup","Route","withRouter","Bank","deleteBankId","setDeleteBankId","deleteBankFromList","BankList","bankList_Bank","BankForm","getBank","getSavedBankId","getBankParams","deleteGroupId","setDeleteGroupId","deleteGroupFromList","GroupList","groupList_Group","GroupForm","getGroup","getSavedGroupId","getGroupParams","pageName","goodFat","goodSnf","badFat","badSnf","getMilkRatesList","TypeSelect","settings","MilkRatesForm","typeSelect","MilkRates","getStandardList","StandardForm","components_typeSelect","Standard","miscSchema","operationOn","getMiscListByName","MiscNameTypeSelect","trim","typeName","operation","description","MiscOperationType","MiscForm","updatedOn","createdOn","saveMisc","miscNameType","miscOperationType","Misc","fdt","tdt","selectFinYearList","sessionName","FinYearForm","year","addFinYear","onchangeDD","session","FinYear","getPurchaseList","periodFromDate","periodToDate","billDate","billNo","partyM","getPurchase","totalFatAmount","totalSnfAmount","totalQty","deductOthersType","adjustmentType","addAdvanceNarration","totalKgfat","shareType","commissionValue","sourMilkType","headLoadType","deductAdvanceNarration","testEquipMentValue","sourMilkNarration","commissionNarration","cattleFeedType","addOthersNarration","testEquipMentType","lateArrivalType","addOthersValue","vaccineType","mtevalue","totalRejected","splIncentiveNarration","fodderNarration","purchaseVoucherDetails","splIncentiveValue","billTotal","sourMilkValue","addAdvanceType","shareValue","arrearNarration","adjustment","headLoadNarration","deductOthersValue","arrearValue","shareNarration","cowLoanNarration","totalSour","fodderType","headLoadValue","deductAdvanceType","vaccineValue","totalMilkprice","mtenarration","cowLoanValue","addOthersType","vaccineNarration","deductAdvanceValue","totalAdditions","cattleFeedNarration","netAmount","totalDeductions","mtetype","addAdvanceValue","testEquipMentNarration","lateArrivalValue","lateArrivalNarration","commissionType","splIncentiveType","arrearType","fodderValue","cowLoanType","adjustmentValue","adjustmentNarration","cattleFeedValue","deductOthersNarration","totalKgsnf","totalAvgRateKg","totalGoodFat","totalGoodSnf","totalAvgKg","totalBadFat","totalBadSnf","PartySelect","purchaseName","setState","Purchase","deletePurchaseId","setDeletePurchaseId","partyMaster","deletePurchaseFromList","printPurchaseFromList","toFixed","PurchaseList","_useState5","isOpen","keyWord","_useState6","modalState","setModalState","fetchList","fromDt","toDt","linkCreate","padding","partySelect","purchaseList_Purchase","PartyDisplayView","partyObj","partyId","closeIcon","TypeTxnSelect","ShiftSelect","QualitySelect","AddQuickVdetails","setItemObject","setNextDate","voucherObj","vdetails","qty","netQty","setNetQty","_useState7","_useState8","isAuto","setIsAuto","_useState9","_useState10","isCLRhas","setIsCLRhas","_useState11","_useState12","popNextDate","setPopNextDate","getCombinationById","object","getIndex","sourQty","kgFat","snfRate","rejectedQty","clrP","snfP","fatRate","fatAmount","pvid","fatP","snfAmount","kgSnf","milkPrice","remarks","milkRate","setStandard","setRate","shift","fatQuality","snfQuality","getVdetailsObj","saveItems","flag","rejectQty","new_date","add","day","month","onChangeQty","onChangeCLR","closeOnEscape","closeOnDimmerClick","getAuto","shiftGet","getOpenPopup","typeTxnSelect","Checkbox","ischeck","setAutoTiming","shiftSelect","margin","qualitySelect","getStandard","getMilkRate","standardObj","milkRateObj","qtyGet","fat","clr","snf","fatType","snfType","fatAmt","snfAmt","totalRs","calculateRate","VdetailsNonEditable","move","swap","insert","unshift","remove","pop","arrKeys","fieldName","isActive","setIsActive","concat","active","set","onclickRow","AddNotesCommon","setValueFor","addNote","addNotes","PurchaseForm","getSavedPurchaseId","getPurchaseParams","commisionMisc","headLoadMisc","sourMilkMisc","setPartyId","setItemObjectAdd","callSetAllData","setItemObjectEdit","totalRejectedQty","totalSourQty","totalKgFat","totalKgSnf","totalFatAmt","totalSnfAmt","ratePerKg","pDetails","i","nowSetTotalValue","totalAdditionAndDeduction","purchaseV","totalAddition","totalDeduction","additionOnChange","partyDisplayView","visibility","addQuickVdetails","removeObject","fixed","commisionValue","commissionVal","milkP","kgFatSNF","computeCommission","addNotePopUpCommon","headLoadVal","computeHeadLoad","sourMilkVal","computeSourMilk","POST_REGISTER_SUMMARY","POST_REGISTER_ALLPARTY","MultiPartySelect","RegisterForm","postRegister","fromDate","summaryData","partytype","allPartyData","register","postAllPartyDetails","partyid","toString","singlePartyData","postSinglePartyDetails","defaultCheck","multiPartySelect","Register","CombinationForm","combination_components_typeSelect","Combination","App","stores","es","esm","Menu","attached","Item","item","simple","m","s","sindex","preloadedState","configureStore","middleware","routerMiddleware","toConsumableArray","getDefaultMiddleware","enhancers","monitorReducersEnhancer","run","subscribe","throttle","ReactDOM","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.936ef041.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve dairy farm; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const loggerMiddleware = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default loggerMiddleware","import diff from 'deep-diff';\nimport v4 from 'uuid';\nimport { combineReducers } from 'redux'\nimport moment  from 'moment'\n\nexport const txnMiddleware = store => next => action => {\n\n  const prevState = store.getState();\n  const result = next(action)\n  const nextState = store.getState();\n\n  if (action.hasOwnProperty('diff') || action.hasOwnProperty('txn')){\n\n        let txnid = v4()        \n        if (action.hasOwnProperty('txn'))\n            txnid = action.payload.txnid\n\n        let error = '';\n        if (action.hasOwnProperty('err'))\n            error = action.err\n\n        let difference = '';\n        if (action.hasOwnProperty('diff'))\n            difference = JSON.stringify(diff(prevState, nextState));\n\n        const txn = { \n                id: txnid,\n                type: action.type !== 'SERVER_ERROR' ? action.type : action.fromAction,\n                payload : action.payload,\n                txnStatus: action.txn,\n                err : error,\n                diff: difference,\n                dt: moment().toJSON() \n            }\n\n        store.dispatch ( {type:'STORE_TXN', payload: txn } )\n    }\n  return result\n}\n  \nfunction txnLog (state = {}, action) {\n    if (action.type === 'STORE_TXN') { \n        const txnid = action.payload.id;   \n        return { ...state, \n            [txnid]: action.payload }        \n    } else {\n        return state\n    }\n}\n\nexport const txns = combineReducers({\n    txnLog\n});\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('taskState')\n      if (serializedState === null){\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  };\n  \n  export const saveState = (state) => {\n    try{\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('taskState',serializedState)\n    } catch (err) {\n      // ignore write error\n    }\n  }","import moment from 'moment'\nimport * as Yup from 'yup';\n\nexport function parseDateFromFormats (formats, parseStrict) {\n  return Yup.date().transform(function(value, originalValue) {\n    if (Yup.date().isType(value)) return value;\n\n    value = moment(originalValue, formats, parseStrict);\n    return value.isValid() ? value.toDate() : moment();\n  });\n}\n\n// export function parseNumberFromFormats (formats, parseStrict) {\n//   return Yup.number().transform(function(value, originalValue) {\n//     if (Yup.number().isType(value)) return value;\n\n//     value = moment(originalValue, formats, parseStrict);\n//     return value.isValid() ? value : Nan;\n//   });\n// }\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const party =  () => ( {\n  \"plantNo\": \"\",\n  \"address\": \"\",\n  \"nickName\": \"\",\n  \"bankMaster\": \"\",\n  \"bankM\": \"\",\n  \"balance\": \"\",\n  \"phone\": \"\",\n  \"partyName\": \"\",\n  \"groupMaster\": \"\",\n  \"groupM\": \"\",\n  \"partyBankAccNo\": \"\",\n  \"plantName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const partySchema = Yup.object().shape({\n      \n    partyName: Yup.string()\n                .required('This is a Required Field')    \n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { party } from './model'\n\nexport const getIsFetchingParty = (state, props) => state.party.params.isFetching\nexport const getIsPartyFetched = (state, props) => state.party.params.partyFetched\nexport const getSavedPartyId = (state, props) => state.party.params.savedPartyId\nexport const getPartyList = (state, prop) => state.party.byId\nexport const getPartyObjById = (state, id) => state.party.byId[id]\nexport const getNotification = (state, id) => state.party.notifications[id]\n\nexport const getParty = (state, props) => {\n    if (props.match.path === '/party/create') {\n        return party()\n    }\n    if (props.match.path === '/party/edit/:id') {\n        let id = props.match.params.id\n        let obj = cloneDeep(state.party.byId[id])\n        console.log(obj)\n        let bankId = obj.bankMaster ? obj.bankMaster.id : 0\n        obj.bankM = bankId\n        let groupId = obj.groupMaster ? obj.groupMaster.id : 0\n        obj.groupM = groupId\n        return obj\n    }\n}\n\nexport const getPartyParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/party/create') {\n        params.title = state.party.params.createTitle\n        params.submitButtonText = state.party.params.createSubmitButtonText\n    } else if (props.match.path === '/party/edit/:id') {\n        params.title = state.party.params.editTitle\n        params.submitButtonText = state.party.params.editSubmitButtonText\n    }\n    return params\n}\n\n\nexport const selectParty = createSelector(\n    getPartyList,\n    party => {\n        const keys = Object.keys(party)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: party[key].partyName } })\n        return obj\n    }\n)","export const CREATE_PARTY = 'CREATE_PARTY'\nexport const SAVED_PARTY = 'SAVED_PARTY'\nexport const EDIT_PARTY = 'EDIT_PARTY'\nexport const EDITED_PARTY = 'EDITED_PARTY'\nexport const FETCH_PARTY = 'FETCH_PARTY'\nexport const FETCHED_PARTY = 'FETCHED_PARTY'\nexport const FETCH_PARTY_BY_ID = 'FETCH_PARTY_BY_ID'\nexport const FETCHED_PARTY_BY_ID = 'FETCHED_PARTY_BY_ID'\nexport const NOTIFICATION_DONE_PARTY = 'NOTIFICATION_DONE_PARTY'\nexport const DELETE_PARTY = 'DELETE_PARTY'\nexport const DELETED_PARTY = 'DELETED_PARTY'\nexport const PRINT_PARTY = 'PRINT_PARTY'\n","import * as type from './types'\n\nexport function createParty(party) {\n    return {\n        type: type.CREATE_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function savedParty(party) {\n    return {\n        type: type.SAVED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function editParty(party) {\n    return {\n        type: type.EDIT_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function fetchParty() {\n    return {\n        type: type.FETCH_PARTY\n    };\n}\n\nexport function fetchedParty(party) {\n    return {\n        type: type.FETCHED_PARTY,\n        payload: party\n    };\n}\n\n\nexport function fetchPartyById(party) {\n    return {\n        type: type.FETCH_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function fetchedPartyById(party) {\n    return {\n        type: type.FETCHED_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function setNotifyDoneParty(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PARTY,\n        payload: props\n    };\n}\n\n\nexport function deleteParty(party) {\n    return {\n        type: type.DELETE_PARTY,\n        payload: party\n    };\n}\n\nexport function deletedParty(party) {\n    return {\n        type: type.DELETED_PARTY,\n        payload: party\n    };\n}\n\nexport function partyPrint(){\n    return {\n        type: type.PRINT_PARTY\n    };\n}","\nexport const parseError = (err) => {\n    return  {\n        url : err.config.url,\n        headers : err.config.headers,\n        data : err.response.data,\n        status : err.status,\n        statusText : err.statusText,\n        message : err.message,\n        stack : err.stack\n    };\n}\n\nexport const handlError = (action, err) => {\n    return ({\n        type : 'SERVER_ERROR',\n        payload : action.payload,\n        fromAction : action.type,\n        txn : 'err',\n        err : err\n    })\n}\n\n","export default URL = 'http://localhost:8080/dairyfarm'","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsPartyFetched } from './selectors'\nimport { savedParty, fetchedParty, fetchedPartyById, deletedParty } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Party \n\nfunction* createParty() {\n    yield takeEvery('CREATE_PARTY',saveParty)\n  }\n\nfunction* saveParty(action){\n  const { response, error } = yield call(savePartyAPI, action.payload)\n  if (response) yield put (savedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction savePartyAPI(data) {\n    return axios.post(URL+'/partymaster/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Party \n\nfunction* editParty() {\n  yield takeEvery('EDIT_PARTY',saveEditedParty)\n}\n\nfunction* saveEditedParty(action){\n  const { response, error } = yield call(editPartyAPI, action.payload)  \n  if (response) yield put (savedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editPartyAPI(data) {\n  return axios.post(URL+'/partymaster/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Party by ID\n\nfunction* fetchPartyById() {\n  yield takeEvery('FETCH_PARTY_BY_ID',saveFetchedPartyById)\n}\n\nfunction* saveFetchedPartyById(action){\n  const { response, error } = yield call(fetchPartyByIdAPI, action.payload)  \n  if (response) yield put (fetchedPartyById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchPartyByIdAPI(data) {\n  let id = data\n  return axios.get(URL+'/partymaster/fetch/'+ id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchParty() {\n\n  yield takeEvery('FETCH_PARTY',requestParty)\n\n}\n  \nfunction* requestParty(){\n  const isPartyFetched = yield select(getIsPartyFetched);\n  if(!isPartyFetched){\n    let { data } = yield call(requestPartyAPI)\n    yield put (fetchedParty(data.data))\n  }\n}\n\nfunction requestPartyAPI(data) {\n  return axios.get(URL+'/partymaster/fetch/all', {crossDomain: true})\n}\n\n//#endregion\n\n//#region Saga for Delete Party \n\nfunction* deleteParty() {\n  yield takeEvery('DELETE_PARTY',saveDeleteParty)\n}\n\nfunction* saveDeleteParty(action){\n  const { response, error } = yield call(deletePartyAPI, action.payload)\n  if (response) yield put (deletedParty({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction deletePartyAPI(data) {\n  return axios.post(URL+'/partymaster/delete', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Post Party Print\n\nfunction* postPartyPrint() {\n  yield takeEvery('PRINT_PARTY', sendPartyPrint)\n}\n\nfunction* sendPartyPrint() {\n  yield call(sendPartyPrintAPI)\n}\n\nfunction sendPartyPrintAPI() {\n  window.open(URL+'/partyprintlist', '_blank')\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.party(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.partyEnd()\n}\n\nexport default function* partySaga() {\n    yield all([\n        createParty(),\n        fetchParty(),\n        editParty(),\n        deleteParty(),\n        fetchPartyById(),\n        postPartyPrint()\n    ])\n  }  ","import * as Yup from 'yup'\n\nexport const bank =  () => ({\n    bankName: \"\"\n})\n\nexport const bankSchema = Yup.object().shape({\n\n    bankName: Yup.string()\n                .required('This is a Required Field')\n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { bank } from './model'\n\nexport const getIsFetchingBank = (state, props) => state.bank.params.isFetching;\nexport const getIsBankFetched = (state, props) => state.bank.params.bankFetched;\nexport const getSavedBankId = (state, props) => state.bank.params.savedBankId;\nexport const getBankList = (state, prop) => state.bank.byId\nexport const getBankById = (state, id) => state.bank.byId[id]\nexport const getNotification = (state, id) => state.bank.notifications[id]\n\nexport const getBank = (state, props) => {\n    if(props.match.path==='/bank/create'){\n        return bank()\n    }\n    if(props.match.path==='/bank/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.bank.byId[_id]);\n        return obj\n    }\n}\n\nexport const getBankParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/bank/create'){ \n        params.title = state.bank.params.createTitle\n        params.submitButtonText = state.bank.params.createSubmitButtonText        \n    }else if(props.match.path==='/bank/edit/:id'){ \n        params.title = state.bank.params.editTitle\n        params.submitButtonText = state.bank.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectBank = createSelector(\n    getBankList,\n    bank => { \n        const keys = Object.keys(bank)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : bank[key].bankName }})\n        return obj\n    }\n)","export const CREATE_BANK = 'CREATE_BANK'\nexport const SAVED_BANK = 'SAVED_BANK'\nexport const EDIT_BANK = 'EDIT_BANK'\nexport const EDITED_BANK = 'EDITED_BANK'\nexport const FETCH_BANK = 'FETCH_BANK'\nexport const FETCHED_BANK = 'FETCHED_BANK'\nexport const FETCH_BANK_BY_ID = 'FETCH_BANK_BY_ID'\nexport const FETCHED_BANK_BY_ID = 'FETCHED_BANK_BY_ID'\nexport const NOTIFICATION_DONE_BANK = 'NOTIFICATION_DONE_BANK'\nexport const DELETE_BANK = 'DELETE_BANK'\nexport const DELETED_BANK = 'DELETED_BANK'\n","import * as type from './types'\n\nexport function createBank(bank) {\n    console.log(\"----------------------call create bank\")\n    return {\n        type: type.CREATE_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function savedBank(bank) {\n    console.log(\"----------------------call saved bank\")\n    return {\n        type: type.SAVED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function editBank(bank) {\n    return {\n        type: type.EDIT_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function fetchBank() {\n    return {\n        type: type.FETCH_BANK\n    };\n}\n\nexport function fetchedBank(bank) {\n    return {\n        type: type.FETCHED_BANK,\n        payload: bank\n    };\n}\n\n\nexport function fetchBankById(bank) {\n    return {\n        type: type.FETCH_BANK_BY_ID,\n        payload: bank\n    };\n}\n\nexport function fetchedBankById(bank) {\n    return {\n        type: type.FETCHED_BANK_BY_ID,\n        payload: bank\n    };\n}\n\n\nexport function setNotifyDoneBank(props) {\n    return {\n        type: type.NOTIFICATION_DONE_BANK,\n        payload: props\n    };\n}\n\n\nexport function deleteBank(bank) {\n    return {\n        type: type.DELETE_BANK,\n        payload: bank\n    };\n}\n\nexport function deletedBank(bank) {\n    return {\n        type: type.DELETED_BANK,\n        payload: bank\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsBankFetched } from './selectors'\nimport { savedBank, fetchedBank, fetchedBankById, deletedBank } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Bank \n\nfunction* createBank() {\n  yield takeEvery('CREATE_BANK', saveBank)\n}\n\nfunction* saveBank(action) {\n  const { response, error } = yield call(saveBankAPI, action.payload)\n  console.log(\"----------------------call create bank Saga\")\n  if (response) yield put(savedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveBankAPI(data) {\n  console.log(\"----------------------call create bank link  Saga\")\n  return axios.post(URL + '/bankmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Bank \n\nfunction* editBank() {\n  yield takeEvery('EDIT_BANK', saveEditedBank)\n}\n\nfunction* saveEditedBank(action) {\n  const { response, error } = yield call(editBankAPI, action.payload)\n  console.log(response)\n  if (response) yield put(savedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editBankAPI(data) {\n  return axios.post(URL + '/bankmaster/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Bank by ID\n\nfunction* fetchBankById() {\n  yield takeEvery('FETCH_BANK_BY_ID', saveFetchedBankById)\n}\n\nfunction* saveFetchedBankById(action) {\n  const { response, error } = yield call(fetchBankByIdAPI, action.payload)\n  if (response) yield put(fetchedBankById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchBankByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/bankmaster/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchBank() {\n\n  yield takeEvery('FETCH_BANK', requestBank)\n\n}\n\nfunction* requestBank() {\n  const isBankFetched = yield select(getIsBankFetched);\n  if (!isBankFetched) {\n    let { data } = yield call(requestBankAPI)\n    yield put(fetchedBank(data.data))\n  }\n\n}\n\nfunction requestBankAPI() {\n  return axios.get(URL + '/bankmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Bank \n\nfunction* deleteBank() {\n  yield takeEvery('DELETE_BANK', saveDeleteBank)\n}\n\nfunction* saveDeleteBank(action) {\n  const { response, error } = yield call(deleteBankAPI, action.payload)\n  if (response) yield put(deletedBank({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteBankAPI(data) {\n  return axios.post(URL + '/bankmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* bankSaga() {\n  yield all([\n    createBank(),\n    fetchBank(),\n    editBank(),\n    fetchBankById(),\n    deleteBank()\n  ])\n}  ","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const group =  () => ({\n  \"groupName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const groupSchema = Yup.object().shape({\n\n  groupName: Yup.string()\n            .required('This is a Required Field')\n\n});\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { group } from './model'\n\nexport const getIsFetchingGroup = (state, props) => state.group.params.isFetching\nexport const getIsGroupFetched = (state, props) => state.group.params.groupFetched\nexport const getSavedGroupId = (state, props) => state.group.params.savedGroupId\nexport const getGroupList = (state, prop) => state.group.byId\nexport const getGroupById = (state, id) => state.group.byId[id]\nexport const getNotification = (state, id) => state.group.notifications[id]\n\nexport const getGroup = (state, props) => {\n    if (props.match.path === '/group/create') {\n        return group()\n    }\n    if (props.match.path === '/group/edit/:id') {\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.group.byId[_id]);\n        return obj\n    }\n}\nexport const getGroupParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/group/create') {\n        params.title = state.group.params.createTitle\n        params.submitButtonText = state.group.params.createSubmitButtonText\n    } else if (props.match.path === '/group/edit/:id') {\n        params.title = state.group.params.editTitle\n        params.submitButtonText = state.group.params.editSubmitButtonText\n    }\n    return params\n}\n\nexport const selectGroup = createSelector(\n    getGroupList,\n    group => {\n        const keys = Object.keys(group)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: group[key].groupName } })\n        return obj\n    }\n)","export const CREATE_GROUP = 'CREATE_GROUP'\nexport const SAVED_GROUP = 'SAVED_GROUP'\nexport const EDIT_GROUP = 'EDIT_GROUP'\nexport const EDITED_GROUP = 'EDITED_GROUP'\nexport const FETCH_GROUP = 'FETCH_GROUP'\nexport const FETCHED_GROUP = 'FETCHED_GROUP'\nexport const FETCH_GROUP_BY_ID = 'FETCH_GROUP_BY_ID'\nexport const FETCHED_GROUP_BY_ID = 'FETCHED_GROUP_BY_ID'\nexport const NOTIFICATION_DONE_GROUP = 'NOTIFICATION_DONE_GROUP'\nexport const DELETE_GROUP = 'DELETE_GROUP'\nexport const DELETED_GROUP = 'DELETED_GROUP'\n\n","import * as type from './types'\n\nexport function createGroup(group) {\n    return {\n        type: type.CREATE_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function savedGroup(group) {\n    return {\n        type: type.SAVED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function editGroup(group) {\n    return {\n        type: type.EDIT_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function fetchGroup() {\n    return {\n        type: type.FETCH_GROUP\n    };\n}\n\nexport function fetchedGroup(group) {\n    return {\n        type: type.FETCHED_GROUP,\n        payload: group\n    };\n}\n\n\nexport function fetchGroupById(group) {\n    return {\n        type: type.FETCH_GROUP_BY_ID,\n        payload: group\n    };\n}\n\nexport function fetchedGroupById(group) {\n    return {\n        type: type.FETCHED_GROUP_BY_ID,\n        payload: group\n    };\n}\n\n\nexport function setNotifyDoneGroup(props) {\n    return {\n        type: type.NOTIFICATION_DONE_GROUP,\n        payload: props\n    };\n}\n\nexport function deleteGroup(group) {\n    return {\n        type: type.DELETE_GROUP,\n        payload: group\n    };\n}\n\nexport function deletedGroup(group) {\n    return {\n        type: type.DELETED_GROUP,\n        payload: group\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsGroupFetched } from './selectors'\nimport { savedGroup, fetchedGroup, fetchedGroupById, deletedGroup } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Group \n\nfunction* createGroup() {\n  yield takeEvery('CREATE_GROUP', saveGroup)\n}\n\nfunction* saveGroup(action) {\n  const { response, error } = yield call(saveGroupAPI, action.payload)\n  if (response) yield put(savedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Group \n\nfunction* editGroup() {\n  yield takeEvery('EDIT_GROUP', saveEditedGroup)\n}\n\nfunction* saveEditedGroup(action) {\n  const { response, error } = yield call(editGroupAPI, action.payload)\n  if (response) yield put(savedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/update/', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Group by ID\n\nfunction* fetchGroupById() {\n  yield takeEvery('FETCH_GROUP_BY_ID', saveFetchedGroupById)\n}\n\nfunction* saveFetchedGroupById(action) {\n  const { response, error } = yield call(fetchGroupByIdAPI, action.payload)\n  if (response) yield put(fetchedGroupById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchGroupByIdAPI(data) {\n  let _id = data\n  return axios.get(URL + '/groupmaster/fetch/' + _id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchGroup() {\n\n  yield takeEvery('FETCH_GROUP', requestGroup)\n\n}\n\nfunction* requestGroup() {\n  const isGroupFetched = yield select(getIsGroupFetched);\n  if (!isGroupFetched) {\n    let { data } = yield call(requestGroupAPI)\n    yield put(fetchedGroup(data.data))\n  }\n}\n\nfunction requestGroupAPI() {\n  return axios.get(URL + '/groupmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Group \n\nfunction* deleteGroup() {\n  yield takeEvery('DELETE_GROUP', saveDeleteGroup)\n}\n\nfunction* saveDeleteGroup(action) {\n  const { response, error } = yield call(deleteGroupAPI, action.payload)\n  if (response) yield put(deletedGroup({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* groupSaga() {\n  yield all([\n    createGroup(),\n    fetchGroup(),\n    editGroup(),\n    deleteGroup(),\n    fetchGroupById()\n  ])\n}  ","export const CREATE_FINYEAR = 'CREATE_FINYEAR'\nexport const SAVED_FINYEAR = 'SAVED_FINYEAR'\nexport const EDIT_FINYEAR = 'EDIT_FINYEAR'\nexport const EDITED_FINYEAR = 'EDITED_FINYEAR'\nexport const FETCH_FINYEAR = 'FETCH_FINYEAR'\nexport const FETCHED_FINYEAR = 'FETCHED_FINYEAR'\nexport const FETCH_FINYEAR_BY_ID = 'FETCH_FINYEAR_BY_ID'\nexport const FETCHED_FINYEAR_BY_ID = 'FETCHED_FINYEAR_BY_ID'\nexport const NOTIFICATION_DONE_FINYEAR = 'NOTIFICATION_DONE_FINYEAR'\n","import * as type from './types'\n\nexport function createFinYear(finYear) {\n    return {\n        type : type.CREATE_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function savedFinYear(finYear) {\n    return {\n        type : type.SAVED_FINYEAR,\n        payload : finYear.data.data,        \n        txn: finYear.data.type,\n        msg: finYear.data.msg,\n        diff : true\n    };\n}\n\nexport function editFinYear(finYear) {\n    return {\n        type : type.EDIT_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchFinYear(finYear) {\n    return {\n        type : type.FETCH_FINYEAR,\n        payload: finYear\n    };\n}\n\nexport function fetchedFinYear(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR,\n        payload : finYear\n    };\n}\n\n\nexport function fetchFinYearById(finYear) {\n    return {\n        type : type.FETCH_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function fetchedFinYearById(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function setNotifyDoneFinYear(props) {\n    return {\n        type : type.NOTIFICATION_DONE_FINYEAR,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedFinYear, fetchedFinYear, fetchedFinYearById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create FinYear \n\nfunction* createFinYear() {\n    yield takeEvery('CREATE_FINYEAR',saveFinYear)\n  }\n\nfunction* saveFinYear(action){\n  const { response, error } = yield call(saveFinYearAPI, action.payload)\n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveFinYearAPI(data) {\n    return axios.post(URL+'/sessionperiod/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited FinYear \n\nfunction* editFinYear() {\n  yield takeEvery('EDIT_FINYEAR',saveEditedFinYear)\n}\n\nfunction* saveEditedFinYear(action){\n  const { response, error } = yield call(editFinYearAPI, action.payload)  \n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editFinYearAPI(data) {\n  return axios.post(URL+'/sessionperiod/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting FinYear by ID\n\nfunction* fetchFinYearById() {\n  yield takeEvery('FETCH_FINYEAR_BY_ID',saveFetchedFinYearById)\n}\n\nfunction* saveFetchedFinYearById(action){\n  const { response, error } = yield call(fetchFinYearByIdAPI, action.payload)  \n  if (response) yield put (fetchedFinYearById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchFinYearByIdAPI(data) {\n  let id = data\n  return axios.post(URL+'sessionperiod/fetch/'+id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchFinYear() {\n\n  yield takeEvery('FETCH_FINYEAR',requestFinYear)\n\n}\n  \nfunction* requestFinYear(action){\n\n  let { data } = yield call(requestFinYearAPI, action.payload)\n  yield put (fetchedFinYear(data.data))\n\n}\n\nfunction requestFinYearAPI(data) {\n  return axios.get(URL+'/sessionperiod/fetch/all', data,  {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* finYearSaga() {\n    yield all([\n        createFinYear(),\n        fetchFinYear(),\n        editFinYear(),\n        fetchFinYearById()\n    ])\n  }  ","export const CREATE_STANDARD = 'CREATE_STANDARD'\nexport const SAVED_STANDARD = 'SAVED_STANDARD'\nexport const EDIT_STANDARD = 'EDIT_STANDARD'\nexport const EDITED_STANDARD = 'EDITED_STANDARD'\nexport const FETCH_STANDARD = 'FETCH_STANDARD'\nexport const FETCHED_STANDARD = 'FETCHED_STANDARD'\nexport const FETCH_STANDARD_BY_ID = 'FETCH_STANDARD_BY_ID'\nexport const FETCHED_STANDARD_BY_ID = 'FETCHED_STANDARD_BY_ID'\nexport const NOTIFICATION_DONE_STANDARD = 'NOTIFICATION_DONE_STANDARD'\n","import * as type from './types'\n\nexport function createStandard(standard) {\n    return {\n        type : type.CREATE_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function savedStandard(standard) {\n    return {\n        type : type.SAVED_STANDARD,\n        payload : standard.data.data,\n        txn: standard.data.type,\n        msg: standard.data.msg,\n        diff : true\n    };\n}\n\nexport function editStandard(standard) {\n    return {\n        type : type.EDIT_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchStandard(params) {\n    return {\n        type : type.FETCH_STANDARD,\n        payload : params\n    };\n}\n\nexport function fetchedStandard(standard) {\n    return {\n        type : type.FETCHED_STANDARD,\n        payload : standard\n    };\n}\n\n\nexport function fetchStandardById(standard) {\n    return {\n        type : type.FETCH_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function fetchedStandardById(standard) {\n    return {\n        type : type.FETCHED_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function setNotifyDoneStandard(props) {\n    return {\n        type : type.NOTIFICATION_DONE_STANDARD,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedStandard, fetchedStandard, fetchedStandardById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Standard \n\nfunction* createStandard() {\n    yield takeEvery('CREATE_STANDARD',saveStandard)\n  }\n\nfunction* saveStandard(action){\n  const { response, error } = yield call(saveStandardAPI, action.payload)\n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveStandardAPI(data) {\n    return axios.post(URL+'/standard/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Standard \n\nfunction* editStandard() {\n  yield takeEvery('EDIT_STANDARD',saveEditedStandard)\n}\n\nfunction* saveEditedStandard(action){\n  const { response, error } = yield call(editStandardAPI, action.payload)  \n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editStandardAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Standard by ID\n\nfunction* fetchStandardById() {\n  yield takeEvery('FETCH_STANDARD_BY_ID',saveFetchedStandardById)\n}\n\nfunction* saveFetchedStandardById(action){\n  const { response, error } = yield call(fetchStandardByIdAPI, action.payload)  \n  if (response) yield put (fetchedStandardById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchStandardByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/standard/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchStandard() {\n\n  yield takeEvery('FETCH_STANDARD',requestStandard)\n\n}\n  \nfunction* requestStandard(action){\n\n  let { data } = yield call(requestStandardAPI, action.payload)\n  yield put (fetchedStandard(data.data))\n\n}\n\nfunction requestStandardAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* standardSaga() {\n    yield all([\n        createStandard(),\n        fetchStandard(),\n        editStandard(),\n        fetchStandardById()\n    ])\n  }  ","export const CREATE_MILKRATES = 'CREATE_MILKRATES'\nexport const SAVED_MILKRATES = 'SAVED_MILKRATES'\nexport const EDIT_MILKRATES = 'EDIT_MILKRATES'\nexport const EDITED_MILKRATES = 'EDITED_MILKRATES'\nexport const FETCH_MILKRATES = 'FETCH_MILKRATES'\nexport const FETCHED_MILKRATES = 'FETCHED_MILKRATES'\nexport const FETCH_MILKRATES_BY_ID = 'FETCH_MILKRATES_BY_ID'\nexport const FETCHED_MILKRATES_BY_ID = 'FETCHED_MILKRATES_BY_ID'\nexport const NOTIFICATION_DONE_MILKRATES = 'NOTIFICATION_DONE_MILKRATES'\n","import * as type from './types'\n\nexport function createMilkRates(milkRates) {\n    return {\n        type : type.CREATE_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function savedMilkRates(milkRates) {\n    return {\n        type : type.SAVED_MILKRATES,\n        payload : milkRates.data.data,\n        txn: milkRates.data.type,\n        msg: milkRates.data.msg,\n        diff : true\n    };\n}\n\nexport function editMilkRates(milkRates) {\n    return {\n        type : type.EDIT_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMilkRates(params) {\n    return {\n        type : type.FETCH_MILKRATES,\n        payload : params\n    };\n}\n\nexport function fetchedMilkRates(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES,\n        payload : milkRates\n    };\n}\n\n\nexport function fetchMilkRatesById(milkRates) {\n    return {\n        type : type.FETCH_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function fetchedMilkRatesById(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function setNotifyDoneMilkRates(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MILKRATES,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMilkRates, fetchedMilkRates, fetchedMilkRatesById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create MilkRates \n\nfunction* createMilkRates() {\n    yield takeEvery('CREATE_MILKRATES',saveMilkRates)\n  }\n\nfunction* saveMilkRates(action){\n  const { response, error } = yield call(saveMilkRatesAPI, action.payload)\n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveMilkRatesAPI(data) {\n    return axios.post(URL+'/milkRates/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited MilkRates \n\nfunction* editMilkRates() {\n  yield takeEvery('EDIT_MILKRATES',saveEditedMilkRates)\n}\n\nfunction* saveEditedMilkRates(action){\n  const { response, error } = yield call(editMilkRatesAPI, action.payload)  \n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMilkRatesAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting MilkRates by ID\n\nfunction* fetchMilkRatesById() {\n  yield takeEvery('FETCH_MILKRATES_BY_ID',saveFetchedMilkRatesById)\n}\n\nfunction* saveFetchedMilkRatesById(action){\n  const { response, error } = yield call(fetchMilkRatesByIdAPI, action.payload)  \n  if (response) yield put (fetchedMilkRatesById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchMilkRatesByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/milkRates/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMilkRates() {\n\n  yield takeEvery('FETCH_MILKRATES',requestMilkRates)\n\n}\n  \nfunction* requestMilkRates(action){\n\n  let { data } = yield call(requestMilkRatesAPI, action.payload)\n  yield put (fetchedMilkRates(data.data))\n\n}\n\nfunction requestMilkRatesAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* milkRatesSaga() {\n    yield all([\n        createMilkRates(),\n        fetchMilkRates(),\n        editMilkRates(),\n        fetchMilkRatesById()\n    ])\n  }  ","export const CREATE_PURCHASE = 'CREATE_PURCHASE'\nexport const SAVED_PURCHASE = 'SAVED_PURCHASE'\nexport const EDIT_PURCHASE = 'EDIT_PURCHASE'\nexport const EDITED_PURCHASE = 'EDITED_PURCHASE'\nexport const FETCH_PURCHASE = 'FETCH_PURCHASE'\nexport const FETCHED_PURCHASE = 'FETCHED_PURCHASE'\nexport const FETCH_PURCHASE_BY_ID = 'FETCH_PURCHASE_BY_ID'\nexport const FETCHED_PURCHASE_BY_ID = 'FETCHED_PURCHASE_BY_ID'\nexport const NOTIFICATION_DONE_PURCHASE = 'NOTIFICATION_DONE_PURCHASE'\nexport const DELETE_PURCHASE = 'DELETE_PURCHASE'\nexport const DELETED_PURCHASE = 'DELETED_PURCHASE'\nexport const PRINT_PURCHASE = 'PRINT_PURCHASE'\n","import * as type from './types'\n\nexport function createPurchase(purchase) {\n    return {\n        type: type.CREATE_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function savedPurchase(purchase) {\n    console.log(\"call saved purchase\")\n    return {\n        type: type.SAVED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        diff: true\n    };\n}\n\nexport function editPurchase(purchase) {\n    return {\n        type: type.EDIT_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function fetchPurchase(link) {\n    return {\n        type: type.FETCH_PURCHASE,\n        payload: link\n    };\n}\n\nexport function fetchedPurchase(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE,\n        payload: purchase\n    };\n}\n\n\nexport function fetchPurchaseById(purchase) {\n    return {\n        type: type.FETCH_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\nexport function fetchedPurchaseById(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\n\nexport function setNotifyDonePurchase(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PURCHASE,\n        payload: props\n    };\n}\n\n\nexport function deletePurchase(purchase) {\n    return {\n        type: type.DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedPurchase(purchase) {\n    return {\n        type: type.DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function postPrintPurchase(id) {\n    return {\n        type: type.PRINT_PURCHASE,\n        payload: id\n    };\n}\n","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedPurchase, fetchedPurchase, fetchedPurchaseById, deletedPurchase } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Purchase \n\nfunction* createPurchase() {\n  yield takeEvery('CREATE_PURCHASE', savePurchase)\n}\n\nfunction* savePurchase(action) {\n  const { response, error } = yield call(savePurchaseAPI, action.payload)\n  if (response) yield put(savedPurchase({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction savePurchaseAPI(data) {\n  console.log(\"--------call saving time----------\")\n  return axios.post(URL + '/purchasetxn/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Purchase \n\nfunction* editPurchase() {\n  yield takeEvery('EDIT_PURCHASE', saveEditedPurchase)\n}\n\nfunction* saveEditedPurchase(action) {\n  const { response, error } = yield call(editPurchaseAPI, action.payload)\n  console.log(response)\n  if (response) yield put(savedPurchase({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Purchase by ID\n\nfunction* fetchPurchaseById() {\n  yield takeEvery('FETCH_PURCHASE_BY_ID', saveFetchedPurchaseById)\n}\n\nfunction* saveFetchedPurchaseById(action) {\n  const { response, error } = yield call(fetchPurchaseByIdAPI, action.payload)\n  if (response) yield put(fetchedPurchaseById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchPurchaseByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/purchasetxn/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchPurchase() {\n\n  yield takeEvery('FETCH_PURCHASE', requestPurchase)\n\n}\n\nfunction* requestPurchase(action) {\n  let { data } = yield call(requestPurchaseAPI, action.payload)\n  yield put(fetchedPurchase(data.data))\n}\n\nfunction requestPurchaseAPI(data) {\n  return axios.get(URL + '/purchasetxn/fetch/'+data, { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Purchase \n\nfunction* deletePurchase() {\n  yield takeEvery('DELETE_PURCHASE', saveDeletePurchase)\n}\n\nfunction* saveDeletePurchase(action) {\n  const { response, error } = yield call(deletePurchaseAPI, action.payload)\n  if (response) yield put(deletedPurchase({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deletePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Post Purchase Print\n\nfunction* postPurchasePrint() {\n  yield takeEvery('PRINT_PURCHASE', sendPurchasePrint)\n}\n\nfunction* sendPurchasePrint(action) {\n  yield call(sendPurchasePrintAPI, action.payload)\n}\n\nfunction sendPurchasePrintAPI(data) {\n  window.open(URL+'/invoice/print/'+data, '_blank')\n}\n\n//#endregion\n\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* purchaseSaga() {\n  yield all([\n    createPurchase(),\n    fetchPurchase(),\n    editPurchase(),\n    fetchPurchaseById(),\n    deletePurchase(),\n    postPurchasePrint()\n  ])\n}  ","export const SAVED_MISC = 'SAVED_MISC'\nexport const EDIT_MISC = 'EDIT_MISC'\nexport const FETCH_MISC = 'FETCH_MISC'\nexport const FETCHED_MISC = 'FETCHED_MISC'\nexport const NOTIFICATION_DONE_MISC = 'NOTIFICATION_DONE_MISC'\n","import * as type from './types'\n\nexport function savedMisc(misc) {\n    return {\n        type : type.SAVED_MISC,\n        payload : misc.data.data,\n        txn: misc.data.type,\n        msg: misc.data.msg,\n        diff : true\n    };\n}\n\nexport function editMisc(misc) {\n    return {\n        type : type.EDIT_MISC,\n        payload : misc,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMisc(params) {\n    return {\n        type : type.FETCH_MISC,\n        payload : params\n    };\n}\n\nexport function fetchedMisc(misc) {\n    return {\n        type : type.FETCHED_MISC,\n        payload : misc\n    };\n}\n\n\nexport function setNotifyDoneMisc(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MISC,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMisc, fetchedMisc, fetchedMiscById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Edited Misc \n\nfunction* editMisc() {\n  yield takeEvery('EDIT_MISC',saveEditedMisc)\n}\n\nfunction* saveEditedMisc(action){\n  const { response, error } = yield call(editMiscAPI, action.payload)  \n  if (response) yield put (savedMisc({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMiscAPI(data) {\n  return axios.post(URL+'/miscsettings/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMisc() {\n\n  yield takeEvery('FETCH_MISC',requestMisc)\n\n}\n  \nfunction* requestMisc(action){\n\n  let { data } = yield call(requestMiscAPI, action.payload)\n  yield put (fetchedMisc(data.data))\n\n}\n\nfunction requestMiscAPI(data) {\n  return axios.get(URL+'/miscsettings/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* miscSaga() {\n    yield all([\n        fetchMisc(),\n        editMisc()\n    ])\n  }  ","import { call, takeEvery, all } from 'redux-saga/effects'\nimport URL from '../../../store/path'\n\n\n//#region Saga for Post Summary Register \n\nfunction* postSummaryRegister() {\n  yield takeEvery('POST_REGISTER_SUMMARY', sendSummaryRegister)\n}\n\nfunction* sendSummaryRegister(action) {\n  yield call(sendSummaryRegisterAPI, action.payload)\n}\n\nfunction sendSummaryRegisterAPI(data) {\n  window.open(URL+'/report/purchasesummary/'+ data, '_blank')\n}\n\n//#endregion\n\n\n//#region Saga for Post Summary Register \n\nfunction* postAllPartyRegister() {\n  yield takeEvery('POST_REGISTER_ALLPARTY', sendAllPartyRegister)\n}\n\nfunction* sendAllPartyRegister(action) {\n  yield call(sendAllPartyRegisterAPI, action.payload)\n}\n\nfunction sendAllPartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n//#region Saga for Post Summary Register \n\nfunction* postSinglePartyRegister() {\n  yield takeEvery('POST_REGISTER_SINGLEPARTY', sendSinglePartyRegister)\n}\n\nfunction* sendSinglePartyRegister(action) {\n  yield call(sendSinglePartyRegisterAPI, action.payload)\n}\n\nfunction sendSinglePartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n\nexport default function* registerSaga() {\n  yield all([\n    postSummaryRegister(),\n    postAllPartyRegister(),\n    postSinglePartyRegister()\n  ])\n}  ","export const CREATE_COMBINATION = 'CREATE_COMBINATION'\nexport const SAVED_COMBINATION = 'SAVED_COMBINATION'\nexport const EDIT_COMBINATION = 'EDIT_COMBINATION'\nexport const EDITED_COMBINATION = 'EDITED_COMBINATION'\nexport const FETCH_COMBINATION = 'FETCH_COMBINATION'\nexport const FETCHED_COMBINATION = 'FETCHED_COMBINATION'\nexport const FETCH_COMBINATION_BY_ID = 'FETCH_COMBINATION_BY_ID'\nexport const FETCHED_COMBINATION_BY_ID = 'FETCHED_COMBINATION_BY_ID'\nexport const NOTIFICATION_DONE_COMBINATION = 'NOTIFICATION_DONE_COMBINATION'\n","import * as type from './types'\n\nexport function createCombination(combination) {\n    return {\n        type : type.CREATE_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function savedCombination(combination) {\n    return {\n        type : type.SAVED_COMBINATION,\n        payload : combination.data.data,\n        txn: combination.data.type,\n        msg: combination.data.msg,\n        diff : true\n    };\n}\n\nexport function editCombination(combination) {\n    return {\n        type : type.EDIT_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchCombination(params) {\n    return {\n        type : type.FETCH_COMBINATION,\n        payload : params\n    };\n}\n\nexport function fetchedCombination(combination) {\n    return {\n        type : type.FETCHED_COMBINATION,\n        payload : combination\n    };\n}\n\n\nexport function fetchCombinationById(combination) {\n    return {\n        type : type.FETCH_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function fetchedCombinationById(combination) {\n    return {\n        type : type.FETCHED_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function setNotifyDoneCombination(props) {\n    return {\n        type : type.NOTIFICATION_DONE_COMBINATION,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedCombination, fetchedCombination, fetchedCombinationById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Combination \n\nfunction* createCombination() {\n    yield takeEvery('CREATE_COMBINATION',saveCombination)\n  }\n\nfunction* saveCombination(action){\n  const { response, error } = yield call(saveCombinationAPI, action.payload)\n  if (response) yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveCombinationAPI(data) {\n    return axios.post(URL+'/combination/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Combination \n\nfunction* editCombination() {\n  yield takeEvery('EDIT_COMBINATION',saveEditedCombination)\n}\n\nfunction* saveEditedCombination(action){\n  const { response, error } = yield call(editCombinationAPI, action.payload)  \n  if (response){ \n    console.log(\"response----------\", response)\n    yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))}\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editCombinationAPI(data) {\n  return axios.post(URL+'/setcombination/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Combination by ID\n\nfunction* fetchCombinationById() {\n  yield takeEvery('FETCH_COMBINATION_BY_ID',saveFetchedCombinationById)\n}\n\nfunction* saveFetchedCombinationById(action){\n  const { response, error } = yield call(fetchCombinationByIdAPI, action.payload)  \n  if (response) yield put (fetchedCombinationById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchCombinationByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/combination/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchCombination() {\n\n  yield takeEvery('FETCH_COMBINATION',requestCombination)\n\n}\n  \nfunction* requestCombination(action){\n\n  let { data } = yield call(requestCombinationAPI, action.payload)\n  yield put (fetchedCombination(data.data))\n\n}\n\nfunction requestCombinationAPI(data) {\n  return axios.get(URL+'/setcombination/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* combinationSaga() {\n    yield all([\n        createCombination(),\n        fetchCombination(),\n        editCombination(),\n        fetchCombinationById()\n    ])\n  }  ","import { all } from 'redux-saga/effects'\nimport partySaga from '../modules/party/data/sagas'\nimport bankSaga from '../modules/bank/data/sagas'\nimport groupSaga from '../modules/group/data/sagas'\nimport finYearSaga from '../modules/finyear/data/sagas'\nimport standardSaga from '../modules/standard/data/sagas'\nimport milkRatesSaga from '../modules/milkRates/data/sagas'\nimport purchaseSaga from '../modules/purchase/data/sagas'\nimport miscSaga from '../modules/misc/data/sagas'\nimport registerSaga from '../modules/register/data/sagas'\nimport combinationSaga from '../modules/combination/data/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      finYearSaga(),\n      partySaga(),\n      bankSaga(),\n      groupSaga(),\n      standardSaga(),\n      milkRatesSaga(),\n      purchaseSaga(),\n      miscSaga(),\n      registerSaga(),\n      combinationSaga()\n    ])\n  } ","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a partys schema\nconst partySchema = new schema.Entity('partys',{}, { idAttribute: 'id' });\nconst partyListSchema = [partySchema];\n\n\nconst defaultPartyParams = {\n  createTitle: 'Create Party',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Party',\n  editSubmitButtonText: 'Update',\n  partyFetched: false,\n  savedPartyId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n      const normalizedParty = normalize(action.payload, partySchema);\n      return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'FETCHED_PARTY') {  \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY') { \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }  \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PARTY'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPartyParams, action) {\n    if (action.type === 'FETCH_PARTY') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_PARTY') { \n        return {...state, \n          savedPartyId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_PARTY') { \n      return {...state, \n        savedPartyId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_PARTY') { \n      return {...state, \n        partyFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst party = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default party;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a banks schema\nconst bankSchema = new schema.Entity('banks',{}, { idAttribute: 'id' });\nconst bankListSchema = [bankSchema];\n\n\nconst defaultBankParams = {\n  createTitle: 'Create Bank',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Bank',\n  editSubmitButtonText: 'Update',\n  bankFetched: false,\n  savedBankId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      const normalizedBank = normalize(action.payload, bankListSchema);\n      return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n      const normalizedBank = normalize(action.payload, bankSchema);\n      return merge({},normalizedBank.entities.banks)\n    }\n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n        const normalizedBank = normalize(action.payload, bankListSchema);\n        return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    }else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultBankParams, action) {\n    if (action.type === 'FETCH_BANK') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      return {...state, \n        bankFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst bank = combineReducers({\n  notifications,  \n  byId,\n  byListId,\n  params\n});\n\n\nexport default bank;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a groups schema\nconst groupSchema = new schema.Entity('groups',{}, { idAttribute: 'id' });\nconst groupListSchema = [groupSchema];\n\n\nconst defaultGroupParams = {\n  createTitle: 'Create Group',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Group',\n  editSubmitButtonText: 'Update',\n  groupFetched: false,\n  savedGroupId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n      const normalizedGroup = normalize(action.payload, groupListSchema);\n      return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n      const normalizedGroup = normalize(action.payload, groupSchema);\n      return merge({},normalizedGroup.entities.groups)\n    }\n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n        const normalizedGroup = normalize(action.payload, groupListSchema);\n        return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_GROUP'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultGroupParams, action) {\n    if (action.type === 'FETCH_GROUP') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_GROUP') { \n        return {...state, \n          savedGroupId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_GROUP') { \n      return {...state, \n        savedGroupId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_GROUP') { \n      return {...state, \n        groupFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst group = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default group;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a finYears schema\nconst finYearSchema = new schema.Entity('finYears',{}, { idAttribute: 'id' });\nconst finYearListSchema = [finYearSchema];\n\n\nconst defaultFinYearParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  finYearFetched: false,\n  savedFinYearId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n      const normalizedFinYear = normalize(action.payload, finYearSchema);\n      return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_FINYEAR'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultFinYearParams, action) {\n    if (action.type === 'FETCH_FINYEAR') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_FINYEAR') { \n        return {...state, \n          savedFinYearId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_FINYEAR') { \n      return {...state, \n        savedFinYearId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_FINYEAR') { \n      return {...state, \n        finYearFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst finYear = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default finYear;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a standards schema\nconst standardSchema = new schema.Entity('standards',{}, { idAttribute: 'type' });\nconst standardListSchema = [standardSchema];\n\n\nconst defaultStandardParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedStandardId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_STANDARD') { \n      const normalizedStandard = normalize(action.payload, standardListSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n      const normalizedStandard = normalize(action.payload, standardSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_STANDARD') { \n        const normalizedStandard = normalize(action.payload, standardListSchema);\n        return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_STANDARD'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultStandardParams, action) {\n    if (action.type === 'FETCH_STANDARD') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_STANDARD') { \n        return {...state, \n          savedStandardId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_STANDARD') { \n      return {...state, \n        savedStandardId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst standard = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default standard;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a milkRates schema\nconst milkRatesSchema = new schema.Entity('milkRates',{}, { idAttribute: 'type' });\nconst milkRatesListSchema = [milkRatesSchema];\n\n\nconst defaultMilkRatesParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMilkRatesId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_MILKRATES') {\n    const milkRatesID = action.payload.type\n    return {...state, \n      [milkRatesID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_MILKRATES') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n      const normalizedMilkRates = normalize(action.payload, milkRatesSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') {\n      const milkRatesID = action.payload.type\n      return {...state, \n        [milkRatesID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MILKRATES') { \n        const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n        return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MILKRATES'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMilkRatesParams, action) {\n    if (action.type === 'FETCH_MILKRATES') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_MILKRATES') { \n        return {...state, \n          savedMilkRatesId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MILKRATES') { \n      return {...state, \n        savedMilkRatesId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst milkRates = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default milkRates;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a purchases schema\nconst purchaseSchema = new schema.Entity('purchases',{}, { idAttribute: 'id' });\nconst purchaseListSchema = [purchaseSchema];\n\n\nconst defaultPurchaseParams = {\n  createTitle: 'Create Milk Purchase',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Milk Purchase',\n  editSubmitButtonText: 'Update',\n  purchaseFetched: false,\n  savedPurchaseId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n      const normalizedPurchase = normalize(action.payload, purchaseSchema);\n      return merge({},normalizedPurchase.entities.purchases)\n    }\n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n        const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n        return merge({}, normalizedPurchase.entities.purchases)\n    } \n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PURCHASE') {\n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPurchaseParams, action) {\n    if (action.type === 'FETCH_PURCHASE') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst purchase = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default purchase;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a miscs schema\nconst miscSchema = new schema.Entity('miscs',{}, { idAttribute: 'name' });\nconst miscListSchema = [miscSchema];\n\n\nconst defaultMiscParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMiscId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_MISC') { \n      const normalizedMisc = normalize(action.payload, miscListSchema);\n      return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MISC') { \n        const normalizedMisc = normalize(action.payload, miscListSchema);\n        return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MISC') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MISC'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMiscParams, action) {\n    if (action.type === 'FETCH_MISC') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_MISC') { \n        return {...state, \n          savedMiscId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MISC') { \n      return {...state, \n        savedMiscId: action.payload.id\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst misc = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default misc;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a combination schema\nconst combinationSchema = new schema.Entity('combination',{}, { idAttribute: 'id' });\nconst combinationListSchema = [combinationSchema];\n\n\nconst defaultCombinationParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedCombinationId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_COMBINATION') {\n    const combinationID = action.payload.id\n    return {...state, \n      [combinationID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_COMBINATION') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedCombination = normalize(action.payload, combinationListSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n      const normalizedCombination = normalize(action.payload, combinationSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') {\n      const combinationID = action.payload.id\n      return {...state, \n        [combinationID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_COMBINATION') { \n        const normalizedCombination = normalize(action.payload, combinationListSchema);\n        return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_COMBINATION'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultCombinationParams, action) {\n    if (action.type === 'FETCH_COMBINATION') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_COMBINATION') { \n        return {...state, \n          savedCombinationId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_COMBINATION') { \n      return {...state, \n        savedCombinationId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst combination = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default combination;\n","import { txns } from './store/txnMiddleware'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport party from './modules/party/data/reducers'\nimport bank from './modules/bank/data/reducers'\nimport group from './modules/group/data/reducers'\nimport finYear from './modules/finyear/data/reducers'\nimport standard from './modules/standard/data/reducers'\nimport milkRates from './modules/milkRates/data/reducers'\nimport purchase from './modules/purchase/data/reducers'\nimport misc from './modules/misc/data/reducers'\nimport combination from './modules/combination/data/reducers';\n\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    txns,\n    finYear,\n    party,\n    bank,\n    group,\n    standard,\n    milkRates,\n    purchase,\n    misc,\n    combination\n})\n\nexport default rootReducer","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport createSagaMiddleware from 'redux-saga'\nimport { throttle } from 'lodash'\n\nimport monitorReducersEnhancer from './store/monitorReducers'\nimport loggerMiddleware from './store/logger'\nimport { txnMiddleware } from './store/txnMiddleware' //logActionDiff\nimport { loadState, saveState } from './store/localStorage';\nimport rootSaga from './store/sagas'\nimport rootReducer from './reducers'\n\nimport { fetchFinYear } from './modules/finyear/data/actions'\nimport { fetchBank } from './modules/bank/data/actions'\nimport { fetchGroup } from './modules/group/data/actions'\nimport { fetchParty } from './modules/party/data/actions'\nimport { fetchStandard } from './modules/standard/data/actions'\nimport { fetchMilkRates } from './modules/milkRates/data/actions'\nimport { fetchMisc } from './modules/misc/data/actions'\nimport { fetchCombination } from './modules/combination/data/actions'\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const history = createBrowserHistory({\n  basename: '/dairyfarm',\n});\n\nexport default function configureAppStore() {\n\n  const preloadedState = loadState();\n\n  const store = configureStore({\n    reducer: rootReducer(history),\n    middleware: [sagaMiddleware,txnMiddleware,loggerMiddleware,routerMiddleware(history), ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer(history)))\n  }  \n\n  sagaMiddleware.run(rootSaga)\n\n  store.subscribe(throttle(() => {\n    saveState({\n      // loginDetails : store.getState().loginDetails,\n      // messagesById: store.getState().messagesById,\n      // messagesPrimary : store.getState().messagesPrimary\n    });\n  }), 1000);\n  store.dispatch(fetchCombination())\n  store.dispatch(fetchFinYear())\n  store.dispatch(fetchBank())\n  store.dispatch(fetchGroup())\n  store.dispatch(fetchParty())\n  store.dispatch(fetchStandard(\"SetStandard\"))\n  store.dispatch(fetchMilkRates(\"SetPriceRate\"))\n  store.dispatch(fetchMisc())\n  console.log(\"call\")\n  return store\n}\n\n\n\n","export const menu = [\n  {\n    icon: '',\n    title: 'Master',\n    submenu: [\n      {\n        icon: '',\n        title: 'Bank',\n        list: '/bank/list',\n        label: 'Bank'\n      },\n      {\n        icon: '',\n        title: 'Group',\n        list: '/group/list',\n        label: 'Group'\n      },\n      {\n        icon: '',\n        title: 'Party',\n        list: '/party/list',\n        label: 'Party'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Transaction',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase',\n        list: '/purchase/list',\n        label: 'Milk Purchase'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Settings',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Rates',\n        list: '/milkRates/update',\n        label: 'Milk Rates'\n      },\n      {\n        icon: '',\n        title: 'Standard',\n        list: '/standard/update',\n        label: 'Standard'\n      },\n      {\n        icon: '',\n        title: 'Misc',\n        list: '/misc/update',\n        label: 'Misc'\n      },\n      {\n        icon: '',\n        title: 'Combination',\n        list: '/combination/update',\n        label: 'Combination'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Reports',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase Register',\n        list: '/register/list',\n        label: 'Milk Purchase Register'\n      }\n    ]\n  }\n]","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Notification = ({ id, notifySelector, type, notifyDoneAction }, props) => {\n    const notifyObj = useSelector(state => notifySelector(state, id))\n    console.log(\"id-------------------\", id)\n    console.log(\"notifyObj-------------------\", notifyObj)\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        if(id !== 0 && notifyObj){\n            const options = {\n                position: \"bottom-center\",\n                autoClose: 3000,\n                hideProgressBar: true\n            }\n            const getNotObj = type === \"save\" ? notifyObj.save : type === \"edit\" ? notifyObj.edit : type === \"delete\" ? notifyObj.delete : {}\n            if(getNotObj){\n                toast[getNotObj.status]( getNotObj.msg, options );\n                dispatch(notifyDoneAction({id, type}))\n            }\n        }\n    })\n\n    if (notifyObj){\n    return (\n        <ToastContainer transition={Slide}/>\n    )} else return null\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteParty, setNotifyDoneParty, partyPrint } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchParty } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\nimport { getGroupById } from '../../group/data/selectors'\nimport { getBankById } from '../../bank/data/selectors'\n\nconst Party = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.party.status === 1 ? false : true\n\n    const [deletePartyId, setDeletePartyId] = useState(false)\n    const [modalOption, setModalOption] = useState({ status: false, id: 0 })\n\n    const group = useSelector(state => getGroupById(state, props.party ? props.party.groupMaster ? props.party.groupMaster.id : 0 : 0))\n    const bank = useSelector(state => getBankById(state, props.party ? props.party.bankMaster ? props.party.bankMaster.id : 0 : 0))\n\n    const deletePartyFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deleteParty(getVlaue))\n        setDeletePartyId(values)\n        setModalOption({ status: false, id: 0 })\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.party.partyName}</Table.Cell>\n            <Table.Cell>{props.party.phone}</Table.Cell>\n            <Table.Cell>{group ? group.groupName !== undefined ? group.groupName : '' : ''}</Table.Cell>\n            <Table.Cell>{bank ? bank.bankName !== undefined ? bank.bankName : '' : '' + \" - \" + props.party.partyBankAccNo}</Table.Cell>\n            <Table.Cell textAlign='right' style={{ width: '10%' }}>{props.party.balance > 0 ? props.party.balance : (props.party.balance * -1)} {parseFloat(props.party.balance) >= 0 ? \"Dr\" : \"Cr\"}</Table.Cell>\n            <Table.Cell textAlign='center' style={{ width: '10%' }}>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/party/edit/\" + props.party.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({ status: true, id: props.party.id })}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                    {\n                        deletePartyId ?\n                            <Notification id={deletePartyId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneParty} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({ status: false, id: 0 })}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePartyFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes' />\n                        <Button onClick={() => setModalOption({ status: false, id: 0 })} negative labelPosition='right' icon='close' content='No' />\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PartyList = (props) => {\n    // Loading Logic if tasks not fetched\n    const party = useSelector(state => select.getPartyList(state, props))\n    const partyFetched = useSelector(state => select.getIsPartyFetched(state, props))\n    const dispatch = useDispatch()\n\n    const addPartyClick = () => {\n        props.history.push('/party/create');\n    }\n\n    const printPartyDetails = () => {\n        dispatch(partyPrint())\n    }\n\n    useEffect(() => {\n        dispatch(fetchParty())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Party List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addPartyClick()}>\n                            Add Party<Icon name='add' />\n                        </Button>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => printPartyDetails()}>\n                            Print<Icon name='print' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '5%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Party Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '15%' }}>Phone</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Group</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Bank & A/C No</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='right' style={{ width: '10%' }}>Balance</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center' style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!partyFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"7\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(party).map((key, index) =>\n                                <Party party={party[key]} key={party[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PartyList;\n","\n/*\n * @param str (Given Date String)\n * @param dateObj (Date Field Object)\n * @description This function is called when str is not blank.\n */\nexport const checkValidDateFormats = (str) => {\n    str = str.replace(/[ ]/gi, \"-\").replace(/[*]/gi, \"-\").replace(/[.]/gi, \"-\").replace(/[+]/gi, \"-\").replace(/[/]/gi, \"-\")\n    let split_str = str.split(\"-\");\n    if (split_str.length <= 3) { // Within dd,MM and yyyy.\n        let DD = parseInt(split_str[0], 10) < 10 ? \"0\" + parseInt(split_str[0], 10) : parseInt(split_str[0]),\n            MM = parseInt(split_str[1], 10) < 10 ? \"0\" + parseInt(split_str[1], 10) : parseInt(split_str[1]),\n            YY = split_str[2],\n            isDD = !isNaN(DD) && DD ? true : false,\n            isMM = !isNaN(MM) && MM ? true : false,\n            isYY = !isNaN(YY) && YY ? true : false,\n            currDate = getCurrentDate(\"yyyy-MM-dd\"),\n            reqDate = \"\";\n\n        if ((isDD === true && isMM === true  && isYY === true)) {    // All three (dd-MM-yyy)\n            let isValidDay1 = checkDay(DD, MM, YY);\n            let isValidMonth1 = checkMonth(MM);\n            if (isValidDay1 === true && isValidMonth1 === true) {\n                return setYear(DD, MM, YY);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\");\n            }\n        } else if (isDD === true && isMM === true && split_str.length === 2) {            // Only first two (dd-MM)\n            let isValidDay2 = checkDay(DD, MM, YY);\n            let isValidMonth2 = checkMonth(MM);\n            if (isValidDay2 === true && isValidMonth2 === true) {\n                reqDate = getYear(DD, MM, currDate);\n                return reqDate\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else if (isDD === true && split_str.length === 1) {                                                // Only first one (dd)\n            let isValidDay3 = checkDay(DD, MM, YY);\n            if (isValidDay3 === true) {\n                reqDate = getMonthYear(DD, currDate);\n                return reqDate\n                // checkValidDateFormats(reqDate);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else {\n            console.log(\"Please enter proper date in 'dd-MM-yyyy' format.\");\n        }\n    } else { // Not Within dd,MM and yyyy.\n        console.log(\"Please enter date in 'dd-MM-yyyy' format.\")\n    }\n}\n\n\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @return true if DD satisfy the valid day range, else false\n */\nfunction checkDay(DD, MM, YY){\n    var validDateRange = 31;\n    if(MM !== undefined && !isNaN(MM)){\n        if(MM === 1 || MM ===3 || MM === 5 || MM === 7 || MM === 8 || MM === 10 || MM === 12){\n            validDateRange = 31;\n        }else if(MM === 2){\n            if(YY === undefined){\n                console.log('YY not defined')\n            }\n            var isLeapYear = isleap(YY);\n            validDateRange = isLeapYear === true ? 29 : 28;\n        }else{\n            validDateRange = 30;\n        }\n    }    \n    return DD !== 0 ? (DD <= validDateRange ? true : false) : false;\n}\n\n/*\n * @param MM (Given Month)\n * @return true if MM satisfy the valid month range, else false\n */\nfunction checkMonth(MM){\n    var validMonthRange = 12;\n    return MM !== 0 ? (MM <= validMonthRange ? true : false) : false;\n}\n\n/*\n * @param dateObj (Date Field Object)\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @description This function is called when DD, MM and YY is given.\n * Checks valid Year format and set required Date to the Date field.\n */\nfunction setYear(DD, MM, YY){\n    var yyStrLen = YY.length,\n    prefixStr = \"\",\n    reqDate = DD+\"-\"+MM+\"-\"+YY;\n    //    console.log(\"DD: \"+DD+\"\\nMM: \"+MM+\"\\nYY: \"+YY+\"\\nyyStrLen: \"+yyStrLen)\n    if(yyStrLen === 2){\n        prefixStr = parseInt(YY, 10) >= 80 && parseInt(YY, 10) <= 99 ? \"19\" : \"20\";\n        reqDate = DD+\"-\"+MM+\"-\"+prefixStr+YY;\n    }else if(yyStrLen === 4){\n        if(parseInt(YY,10) < 1980){\n            console.log(\"Year cannot be less than 1980\");\n        }\n    }\n    if(yyStrLen !== 2 && yyStrLen !== 4){\n        console.log(\"Date out of range. Please ensure you enter proper date.\");\n    }\n    // const rDt = getDateInYYYYMMDD(reqDate, \"-\", \"-\")\n    // console.log('DD MM YY',reqDate)\n    return reqDate\n}\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param currDate (Current Date)\n * @description This function is called when DD and MM is given.\n * @return Required Date\n */\nfunction getYear(DD, MM, currDate){\n    // console.log(\"DD: \"+DD+\"\\nMM: \"+MM)\n\n    const vfDt = currDate\n        \n    //console.log(\"v_fromDate: \"+vfDt)\n    var yy = vfDt.split(\"-\")[0],\n    mm = vfDt.split(\"-\")[1],\n    nextYY = parseInt(yy, 10) + 1,\n    calDate = yy+\"-\"+MM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+MM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    // console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate);\n    // alert(parseInt(MM, 10)+\" > \"+parseInt(mm, 10))\n    if(parseInt(MM, 10) <  parseInt(mm, 10)){\n        diff1 = dateDiff(vfDt, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(vfDt, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) > parseInt(diff2, 10) ? DD+\"-\"+MM+\"-\"+yy : DD+\"-\"+MM+\"-\"+nextYY;\n    // alert(parseInt(diff1, 10) +\">\" +parseInt(diff2, 10))\n    //  console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }\n    else{\n        reqDate = DD+\"-\"+MM+\"-\"+yy;\n    }\n    return reqDate;\n}\n\n/*\n * @param DD (Given Day)\n * @param currDate (Current Date)\n * @description This function is called when only DD is given.\n * @return Required Date\n */\nfunction getMonthYear(DD, currDate){\n    //    console.log(\"DD: \"+DD)\n    var yy = currDate.split(\"-\")[0],\n    mm = currDate.split(\"-\")[1],\n    dd = currDate.split(\"-\")[2],\n    nextMM = parseInt(mm, 10) === 12 ? '01' : ((parseInt(mm, 10) + 1) < 10 ? \"0\"+(parseInt(mm, 10) + 1) : (parseInt(mm, 10) + 1)),\n    prevMM = parseInt(mm, 10) === 1 ? 12 : ((parseInt(mm, 10) - 1) < 10 ? \"0\"+(parseInt(mm, 10) - 1) : (parseInt(mm, 10) - 1)),\n    nextYY = parseInt(mm, 10) === 12 ? parseInt(yy, 10) + 1 : yy,\n    prevYY = parseInt(mm, 10) === 1 ? parseInt(yy, 10) - 1 : yy,\n    calDate = yy+\"-\"+mm+\"-\"+DD,\n    prevDate = prevYY+\"-\"+prevMM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+nextMM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    //    console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate)\n    if(parseInt(DD, 10) > parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, prevDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+prevMM+\"-\"+prevYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else if(parseInt(DD, 10) < parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+nextMM+\"-\"+nextYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else{\n        reqDate = DD+\"-\"+mm+\"-\"+yy;\n    }  \n    return reqDate;\n}\n\n/*\n * @param YY (Given Year)\n * @return true if the given year is a Leap Year, else false\n */\nfunction isleap(YY){\n    var yr = YY;\n    if ((parseInt(yr, 10) % 4) === 0){\n        if (parseInt(yr, 10) % 100 === 0){\n            if (parseInt(yr, 10) % 400 !== 0){\n                //                alert(\"Not Leap\");\n                return false;\n            }else if(parseInt(yr, 10) % 400 === 0){\n                //                alert(\"Leap\");\n                return true;\n            }\n        }else if(parseInt(yr, 10) % 100 !== 0){\n            //            alert(\"Leap\");\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * @param format (Required Format)\n * @return Current Date\n */\nfunction getCurrentDate(format){\n    var d = new Date(),\n    dd = d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\n    mm = (d.getMonth() + 1) < 10 ? \"0\"+(d.getMonth() + 1) : (d.getMonth() + 1),\n    yyyy = d.getFullYear(),\n    currDate = \"\";\n    if(format === \"yyyy-MM-dd\"){\n        currDate = yyyy + \"-\" + mm + \"-\" + dd;\n    }else if(format === \"dd-MM-yyyy\"){\n        currDate = dd + \"-\" + mm + \"-\" + yyyy;\n    }\n    return currDate;\n}\n\n/*\n * @param date (Given Date)\n * @param separator (Given Separator)\n * @param reqseparator (Required Separator)\n * @return Given Date in yyyy-MM-dd\n */\nexport function getDateInYYYYMMDD(date){\n    if(date !== undefined) {\n        const date_split = date.split('-')\n        return  date_split[2] + '-' + date_split[1] + '-' + date_split[0];    \n    } else\n        return date\n}\n\n/*\n * @param v_fromDate (Voucher Period From Date)\n * @param v_toDate (Voucher Period To Date)\n * @param date (Given Date)\n * @return true if given date is within period range, else false\n */\n/*\n * @return Difference between two dates in number of day\n */\nfunction dateDiff(date1, date2){ //date1: To Date(greater)-----date2: From Date(smaller)\n    //    console.log(\"date1: \"+date1+\"\\ndate2: \"+date2)\n    var dt1 = new Date(date1);\n    var dt2 = new Date(date2);\n    var oneDay=1000*60*60*24;    \n    return Math.ceil((dt1.getTime()-dt2.getTime())/oneDay);\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorMessage } from 'formik'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport NumberFormat from 'react-number-format';\nimport { isObject, startCase, toLower, get } from \"lodash\";\nimport { Form, Radio, Input, Label, Dropdown, TextArea, Loader } from 'semantic-ui-react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { checkValidDateFormats, getDateInYYYYMMDD } from './dateUtils'\nimport { debounce } from 'lodash'\n\n\nexport function getValueFromEvent(e) {\n  const { target } = e;\n  let newValues;\n  if (target) {\n    const value = (target.type === \"checkbox\") ? target.checked : target.value;\n    newValues = { [target.name]: value }\n  }\n  else if (isObject(e)) { newValues = e; }\n  return newValues;\n}\n\n\nexport const FormikInputComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, disabled, isReadonly,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      <Input name={field.name}\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={field.value}\n        autoFocus={focus ? focus : false}\n        style={{width: '100%'}}\n        readOnly = {isReadonly ? isReadonly : false}\n        disabled = {disabled ? disabled : false}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  );\n\n\n  export const FormikDateComponent = ({\n    isLabel, label, placeholder, width, focus, isTxn, setDateManually,\n    field, // { name, value, onChange, onBlur }\n    form: { touched, errors, values, handleChange, setFieldValue, dirty }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n    ...props\n  }) => {\n  \n  const [dt, setDt] = useState((setDateManually && setDateManually !== undefined && setDateManually !== \"\") ? moment(setDateManually).toDate() : field.value ? moment(field.value).toDate() : null)\n  let rawEvent = ''\n  useEffect(() => {\n    console.log(\"_-------------done-------------_\", setDateManually)\n    if(setDateManually !== undefined && setDateManually !== \"\" && setDateManually !== 0){\n      setFieldValue(field.name, setDateManually)\n    }else{\n      if(setDateManually !== undefined && setDateManually !== \"\"){\n        setFieldValue(field.name, setDateManually)\n      }\n    }\n  }, [setDateManually])\n\n  const handleDateChange = (e) => {\n    if (rawEvent.type === 'change'){\n        let str = rawEvent.target.value\n        const dt1 = checkValidDateFormats(str)\n        handleChange(dt1)\n        setFieldValue(field.name, getDateInYYYYMMDD(dt1))\n        setDt(moment(getDateInYYYYMMDD(dt1)).toDate())  \n    } else {\n        setDt(e)\n        const dt = moment(e)\n        handleChange(dt.format(\"DD-MM-YYYY\"))\n        setFieldValue(field.name, dt.format(\"YYYY-MM-DD\"))\n    }\n  }\n\n  return (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n      <Form.Field style={{width: '100%'}} width={width ? width : null} error={get(errors,field.name) && get(touched,field.name)}>\n        {errors[field.name] && touched[field.name] && !isTxn ?\n          <label>{errors[field.name]}</label> :\n          <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        <DatePicker\n          name={field.name}\n          placeholderText={placeholder}\n          dateFormat=\"dd-MM-yyyy\"\n          scrollableYearDropdown\n          selected={(setDateManually && setDateManually !== undefined && setDateManually !== \"\") ? moment(setDateManually).toDate() : field.value ? dt : null}\n          onChange={handleDateChange}\n          onChangeRaw={e=> rawEvent = e}\n          autoComplete='off'\n          autoFocus={focus ? focus : false}\n          style={{width: '100%'}}\n        />\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikAmountComponent = ({\n  isLabel, label, saveOnBlur, decimal, compute, isTxn, path, placeholder, focus, setValue, disabled, setStateValue, isReadonly, onChangeFunc, onchangeset,\n  field, // { name, value, onChange, onBlur }\n  index,\n  form: { touched, errors, values, handleSubmit, handleBlur, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) =>  {\n\n  useEffect(() => {\n    if(setValue !== undefined && setValue !== \"\" && setValue !== 0){\n      setFieldValue(field.name, setValue)\n    }else{\n      if(setValue !== undefined && setValue !== \"\"){\n        setFieldValue(field.name, setValue)\n      }\n    }\n  }, [setValue])\n\n  const setValueChange = (setFieldValue, val) => {\n    setFieldValue(field.name, val)\n    if(setStateValue){\n      setStateValue(val !== undefined && val !== \"\" ? val : 0)\n    }\n    if(onChangeFunc){\n      onChangeFunc(val !== undefined && val !== \"\" ? val : 0, setFieldValue)\n    }\n    if(onchangeset){\n      onchangeset(values, setFieldValue)\n    }\n  }\n\n  return(\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <NumberFormat \n        thousandSeparator={true} \n        thousandsGroupStyle=\"lakh\"\n        decimalScale = {(decimal) ? decimal : 2 }\n        placeholder={placeholder}\n        name={field.name}\n        value={field.value}\n        onValueChange={(val) => setValueChange(setFieldValue, val.floatValue)}\n        autoFocus={focus ? focus : false}\n        disabled = {disabled ? disabled : false}\n        style={{textAlign: \"right\", width: '100%'}}\n        readOnly={isReadonly ? isReadonly : false}\n        onBlur={(e) =>{\n          // e.persist()\n          // handleBlur(e)\n          if (compute) compute(values, index, setFieldValue)\n        }}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  )\n}\n\n\nexport const FormikCheckBoxComponent = ({\n  userProps, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n      <Radio\n      name={field.name}\n      id={userProps.id}\n      value={userProps.id}\n      checked={userProps.id === field.value}\n      onChange={field.onChange}\n      autoFocus={focus ? focus : false}\n    />&nbsp;&nbsp;<b>{userProps.id}</b>\n      {/* {errors[field.name] && touched[field.name] ?\n        <label>{errors[field.name]}</label> :\n        <label>{userProps.isLabel ? null : startCase(toLower(field.name))}</label>} */}\n    </Form.Field>\n  );  \n\nexport const FormikSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, placeholder,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\nconst onChange = (value) => {\n  setFieldValue(field.name, value)\n  if (userProps.getValue)\n    userProps.getValue(value);\n}\n\nuseEffect(() => {\n  if(userProps.setValue && userProps.setField){\n    userProps.setField(field.name, userProps.setValue)\n  }\n}, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n      search\n      selection={isSelection ? true : false}\n      id={field.id}\n      name={field.name}\n      placeholder={placeholder}\n      options={userProps.options}\n      value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n      onChange={(e, { value }) => onChange(value)}\n      autoFocus={focus ? focus : false}\n      clearable\n      disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n      style={{width: '100%'}}\n      />     \n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikMultiSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n  \n  useEffect(() => {\n    if(userProps.setValue && userProps.setField){\n      userProps.setField(field.name, userProps.setValue)\n    }\n  }, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n        options={userProps.options}\n        placeholder={userProps.placeholder}\n        search\n        selection\n        fluid\n        multiple\n        allowAdditions\n        value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n        onChange={(e, { value }) => onChange(value)}\n        disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n        style={{width: '100%'}}\n        selection={isSelection ? true : false}\n        id={field.id}\n        name={field.name}\n      />\n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikAsyncSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, width, appendLabel, appendLabelText, className, isFetching,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n\n\n  const loadOptions = (searchQuery) => {\n      userProps.getInputValue(searchQuery, values.id);\n  }\n  return (\n\n    // <Form.Field error={errors[field.name] && touched[field.name]}>{appendLabel ? className : \"\"}\n    <Form.Field width={width ? width : null} className=\"goRelative\" error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <Dropdown\n        search\n        selection={isSelection ? true : false}\n        // selectOnNavigation={true}\n        id={field.id}\n        name={field.name}\n        placeholder={userProps.placeHolder}\n        options={userProps.searchOptions && userProps.searchOptions.length>0 ? userProps.searchOptions : userProps.options}\n        value={field.value}\n        onSearchChange={(e, { searchQuery }) => loadOptions(searchQuery)}\n        onChange={(e, { value }) => onChange(value)}\n        placeholder={userProps.placeholder}\n        clearable\n        searchInput={{ autoFocus: focus ? focus : false }}\n        style={{width: '100%'}}\n        />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      {appendLabel ? isFetching  ? <Loader active size=\"mini\" className=\"smallLoader\"/> : <Label size=\"mini\" className=\"noColorLabel\">{appendLabelText}</Label> : null}\n      </Form.Field>\n  )\n};  \n\n\nexport const FormikTextAreaComponent = ({\n  userProps, isTxn, isLabel, label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, handleBlur, setFieldValue, HeaderClick }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const [ count, setCount ] = useState(0)\n\n  const onChange = (syntheticEvent, value) => {\n    setFieldValue(field.name, value.value)\n    setCount(value.value.length)\n    if(value.value !== \"\"){\n      if (userProps.getValue)\n        userProps.getValue(value.value);\n    }else{\n      if (userProps.getValue)\n        userProps.getValue('');\n    }\n  }\n  \n  useEffect(() => {\n    if(userProps){\n      if(userProps.value){\n        setFieldValue(field.name, userProps.value)\n      }\n    }\n  }, [userProps.value])\n\n  useEffect(() => {\n    if(userProps && userProps.displayCount !== undefined && userProps.displayCount === true && field.value && field.value.length === 0){\n      setCount(0)\n    }else{\n      if(field.value && field.value.length > 0){\n        setCount(field.value.length)\n      }else{\n        setCount(0)\n      }\n    }\n  }, [field.value])\n\n  const height = userProps ? (userProps.height === undefined ? 3 : (userProps.height === '' ? 3 : userProps.height === 0 ? 3 : userProps.height)): 3;\n  const isFloatLeft = userProps && userProps.displayCount !== undefined && userProps.displayCount === true ? 'left' : null\n  return (\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label style={{float: isFloatLeft}}>{errors[field.name]}</label> :\n        <label style={{float: isFloatLeft}}>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      {userProps ? userProps.displayCount !== undefined && userProps.displayCount === true ?\n          <label style={{float: 'right'}}>{count} / {userProps.maxLength}</label>\n          : null: null}\n        <TextArea\n          name={field.name}\n          style={{ \n              resize: 'none', \n              width: '100%'\n          }}\n          value={field.value}\n          onChange={onChange}\n          rows={height}\n          maxLength={userProps ? userProps.maxLength : null}\n          placeholder={userProps ? userProps.getholder : null}>\n        </TextArea>\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikDisplayLabelComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, text,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>\n      <label className=\"AutoGenerate\">{text}</label>\n    </Form.Field>\n  );\n\n// export const FormikAsyncSelectComponent = ({\n//   userProps, isLabel, label, isTxn,\n//   field, // { name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//       userProps.getValue(value);\n//   }\n\n\n//   const loadOptions = (inputValue, callback) => {\n//     userProps.getInputValue(inputValue, callback);\n//   }\n\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <AsyncSelect\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         defaultOptions={userProps.options}\n//         loadOptions={loadOptions} \n//         value={userProps.options ? userProps.options.find(option => option.value === field.value) : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n// export const regexCheckLakhWithZeroDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:|,\\d+)?$/\n// export const regexCheckLakhWithTwoDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,2})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithThreeDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,3})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithFourDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,4})|,\\d+|\\.)?$/\n\n// export const FormikAmtForTxnComponent = ({\n//   isLabel,\n//   label,\n//   field,  //{ name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleBlur, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const [ textVal, setTextValue ] = useState(\"\")\n\n// return (\n//     <Form.Field error={errors[field.name] && touched[field.name]}>\n//       {errors[field.name] && touched[field.name] ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Input \n//         name={field.name}\n//         type=\"text\"\n//         onFocus={e => (field.value) ? setTextValue(parseFloat(field.value).toString().replace(/,/g, '')): \"\"}\n//         onChange={e => {\n//           // const re = /^(?:\\d+|\\d{1,3}(?:,\\d{2})+)(?:(\\.|,)\\d+|\\.\\d{0,2})?$/;\n//           // const re = lakhWithTwoDecimal;\n//           if (e.target.value === '' || regexCheckLakhWithTwoDecimal.test(e.target.value)) {\n//             setTextValue(e.target.value)\n//             setFieldValue(field.name, e.target.value)\n//           }          \n//         }}\n//         onBlur={e => {\n//           // handleBlur(e) \n//           let vl = (field.value) ? parseFloat(field.value).toFixed(2).replace(regexConvertToLakh, '$1,') : \"\"\n//           setTextValue(vl)\n//           // let someValue = e.currentTarget.value\n//     }}\n//         value={textVal}\n//       />\n//     </Form.Field>\n//   )};\n\n\n// export const FormikSelectComponent = ({\n//     userProps, isLabel, label, isTxn,\n//     field, // { name, value, onChange, onBlur }\n//     form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//     ...props\n//   }) => {\n  \n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//     userProps.getValue(value);\n//   }\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Select\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         options={userProps.options}\n//         // value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n","import React from 'react';\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\n    \n\nconst PlantSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = [{\n        key : \"1\",\n        value : 1,\n        text : \"1\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default PlantSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectGroup } from '../data/selectors'\n    \n\nconst GroupSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = useSelector(state => selectGroup(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default GroupSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectBank } from '../data/selectors'\n    \n\nconst BankSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n    \n    const opt = useSelector(state => selectBank(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default BankSelect;\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createGroup } from '../data/actions' \r\nimport { groupSchema, group } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst GroupPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const saveGroup = (values) => {\r\n        dispatch(createGroup(values))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Group' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Group</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"groupPopupForm\" size=\"large\" width={5}\r\n                    initialValues={group()}\r\n                    validationSchema={groupSchema}\r\n                    onSubmit={(values) => saveGroup(values)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupPopup;","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBank } from '../data/actions'\r\nimport { bankSchema, bank } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst BankPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const saveBank = (values) => {\r\n        dispatch(createBank(values))\r\n        setDisplayStatus(false)\r\n    }\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Bank</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"bankPopupForm\" size=\"large\" width={5}\r\n                    initialValues={bank()}\r\n                    validationSchema={bankSchema}\r\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BankPopup;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getParty, getPartyParams, getSavedPartyId, getNotification } from '../data/selectors'\nimport { createParty, editParty, setNotifyDoneParty } from '../data/actions'\nimport { partySchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikAmountComponent, FormikInputComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\nimport PlantSelect from '../../party/components/plantSelect'\nimport GroupSelect from '../../group/components/groupSelect'\nimport BankSelect from '../../bank/components/bankSelect'\nimport GroupPopup from '../../group/components/groupPopup'\nimport BankPopup from '../../bank/components/bankPopup'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst PartyForm = (props) => {\n\n    const party = useSelector(state => getParty(state, props))\n    const savedPartyId = useSelector(state => getSavedPartyId(state, props))\n    const params = useSelector(state => getPartyParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveParty = (values, resetForm) => {\n        if (props.match.path === '/party/create') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(createParty(values))\n            resetForm()\n        }\n        if (props.match.path === '/party/edit/:id') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(editParty(values))\n            props.history.push(`/party/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"partyForm\" size=\"large\" width={5}\n                    initialValues={party}\n                    validationSchema={partySchema}\n                    onSubmit={(values, { resetForm }) => saveParty(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <PlantSelect name=\"plantNo\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'plantNo' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"plantName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"address\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 400, displayCount: true, height: 3 }} focus={true} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"phone\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <BankSelect name=\"bankM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'bankM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <BankPopup setFieldVal={setFieldValue} name='bankPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyBankAccNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"balance\" label=' ' component={FormikAmountComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"nickName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <GroupSelect name=\"groupM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'groupM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <GroupPopup setFieldVal={setFieldValue} name='groupPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\" + params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/party/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br /><br /><br /><br />\n                            {savedPartyId && savedPartyId !== 0 && props.match.path === '/party/create' ?\n                                <Notification id={savedPartyId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneParty} type='save' />\n                                :\n                                null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PartyForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport PartyList from \"./components/partyList\";\nimport PartyForm from \"./components/partyForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Party = () => {\n    return (\n        <Container>\n            <Route path=\"/party/list\" component={withRouter(PartyList)} />\n            <Route path=\"/party/edit/:id\" component={PartyForm} />\n            <Route path=\"/party/create\" component={PartyForm} />\n        </Container>\n    )\n};\n\nexport default Party;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteBank, setNotifyDoneBank } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchBank } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Bank = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.bank.status === 1 ? false : true;\n\n    const [deleteBankId, setDeleteBankId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const deleteBankFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deleteBank(getVlaue))\n        setDeleteBankId(values)\n        setModalOption({status: false, id: 0})\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.bank.bankName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/bank/edit/\" + props.bank.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({status: true, id: props.bank.id})}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                {console.log(deleteBankId)}\n                    { \n                        deleteBankId ?\n                            <Notification id={deleteBankId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneBank} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteBankFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst BankList = (props) => {\n    // Loading Logic if tasks not fetched\n    const bank = useSelector(state => select.getBankList(state, props))\n    const bankFetched = useSelector(state => select.getIsBankFetched(state, props))\n    const dispatch = useDispatch()\n    const addBankClick = () => {\n        props.history.push('/bank/create')\n    }\n\n    useEffect(() => {\n        dispatch(fetchBank())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Bank List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addBankClick()}>\n                            Add Bank<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '10%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '80%' }}>Bank Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!bankFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(bank).map((key, index) =>\n                                <Bank bank={bank[key]} key={bank[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default BankList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getBank, getBankParams, getSavedBankId, getNotification } from '../data/selectors'\nimport { createBank, editBank, setNotifyDoneBank } from '../data/actions' \nimport { bankSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst BankForm = (props) => {\n\n    const bank = useSelector(state => getBank(state, props))\n    const savedBankId = useSelector(state => getSavedBankId(state, props))\n    const params = useSelector(state => getBankParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveBank = (values, resetForm) => {\n        if (props.match.path === '/bank/create') {\n            dispatch(createBank(values))\n            resetForm()\n        }\n        if (props.match.path === '/bank/edit/:id') {\n            dispatch(editBank(values))\n            props.history.push(`/bank/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"bankForm\" size=\"large\" width={5}\n                    initialValues={bank}\n                    validationSchema={bankSchema}\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/bank/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedBankId && savedBankId !== 0 && props.match.path === '/bank/create' ? \n                            <Notification id={savedBankId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneBank} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default BankForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BankList from \"./components/bankList\";\nimport BankForm from \"./components/bankForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Bank = () => {\n    return (\n        <Container>\n            <Route path=\"/bank/list\" component={withRouter(BankList)} />\n            <Route path=\"/bank/edit/:id\" component={BankForm} />\n            <Route path=\"/bank/create\" component={BankForm} />\n        </Container>\n    )\n};\n\nexport default Bank;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteGroup, setNotifyDoneGroup, fetchGroup } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Group = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.group.status === 1 ? false : true;\n    \n    const [deleteGroupId, setDeleteGroupId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n    \n    const deleteGroupFromList = (values) => {\n        const getVlaue = {id: values}\n        dispatch(deleteGroup(getVlaue))\n        setDeleteGroupId(values)\n        setModalOption({status: false, id: 0})\n    }\n    \n    return(\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.group.groupName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ? \n                    <>\n                        <Link to={\"/group/edit/\"+props.group.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{cursor: 'pointer', color: 'red'}} onClick={() => setModalOption({status: true, id: props.group.id})}>Delete</span>\n                    </>\n                :\n                    <span>Deleted</span>\n                }\n                <>\n                {\n                    deleteGroupId ? \n                    <Notification id={deleteGroupId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneGroup} type='delete'/>\n                    :\n                    null\n                }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteGroupFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst GroupList = (props) => {\n    // Loading Logic if tasks not fetched\n    const group = useSelector(state => select.getGroupList(state, props)) \n    const groupFetched = useSelector(state => select.getIsGroupFetched(state, props))\n    const dispatch = useDispatch()\n    \n    const addGroupClick = () => {\n        props.history.push('/group/create');\n    }\n    \n    useEffect(()=>{\n        dispatch(fetchGroup())\n    })      \n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Group List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addGroupClick()}>\n                            Add Group<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br/>\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{width: '10%'}}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '80%'}}>Group Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '10%'}}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!groupFetched ? \n                    <>\n                        <Table.Row>\n                            <Table.Cell style={{width: '100%'}} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>                             \n                        </Table.Row>\n                    </> :\n                    <>\n                    { Object.keys(group).map((key, index) => \n                    <Group group={group[key]} key={group[key].id} index={index}/> )}\n                    </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default GroupList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getGroup, getGroupParams, getSavedGroupId, getNotification } from '../data/selectors'\nimport { createGroup, editGroup, setNotifyDoneGroup } from '../data/actions' \nimport { groupSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst GroupForm = (props) => {\n\n    const group = useSelector(state => getGroup(state, props))\n    const savedGroupId = useSelector(state => getSavedGroupId(state, props))\n    const params = useSelector(state => getGroupParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveGroup = (values, resetForm) => {\n        if (props.match.path === '/group/create') {\n            dispatch(createGroup(values))\n            resetForm()\n        }\n        if (props.match.path === '/group/edit/:id') {\n            dispatch(editGroup(values))\n            props.history.push(`/group/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"groupForm\" size=\"large\" width={5}\n                    initialValues={group}\n                    validationSchema={groupSchema}\n                    onSubmit={(values, { resetForm }) => saveGroup(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/group/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedGroupId && savedGroupId !== 0 && props.match.path === '/group/create' ? \n                            <Notification id={savedGroupId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneGroup} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default GroupForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport GroupList from \"./components/groupList\";\nimport GroupForm from \"./components/groupForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Group = () => {\n    return (\n        <Container>\n            <Route path=\"/group/list\" component={withRouter(GroupList)} />\n            <Route path=\"/group/edit/:id\" component={GroupForm} />\n            <Route path=\"/group/create\" component={GroupForm} />\n        </Container>\n    )\n};\n\nexport default Group;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const milkRates =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const milkRatesSchema = Yup.object().shape({\n    type: Yup.string()\n        .required('This is a Required Field'),\n\n    pageName: Yup.string()\n        .required('This is a Required Field'),\n        \n    goodFat: Yup.string()\n        .required('This is a Required Field'),\n\n    goodSnf: Yup.string()\n        .required('This is a Required Field'),\n\n    badFat: Yup.string()\n        .required('This is a Required Field'),\n\n    badSnf: Yup.string()\n        .required('This is a Required Field')\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { milkRates } from './model'\n\nexport const getIsFetchingMilkRates = (state, props) => state.milkRates.params.isFetching\nexport const getIsMilkRatesFetched = (state, props) => state.milkRates.params.milkRatesFetched\nexport const getSavedMilkRatesId = (state, props) => state.milkRates.params.savedMilkRatesId\nexport const getMilkRatesList = (state, prop) => state.milkRates.byId\nexport const getNotification = (state, id) => state.milkRates.notifications[id]\n\nexport const getMilkRates = (state, props) => {\n    return milkRates()\n}\nexport const getMilkRatesParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/milkRates/create')){ \n        params.title = state.milkRates.params.createTitle\n        params.submitButtonText = state.milkRates.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/milkRates/edit/')){ \n        params.title = state.milkRates.params.editTitle\n        params.submitButtonText = state.milkRates.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const settings = useSelector(state => select.getMilkRatesList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { milkRatesSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editMilkRates, setNotifyDoneMilkRates } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MilkRatesForm = (props) => {\r\n    \r\n    const milkRates = useSelector(state => select.getMilkRates(state, props))\r\n    const savedMilkRatesId = useSelector(state => select.getSavedMilkRatesId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMilkRates = (values, resetForm) => {\r\n        dispatch(editMilkRates(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Milk Price / Rates</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={milkRates}\r\n                    validationSchema={milkRatesSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveMilkRates(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMilkRatesId && savedMilkRatesId !== 0 ? \r\n                            <Notification id={savedMilkRatesId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMilkRates} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MilkRatesForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MilkRatesForm from \"./components/milkRatesForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst MilkRates = () => {\n    return (\n        <Container>\n            <Route path=\"/milkRates/update\" component={withRouter(MilkRatesForm)} />\n        </Container>\n    )\n};\n\nexport default MilkRates;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const standard =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const standardSchema = Yup.object().shape({\n\n  type: Yup.string()\n  .required('This is a Required Field'),\n\n  pageName: Yup.string()\n    .required('This is a Required Field'),\n    \n  goodFat: Yup.string()\n    .required('This is a Required Field'),\n\n  goodSnf: Yup.string()\n    .required('This is a Required Field'),\n\n  badFat: Yup.string()\n    .required('This is a Required Field'),\n\n  badSnf: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { standard } from './model'\n\nexport const getIsFetchingStandard = (state, props) => state.standard.params.isFetching\nexport const getIsStandardFetched = (state, props) => state.standard.params.standardFetched\nexport const getSavedStandardId = (state, props) => state.standard.params.savedStandardId\nexport const getStandardList = (state, prop) => state.standard.byId\nexport const getNotification = (state, id) => state.standard.notifications[id]\n\nexport const getStandard = (state, props) => {\n    return standard()\n}\n\nexport const getStandardParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/standard/create')){ \n        params.title = state.standard.params.createTitle\n        params.submitButtonText = state.standard.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/standard/edit/')){ \n        params.title = state.standard.params.editTitle\n        params.submitButtonText = state.standard.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const settings = useSelector(state => select.getStandardList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { standardSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editStandard, setNotifyDoneStandard } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst StandardForm = (props) => {\r\n\r\n    const standard = useSelector(state => select.getStandard(state, props))\r\n    const savedStandardId = useSelector(state => select.getSavedStandardId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveStandard = (values, resetForm) => {\r\n        dispatch(editStandard(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Standard</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={standard}\r\n                    validationSchema={standardSchema}\r\n                    onSubmit={(values, { resetForm }) => saveStandard(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedStandardId && savedStandardId !== 0 ? \r\n                            <Notification id={savedStandardId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneStandard} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StandardForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport StandardForm from \"./components/standardForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Standard = () => {\n    return (\n        <Container>\n            <Route path=\"/standard/update\" component={withRouter(StandardForm)} />\n        </Container>\n    )\n};\n\nexport default Standard;\n\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const misc =  () => ({\n    \"typeName\": \"\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"updatedOn\": \"\",\n    \"value\": \"\",\n    \"operation\": \"\",\n    \"operationOn\": \"\",\n    \"createdOn\" : \"\",\n    \"status\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const miscSchema = Yup.object().shape({\n\n  name: Yup.string()\n  .required('This is a Required Field'),\n\n  value: Yup.string()\n    .required('This is a Required Field'),\n\n  operationOn: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { misc } from './model'\n\nexport const getIsFetchingMisc = (state, props) => state.misc.params.isFetching\nexport const getIsMiscFetched = (state, props) => state.misc.params.miscFetched\nexport const getSavedMiscId = (state, props) => state.misc.params.savedMiscId\nexport const getMiscList = (state, prop) => state.misc.byId\nexport const getMiscListByName = (state, name) => state.misc.byId[name]\nexport const getNotification = (state, id) => state.misc.notifications[id]\n\nexport const getMisc = (state, props) => {\n    return misc()\n}\n\nexport const getMiscParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/misc/create')){ \n        params.title = state.misc.params.createTitle\n        params.submitButtonText = state.misc.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/misc/edit/')){ \n        params.title = state.misc.params.editTitle\n        params.submitButtonText = state.misc.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst MiscNameTypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const misc = useSelector(state => select.getMiscList(state, props))\n    const opt = [{\n        key : \"Commision\",\n        value : \"Commision\",\n        text : \"Commision\"\n    },{\n        key : \"Head Load\",\n        value : \"Head Load\",\n        text : \"Head Load\"\n    },{\n        key : \"Sour Milk\",\n        value : \"Sour Milk\",\n        text : \"Sour Milk\"\n    }]\n\n    const getSelectedValue = (values) => {\n        values = values.trim()\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('name', values)\n            userProps.setField('id', misc[values] ? misc[values].id ? misc[values].id : '' : '')\n            userProps.setField('typeName', misc[values] ? misc[values].typeName ? misc[values].typeName.trim() : '' : '')\n            userProps.setField('operation', misc[values] ? misc[values].operation ? misc[values].operation.trim() : '' : '')\n            userProps.setField('operationOn', misc[values] ? misc[values].operationOn ? misc[values].operationOn.trim() : '' : '')\n            userProps.setField('value', misc[values] ? misc[values].value ? misc[values].value : '' : '')\n            userProps.setField('description', misc[values] ? misc[values].description ? misc[values].description : '' : '')\n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default MiscNameTypeSelect;\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst MiscOperationType = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\r\n    const opt = [{\r\n        key : \"QTY(KG)\",\r\n        value : \"QTY(KG)\",\r\n        text : \"QTY(KG)\"\r\n    },{\r\n        key : \"Milk Price\",\r\n        value : \"Milk Price\",\r\n        text : \"Milk Price\"\r\n    },{\r\n        key : \"FAT/SNF(KG)\",\r\n        value : \"FAT/SNF(KG)\",\r\n        text : \"FAT/SNF(KG)\"\r\n    }]\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MiscOperationType;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { miscSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\r\nimport MiscNameType from './miscNameType'\r\nimport MiscOperationType from './miscOperationType'\r\nimport * as select from '../data/selectors'\r\nimport { editMisc, setNotifyDoneMisc } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MiscForm = (props) => {\r\n\r\n    const misc = useSelector(state => select.getMisc(state, props))\r\n    const savedMiscId = useSelector(state => select.getSavedMiscId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMisc = (values, resetForm) => {\r\n        console.log(values, \"------------------saving values\")\r\n        dispatch(editMisc(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Misc</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"miscForm\" size=\"large\" width={5}\r\n                    initialValues={misc}\r\n                    validationSchema={miscSchema}\r\n                    onSubmit={(values, { resetForm }) => saveMisc(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscNameType name=\"name\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    {values.name !== \"Sour Milk\" ? \r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Operation On: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscOperationType name=\"operationOn\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    : null }\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Value (Rs.): </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"value\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Description: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"description\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 200, displayCount: false, height: 3}} focus={true}/>\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMiscId && savedMiscId !== 0 ? \r\n                            <Notification id={savedMiscId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMisc} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MiscForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MiscForm from \"./components/miscForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Misc = () => {\n    return (\n        <Container>\n            <Route path=\"/misc/update\" component={withRouter(MiscForm)} />\n        </Container>\n    )\n};\n\nexport default Misc;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const finYear =  () => ({\n    \n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSchema = Yup.object().shape({\n\n    \n\n  });\n\nexport const finYearSearchList =  () => ({\n    fintype: \"\",\n    finco: \"\",\n    fdt: \"\",\n    tdt: \"\"\n})\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSearchListSchema = Yup.object().shape({\n    fdt: Yup.string()\n                .required('This is a Required Field'),\n    \n    tdt: Yup.string()\n                .required('This is a Required Field')\n\n  });","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { finYear } from './model'\n\nexport const getIsFetchingFinYear = (state, props) => state.finYear.params.isFetching\nexport const getIsFinYearFetched = (state, props) => state.finYear.params.finYearFetched\nexport const getSavedFinYearId = (state, props) => state.finYear.params.savedFinYearId\nexport const getFinYearList = (state, prop) => state.finYear.byId\nexport const getNotification = (state, id) => state.finYear.notifications[id]\n\nexport const getFinYear = (state, props) => {\n    if(props.match.path==='/finYear/create'){\n        return finYear()\n    }\n    if(props.match.path==='/finYear/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.finYear.byListId[_id]);\n        return obj\n    }\n}\n\nexport const getFinYearParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/finYear/create')){ \n        params.title = state.finYear.params.createTitle\n        params.submitButtonText = state.finYear.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/finYear/edit/')){ \n        params.title = state.finYear.params.editTitle\n        params.submitButtonText = state.finYear.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\nexport const selectFinYearList = createSelector(\n    getFinYearList,\n    finYear => { \n        const keys = Object.keys(finYear)\n        // const obj = keys.map( (key) => { return { value : key, label : year[key].name }})\n        const obj = keys.map( (key) => { return { key : key,  value : key, text : finYear[key].sessionName }})\n        return obj\n    })","import React, { useState } from 'react'\r\nimport store from 'store2'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Container, Button, Table, Icon, Dropdown, Modal } from 'semantic-ui-react'\r\nimport * as select from '../data/selectors'\r\nimport { createFinYear, setNotifyDoneFinYear } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\nconst FinYearForm = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [year, setYear] = useState(false)\r\n    const dispatch = useDispatch()\r\n    \r\n    const finYearFetched = useSelector(state => select.getIsFinYearFetched(state, props))\r\n    const savedFinYearId = useSelector(state => select.getSavedFinYearId(state, props))\r\n    const options = useSelector(state => select.selectFinYearList(state, props))\r\n    \r\n    const onchangeDD = (value) => {\r\n        setYear(value)\r\n    }\r\n\r\n    const addNewFinYear = () => {\r\n        setDisplayStatus(true)\r\n    }\r\n\r\n    const addFinYear = () => {\r\n        dispatch(createFinYear({}))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    const setSessionAndGoToApp = () => {\r\n        store.session('finYear', year)\r\n        if(store.session('finYear') && store.session('finYear') !== undefined && store.session('finYear') !== \"\"){\r\n            if(props.history !== undefined){\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='formContainer'>\r\n            <Table>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Financial Year: </label></Table.Cell>\r\n                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                        {\r\n                            !finYearFetched && options.length > 0 ? \r\n                                <>Loading</> \r\n                            : \r\n                                <Dropdown clearable options={options} selection style={{float: 'right', width: '85%'}} onChange={(e, { value }) => onchangeDD(value)}/>\r\n                        }\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n            <Modal open={displayStatus} size='mini' trigger={<Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'left' }} onClick={() => addNewFinYear()}>Add Year<Icon name='add circle' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header>Confirmation</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Do you want to add new Financial Year?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => addFinYear(false)} positive labelPosition='right' icon='checkmark' content='Yes'/>\r\n                    <Button onClick={() => setDisplayStatus(false)} negative labelPosition='right' icon='close' content='No'/>\r\n                </Modal.Actions>\r\n            </Modal>\r\n            <Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }} onClick={() => setSessionAndGoToApp()}>\r\n                Go\r\n                <Icon name='arrow alternate circle right' />\r\n            </Button>\r\n            <br /><br /><br /><br />\r\n            {savedFinYearId && savedFinYearId !== 0 ? \r\n                <Notification id={savedFinYearId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneFinYear} type='save'/>\r\n            :\r\n            null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FinYearForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport FinYearForm from \"./components/finYearForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst FinYear = () => {\n    return (\n        <Container>\n            <Route path=\"/finyear\" component={withRouter(FinYearForm)} />\n        </Container>\n    )\n};\n\nexport default FinYear;\n\n","import { createSelector } from 'reselect'\nimport { cloneDeep } from 'lodash'\nimport { purchase, purchaseDetails } from './model'\nimport store from 'store2'\n\nexport const getIsFetchingPurchase = (state, props) => state.purchase.params.isFetching\nexport const getIsPurchaseFetched = (state, props) => state.purchase.params.purchaseFetched\nexport const getSavedPurchaseId = (state, props) => state.purchase.params.savedPurchaseId\nexport const getPurchaseList = (state, prop) => state.purchase.byListId\nexport const getPurchaseById = (state, id) => state.purchase.byListId[id]\nexport const getNotification = (state, id) => state.purchase.notifications[id]\n\nexport const getPurchase = (state, props) => {\n    if(props.match.path==='/purchase/create'){\n        return purchase()\n    }\n    if(props.match.path==='/purchase/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.purchase.byId[_id]);\n        return obj\n    }\n}\n\nexport const getVdetailsObj = (state, object, index, getIndex, combination) => {\n    if(index === \"\"){\n        let obj = purchaseDetails()\n        let shift = store.session('getShift')\n        obj.shift = shift\n        if(combination){\n            obj.setStandard = combination.setStandard\n            obj.setRate = combination.setRate\n        }\n        return obj\n    }else{\n        let obj = object && index !== \"\" && getIndex !== undefined && getIndex !== null && object.purchaseVoucherDetails ? cloneDeep(object.purchaseVoucherDetails[getIndex]) : {};\n        return obj\n    }\n}\n\nexport const getPurchaseParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/purchase/create'){\n        params.title = state.purchase.params.createTitle\n        params.submitButtonText = state.purchase.params.createSubmitButtonText        \n    }else if(props.match.path==='/purchase/edit/:id'){\n        params.title = state.purchase.params.editTitle\n        params.submitButtonText = state.purchase.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectPurchase = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : purchase[key].purchaseName }})\n        return obj\n    }\n)","import * as Yup from 'yup'\nimport moment from 'moment'\n\nexport const purchase =  () => ({\n    \"periodFromDate\": moment().format('YYYY-MM-DD'),\n    \"totalFatAmount\": \"\",\n    \"totalSnfAmount\": \"\",\n    \"totalQty\": \"\",\n    \"deductOthersType\": \"\",\n    \"adjustmentType\": \"\",\n    \"addAdvanceNarration\": \"\",\n    \"totalKgfat\": \"\",\n    \"shareType\": \"\",\n    \"commissionValue\": \"\",\n    \"sourMilkType\": \"\",\n    \"headLoadType\": \"\",\n    \"deductAdvanceNarration\": \"\",\n    \"testEquipMentValue\": \"\",\n    \"sourMilkNarration\": \"\",\n    \"id\": \"\",\n    \"commissionNarration\": \"\",\n    \"billNo\": \"\",\n    \"cattleFeedType\": \"\",\n    \"addOthersNarration\": \"\",\n    \"testEquipMentType\": \"\",\n    \"lateArrivalType\": \"\",\n    \"addOthersValue\": \"\",\n    \"billDate\": moment().format('YYYY-MM-DD'),\n    \"updatedOn\": \"\",\n    \"vaccineType\": \"\",\n    \"mtevalue\": \"\",\n    \"totalRejected\": \"\",\n    \"splIncentiveNarration\": \"\",\n    \"fodderNarration\": \"\",\n    \"purchaseVoucherDetails\": [],\n    \"splIncentiveValue\": \"\",\n    \"billTotal\": \"\",\n    \"sourMilkValue\": \"\",\n    \"periodToDate\": moment().format('YYYY-MM-DD'),\n    \"addAdvanceType\": \"\",\n    \"shareValue\": \"\",\n    \"arrearNarration\": \"\",\n    \"adjustment\": \"\",\n    \"headLoadNarration\": \"\",\n    \"deductOthersValue\": \"\",\n    \"arrearValue\": \"\",\n    \"shareNarration\": \"\",\n    \"cowLoanNarration\": \"\",\n    \"totalSour\": \"\",\n    \"fodderType\": \"\",\n    \"createdOn\": \"\",\n    \"headLoadValue\": \"\",\n    \"deductAdvanceType\": \"\",\n    \"partyM\": \"\",\n    \"vaccineValue\": \"\",\n    \"totalMilkprice\": \"\",\n    \"mtenarration\": \"\",\n    \"cowLoanValue\": \"\",\n    \"addOthersType\": \"\",\n    \"vaccineNarration\": \"\",\n    \"deductAdvanceValue\": \"\",\n    \"totalAdditions\": \"\",\n    \"cattleFeedNarration\": \"\",\n    \"netAmount\": \"\",\n    \"totalDeductions\": \"\",\n    \"mtetype\": \"\",\n    \"addAdvanceValue\": \"\",\n    \"testEquipMentNarration\": \"\",\n    \"lateArrivalValue\": \"\",\n    \"lateArrivalNarration\": \"\",\n    \"commissionType\": \"\",\n    \"splIncentiveType\": \"\",\n    \"arrearType\": \"\",\n    \"fodderValue\": \"\",\n    \"cowLoanType\": \"\",\n    \"adjustmentValue\": \"\",\n    \"adjustmentNarration\": \"\",\n    \"cattleFeedValue\": \"\",\n    \"deductOthersNarration\": \"\",\n    \"totalKgsnf\": \"\",\n    \"totalAvgRateKg\": \"\",\n    \"totalGoodFat\": \"\",\n    \"totalGoodSnf\": \"\",\n    \"totalAvgKg\": \"\",\n    \"totalBadFat\": \"\",\n    \"totalBadSnf\": \"\"\n})\n\nexport const purchaseSchema = Yup.object().shape({\n\n    periodFromDate: Yup.string()\n                .required('This is a Required Field'),\n    periodToDate: Yup.string()\n                .required('This is a Required Field'),\n    billDate: Yup.string()\n                .required('This is a Required Field'),\n    billNo: Yup.string()\n                .required('This is a Required Field'),\n    partyM: Yup.string()\n                .required('This is a Required Field')\n\n  });\n\nexport const purchaseDetails =  () => ({\n    \"date\": \"\",\n    \"sourQty\": \"\",\n    \"updatedOn\": null,\n    \"createdOn\": null,\n    \"kgFat\": \"\",\n    \"snfRate\": \"\",\n    \"rejectedQty\": \"\",\n    \"clrP\": \"\",\n    \"snfP\": \"\",\n    \"fatRate\": \"\",\n    \"fatAmount\": \"\",\n    \"pvid\": \"\",\n    \"qty\": \"\",\n    \"fatP\": \"\",\n    \"snfAmount\": \"\",\n    \"id\": \"\",\n    \"kgSnf\": \"\",\n    \"milkPrice\": \"\",\n    \"remarks\": \"\",\n    \"milkRate\": \"\",\n    \"status\": \"\",\n    \"setStandard\": \"\",\n    \"setRate\": \"\",\n    \"shift\": \"\",\n    \"fatQuality\": \"\",\n    \"snfQuality\": \"\"\n  })\n\nexport const purchaseDetailsSchema = Yup.object().shape({\n\n    date: Yup.string()\n                .required('This is a Required Field')\n\n});\n\nexport const purchaseSearch = () => ({\n  'party': '',\n  'fromDt': '',\n  'toDt': ''\n})","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst PartySelect = ({ name, isTxn, isLabel, label, isSelection, setState, placeholder }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} placeholder={placeholder} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PartySelect;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deletePurchase, setNotifyDonePurchase, postPrintPurchase } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Form, Modal } from 'semantic-ui-react'\nimport { FormikDateComponent } from '../../../utilities/formUtils'\nimport { fetchPurchase } from '../data/actions'\nimport { purchaseSearch } from '../data/model'\nimport Notification from '../../../utilities/notificationUtils'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport PartySelect from '../../party/components/partySelect'\nimport moment from 'moment'\nimport { getPartyObjById } from '../../party/data/selectors'\n\nconst Purchase = props => {\n    const dispatch = useDispatch();\n\n    const [deletePurchaseId, setDeletePurchaseId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const party = useSelector(state => getPartyObjById(state, props.purchase.partyMaster.id))\n\n    const deletePurchaseFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deletePurchase(getVlaue))\n        setDeletePurchaseId(values)\n        setModalOption({status: false, id: 0})\n    }\n\n    const printPurchaseFromList = (values) => {\n        dispatch(postPrintPurchase(values))\n    }\n\n    return (\n        <Table.Row>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.purchase.billNo}</Table.Cell>\n            <Table.Cell>{party.partyName}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.billDate).isValid() ? moment(props.purchase.billDate).format(\"DD-MM-YYYY\") : \"\"}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.periodFromDate).isValid() ? moment(props.purchase.periodFromDate).format(\"DD/MM\") : \"\"} - {moment(props.purchase.periodToDate).isValid() ? moment(props.purchase.periodToDate).format(\"DD/MM\") : \"\"}</Table.Cell>\n            <Table.Cell>{props.purchase.totalQty ? parseFloat(props.purchase.totalQty).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgfat ? parseFloat(props.purchase.totalKgfat).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgsnf ? parseFloat(props.purchase.totalKgsnf).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAvgKg ? parseFloat(props.purchase.totalAvgKg).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAdditions ? parseFloat(props.purchase.totalAdditions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalDeductions ? parseFloat(props.purchase.totalDeductions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.billTotal ? parseFloat(props.purchase.billTotal).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalRejected ? parseFloat(props.purchase.totalRejected).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalSour ? parseFloat(props.purchase.totalSour).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>\n                <>\n                    {/* <Link to={\"/purchase/edit/\" + props.purchase.id}>Edit</Link><span>&nbsp;&nbsp;</span> */}\n                    <span style={{ cursor: 'pointer', color: 'blue' }} onClick={() => printPurchaseFromList(props.purchase.id)}>Print&nbsp;&nbsp;</span>\n                    <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({status: true, id: props.purchase.id})}>Delete</span>\n                </>\n                <>\n                {console.log(deletePurchaseId)}\n                    { \n                        deletePurchaseId ?\n                            <Notification id={deletePurchaseId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDonePurchase} type='delete'/>\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePurchaseFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PurchaseList = (props) => {\n    // Loading Logic if tasks not fetched\n    const purchase = useSelector(state => select.getPurchaseList(state, props))\n    const dispatch = useDispatch()\n    const addPurchaseClick = () => {\n        props.history.push('/purchase/create')\n    }\n\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n\n    const fetchList = (values, resetForm) => {\n        console.log(values)\n        // dispatch(fetchPurchase('11/2019-01-01/2020-12-01'))\n        if(values.fromDt !== \"\" && values.toDt !== \"\"){\n            let fromDt = moment(values.fromDt),\n                toDt = moment(values.toDt);\n            if(toDt >= fromDt){\n                let linkCreate = values.party === \"\" ? 0+\"/\"+values.fromDt+\"/\"+values.toDt : 0+\"/\"+values.party+\"/\"+values.fromDt+\"/\"+values.toDt\n                dispatch(fetchPurchase(linkCreate))\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }\n    }\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={5}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Purchase List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={11} floated={'right'} align='right'>\n                        <Formik id=\"purchaseForm\" size=\"large\" width={10}\n                            initialValues={purchaseSearch()}\n                            onSubmit={(values, { resetForm }) => fetchList(values, resetForm)}\n                            render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                                <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={10} onSubmit={handleSubmit}>\n                                    <Form.Group widths={1}>\n                                        <Table style={{width: '100%'}} className='purchasetablePop' basic='very'>\n                                            <Table.Body>\n                                                <Table.Row>\n                                                    <Table.Cell style={{width: '20%', padding: '0px 10px'}} textAlign='right'>\n                                                        <PartySelect name=\"party\" isLabel={false} placeholder='Supplier' label=\" \" isSelection={true} type=''/>\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '20%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"fromDt\" label=' ' placeholder={'From Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '20%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"toDt\" label=' ' placeholder={'To Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '40%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNList\" color='vk'>\n                                                            Go<Icon name='arrow alternate circle right'/>\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addPurchaseClick()}>\n                                                            Add Purchase<Icon name='add' />\n                                                        </Button>\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            </Table.Body>\n                                        </Table>\n                                    </Form.Group>\n                                </Form>\n                            )}\n                        />\n                        <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                            <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                            <Modal.Content>\n                                <p>\n                                    {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : '')}\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} positive labelPosition='right' icon='checkmark' content='Okay'/>\n                            </Modal.Actions>\n                        </Modal>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell>Bill No.</Table.HeaderCell>\n                        <Table.HeaderCell>Supplier</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Bill Period</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>FAT(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>SNF(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>AVG(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Addi(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Dedu(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                        <Table.HeaderCell>Reg(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Sour(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {Object.keys(purchase).map((key, index) =>\n                        <Purchase purchase={purchase[key]} key={purchase[key].id} index={index} />)}\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PurchaseList;\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getPartyObjById } from '../data/selectors'\r\nimport { Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { getGroupById } from '../../group/data/selectors'\r\nimport { getBankById } from '../../bank/data/selectors'\r\n\r\n\r\nconst PartyDisplayView = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const partyObj = useSelector(state => getPartyObjById(state, props.partyId))\r\n    const group = useSelector(state => getGroupById(state, partyObj ? partyObj.groupMaster ? partyObj.groupMaster.id : 0 : 0))\r\n    const bank = useSelector(state => getBankById(state, partyObj ? partyObj.bankMaster ? partyObj.bankMaster.id : 0 : 0))\r\n\r\n    return (\r\n        <Modal size='large' closeIcon open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={() => setDisplayStatus(true)}><Icon name='eye' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Details</Modal.Header>\r\n            <Modal.Content>\r\n                {partyObj ?\r\n                    <Table>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.plantNo}\r\n                                </Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={3} style={{ width: '60%' }}>\r\n                                    {partyObj.plantName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.address}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.phone}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {bank ? bank.bankName === undefined ? '' : bank.bankName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyBankAccNo}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.balance}\r\n                                </Table.Cell>\r\n                                <Table.Cell colSpan={4} style={{ width: '60%' }}>\r\n                                    <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.nickName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {group ? group.groupName === undefined ? '' : group.groupName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    : null}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PartyDisplayView;","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst TypeTxnSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Flush\",\r\n        value : \"Flush\",\r\n        text : \"Flush\"\r\n    },{\r\n        key : \"Lean\",\r\n        value : \"Lean\",\r\n        text : \"Lean\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        setField(name, values)\r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TypeTxnSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport store from 'store2'\r\n    \r\n\r\nconst ShiftSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Morning\",\r\n        value : \"Morning\",\r\n        text : \"Morning\"\r\n    },{\r\n        key : \"Evening\",\r\n        value : \"Evening\",\r\n        text : \"Evening\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        store.session(\"getShift\", values)\r\n        console.log(\"session--------\", store.session(\"getShift\"))\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, setField: setField, setValue: store.session(\"getShift\") }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShiftSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst QualitySelect = ({ name, isTxn, isLabel, label, isSelection, disabled }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Good\",\r\n        value : \"Good\",\r\n        text : \"Good\"\r\n    },{\r\n        key : \"Bad\",\r\n        value : \"Bad\",\r\n        text : \"Bad\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, isDisable: disabled }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default QualitySelect;\r\n","import { startsWith, cloneDeep } from 'lodash'\n\nexport const getIsFetchingCombination = (state, props) => state.combination.params.isFetching\nexport const getIsCombinationFetched = (state, props) => state.combination.params.combinationFetched\nexport const getSavedCombinationId = (state, props) => state.combination.params.savedCombinationId\nexport const getCombinationList = (state, prop) => state.combination.byId\nexport const getCombinationById = (state, id) => state.combination.byId[id]\nexport const getNotification = (state, id) => state.combination.notifications[id]\n\nexport const getCombination = (state, id) => {\n    let obj = cloneDeep(state.combination.byId[id])\n    return obj\n}\n\nexport const getCombinationParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/combination/create')){ \n        params.title = state.combination.params.createTitle\n        params.submitButtonText = state.combination.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/combination/edit/')){ \n        params.title = state.combination.params.editTitle\n        params.submitButtonText = state.combination.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getVdetailsObj } from '../data/selectors'\r\nimport { Form, Button, Modal, Table, Checkbox } from 'semantic-ui-react';\r\nimport { Formik, Field, Form as FormikForm } from 'formik';\r\nimport { FormikAmountComponent, FormikTextAreaComponent, FormikDateComponent } from '../../../utilities/formUtils'\r\nimport TypeTxnSelect from './typeTxnSelect'\r\nimport ShiftSelect from './shiftSelect'\r\nimport QualitySelect from './qualitySelect'\r\nimport store from 'store2'\r\nimport { getMilkRatesList } from '../../milkRates/data/selectors'\r\nimport { getStandardList } from '../../standard/data/selectors'\r\nimport { getCombinationById } from '../../combination/data/selectors'\r\n\r\nimport moment from 'moment'\r\n\r\nconst AddQuickVdetails = ({ setItemObject, setNextDate, nextDate, index, voucherObj, name, setField, values, ...props }) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [modalState, setModalState] = useState({ isOpen: false, keyWord: '' })\r\n    const [netQty, setNetQty] = useState(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n    const [isAuto, setIsAuto] = useState(false)\r\n    const [isCLRhas, setIsCLRhas] = useState(false)\r\n    const [popNextDate, setPopNextDate] = useState(nextDate)\r\n\r\n    const combination = useSelector(state => getCombinationById(state, 1))\r\n    const vdetails = useSelector(state => getVdetailsObj(state, voucherObj, index, store.get(\"setIndex\"), combination))\r\n    const milkRates = useSelector(state => getMilkRatesList(state, props))\r\n    const standard = useSelector(state => getStandardList(state, props))\r\n\r\n    useEffect(() => {\r\n        if (index === \"y\") {\r\n            setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n            setIsCLRhas(vdetails ? vdetails.clrP === \"\" || vdetails.clrP === 0 ? false : true : false)\r\n        }\r\n    }, [vdetails])\r\n\r\n    const saveItems = (value, resetForm) => {\r\n        let flag = false,\r\n            qty = value.qty === undefined ? 0 : value.qty === \"\" ? 0 : value.qty,\r\n            rejectQty = value.rejectedQty === undefined ? 0 : value.rejectedQty === \"\" ? 0 : value.rejectedQty,\r\n            sourQty = value.sourQty === undefined ? 0 : value.sourQty === \"\" ? 0 : value.sourQty,\r\n            milkPrice = value.milkPrice === undefined ? 0 : value.milkPrice === \"\" ? 0 : value.milkPrice\r\n        if (qty === 0 && rejectQty === 0 && sourQty === 0) {\r\n            flag = false\r\n            setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n        } else {\r\n            if (qty !== 0) {\r\n                if (milkPrice === 0) {\r\n                    flag = false\r\n                    setModalState({ isOpen: true, keyWord: 'calculate' })\r\n                } else {\r\n                    flag = true\r\n                }\r\n            } else {\r\n                flag = true\r\n            }\r\n        }\r\n        if (flag) {\r\n            if (index === '') {\r\n                let new_date = moment(value.date, \"YYYY-MM-DD\").add('days', 1),\r\n                    day = new_date.format('DD'),\r\n                    month = new_date.format('MM'),\r\n                    year = new_date.format('YYYY')\r\n                setItemObject(values, value, setField)\r\n                if (isAuto) {\r\n                    store.session('getShift', value.shift)\r\n                } else {\r\n                    store.session('getShift', value.shift === \"Morning\" ? \"Evening\" : \"Morning\")\r\n                }\r\n                resetForm()\r\n                setNextDate(year + '-' + month + '-' + day)\r\n                setPopNextDate(year + '-' + month + '-' + day)\r\n            } else {\r\n                setItemObject(values, value, setField, store.get(\"setIndex\"))\r\n                setDisplayStatus(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeWindow = () => {\r\n        setDisplayStatus(false)\r\n        if (isAuto === false) {\r\n            store.session('getShift', null)\r\n        }\r\n    }\r\n\r\n    const onChangeQty = (values, setField) => {\r\n        setNetQty(values)\r\n        if (values === \"\" || values === 0) {\r\n            setField('clrP', '')\r\n            setField('fatP', '')\r\n            setField('snfP', '')\r\n            setField('fatQuality', '')\r\n            setField('snfQuality', '')\r\n            setField('fatRate', '')\r\n            setField('snfRate', '')\r\n            setField('kgFat', '')\r\n            setField('kgSnf', '')\r\n            setField('fatAmount', '')\r\n            setField('snfAmount', '')\r\n            setField('milkRate', '')\r\n            setField('milkPrice', '')\r\n        }\r\n    }\r\n\r\n    const onChangeCLR = (values, setField) => {\r\n        if (values === \"\" || values === 0) {\r\n            setIsCLRhas(false)\r\n        } else {\r\n            setIsCLRhas(true)\r\n            setField('snfP', '')\r\n\r\n        }\r\n    }\r\n\r\n    const getOpenPopup = () => {\r\n        setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n        setIsCLRhas(vdetails ? vdetails.clrP === \"\" || vdetails.clrP === 0 ? false : true : false)\r\n        let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n        setIsAuto(getAuto)\r\n        store.session('isAuto', getAuto)\r\n        let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : vdetails.shift\r\n        store.session('getShift', shiftGet)\r\n        setPopNextDate(nextDate)\r\n        if (index === \"y\") {\r\n            if (store.get(\"setIndex\") !== undefined && store.get(\"setIndex\") !== null) {\r\n                setDisplayStatus(true)\r\n            }\r\n        } else {\r\n            setDisplayStatus(true)\r\n        }\r\n    }\r\n\r\n    const setAutoTiming = (values, ischeck) => {\r\n        setIsAuto(ischeck)\r\n        store.session('isAuto', ischeck)\r\n        store.session('getShift', values.shift)\r\n    }\r\n\r\n    const calculateRate = (setField, values) => {\r\n        if (values.setStandard !== \"\" && values.setRate !== \"\") {\r\n            if (values.qty !== \"\" && values.qty !== 0) {\r\n                if (values.fatP !== \"\" && values.fatP !== 0) {\r\n                    if ((values.snfP !== undefined && values.snfP !== \"\" && values.snfP !== 0 && isCLRhas === false) || (isCLRhas === true && values.clrP !== undefined && values.clrP !== '' && values.clrP !== 0)) {\r\n                        let getStandard = values.setStandard\r\n                        let getMilkRate = values.setRate\r\n                        let standardObj = standard[getStandard]\r\n                        let milkRateObj = milkRates[getMilkRate]\r\n                        let qtyGet = values.qty\r\n                        let fat = values.fatP\r\n                        let clr = values.clrP\r\n                        let snf = isCLRhas === false ? values.snfP : ((parseFloat(clr) / 4) + (0.25 * parseFloat(fat)) + 0.44)\r\n                        if (isCLRhas) {\r\n                            setField('snfP', snf)\r\n                        }\r\n                        let fatType = parseFloat(fat) >= parseFloat(standardObj.goodFat) ? \"Good\" : \"Bad\"\r\n                        let snfType = parseFloat(snf) >= parseFloat(standardObj.goodSnf) ? \"Good\" : \"Bad\"\r\n                        setField('fatQuality', fatType)\r\n                        setField('snfQuality', snfType)\r\n                        let fatRate = fatType === \"Good\" ? milkRateObj.goodFat : milkRateObj.badFat\r\n                        let snfRate = fatType === \"Good\" ? milkRateObj.goodSnf : milkRateObj.badSnf\r\n                        setField('fatRate', fatRate)\r\n                        setField('snfRate', snfRate)\r\n                        let kgFat = (parseFloat(qtyGet) * parseFloat(fat)) / 100\r\n                        let kgSnf = (parseFloat(qtyGet) * parseFloat(snf)) / 100\r\n                        setField('kgFat', kgFat)\r\n                        setField('kgSnf', kgSnf)\r\n                        let fatAmt = parseFloat(kgFat) * parseFloat(fatRate)\r\n                        let snfAmt = parseFloat(kgSnf) * parseFloat(snfRate)\r\n                        setField('fatAmount', fatAmt)\r\n                        setField('snfAmount', snfAmt)\r\n                        let totalRs = parseFloat(fatAmt) + parseFloat(snfAmt)\r\n                        let milkRatePerKg = parseFloat(totalRs) / parseFloat(qtyGet)\r\n                        setField('milkRate', milkRatePerKg)\r\n                        setField('milkPrice', totalRs)\r\n                    } else {\r\n                        setModalState({ isOpen: true, keyWord: 'clrsnf' })\r\n                    }\r\n                } else {\r\n                    setModalState({ isOpen: true, keyWord: 'fatP' })\r\n                }\r\n            } else {\r\n                setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n            }\r\n        } else {\r\n            setModalState({ isOpen: true, keyWord: 'setDD' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal open={displayStatus} closeOnEscape={false} closeOnDimmerClick={false} trigger={<Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }} onClick={() => getOpenPopup()}>{index === '' ? 'Add' : 'Edit'}</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Details</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                    initialValues={vdetails}\r\n                    // validationSchema={itemsQuickSchema}\r\n                    onSubmit={(values, { resetForm }) => saveItems(values, resetForm)}\r\n                    render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                        <Form key={index} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                            <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                <Table.Body>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Standard</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeTxnSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Rate Name</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeTxnSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Supply Date</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"date\" label=' ' component={FormikDateComponent} setDateManually={popNextDate} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Checkbox label='Auto' checked={isAuto ? true : false} onChange={(e, { checked }) => setAutoTiming(values, checked)} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <ShiftSelect name=\"shift\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell colSpan='4' style={{ width: '100%', padding: '0px' }}>\r\n                                            <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                                <Table.Body>\r\n                                                    <Table.Row className=\"VInputPanel\">\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Qyantity</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '25%' }}>\r\n                                                            <Form.Group widths={2}>\r\n                                                                <Field name=\"qty\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeQty} />\r\n                                                            </Form.Group>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Quantity(R)</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <Field name=\"rejectedQty\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? false : true} />\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Quantity(S)</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <Field name=\"sourQty\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? false : true} />\r\n                                                        </Table.Cell>\r\n                                                    </Table.Row>\r\n                                                </Table.Body>\r\n                                            </Table>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Table style={{ width: '100%', margin: '0px' }}>\r\n                                <Table.Body>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">CLR</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"clrP\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeCLR} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Quality</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Rate / Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Total Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Amount</label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">Fat</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"fatP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <QualitySelect name=\"fatQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"fatRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"kgFat\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"fatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">SNF</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"snfP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : (isCLRhas === true ? true : false)} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <QualitySelect name=\"snfQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"snfRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"kgSnf\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"snfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell colSpan='2' style={{ width: '20%' }}>\r\n                                            <center><Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' disabled={netQty === \"\" || netQty === 0 ? true : false} onClick={() => { calculateRate(setFieldValue, values) }}>Calc Rate</Button></center>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Milk Rate / Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"milkRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Total Rs.</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"milkPrice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">Remarks</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell colSpan='3' style={{ width: '55%' }}>\r\n                                            <Field name=\"remarks\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 100, displayCount: false, height: 1 }} focus={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell colSpan='2' style={{ width: '40%' }}>\r\n                                            <div style={{ float: 'right' }}>\r\n                                                <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> {index === '' ? 'Add' : 'Update'} </Button>\r\n                                                <Button type='button' onClick={() => closeWindow()} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> Close </Button>\r\n                                            </div>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({ isOpen: false, keyWord: '' })}>\r\n                                <Modal.Header style={{ color: 'red' }}>Warning</Modal.Header>\r\n                                <Modal.Content>\r\n                                    <p>\r\n                                        {modalState.keyWord === 'calculate' ? 'Please enter details and calculate milk price' : (modalState.keyWord === 'anyqty' ? 'Please enter quantity' : (modalState.keyWord === \"setDD\" ? 'Please select Standard and Rate Name' : (modalState.keyWord === \"fatP\" ? 'Please enter FAT' : (modalState.keyWord === \"clrsnf\" ? 'Please enter CLR or SNF' : ''))))}\r\n                                    </p>\r\n                                </Modal.Content>\r\n                                <Modal.Actions>\r\n                                    <Button onClick={() => setModalState({ isOpen: false, keyWord: '' })} positive labelPosition='right' icon='checkmark' content='Okay' />\r\n                                </Modal.Actions>\r\n                            </Modal>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddQuickVdetails;","import React, { useState } from 'react'\r\nimport {Table, TableBody } from 'semantic-ui-react'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from 'moment'\r\nimport store from 'store2'\r\n\r\n\r\nexport const VdetailsNonEditable = ({\r\n  name, move, swap, push, insert, unshift, remove, pop, setField, // { name, value, onChange, onBlur }\r\n  form: { initialValues, values, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  ...props\r\n}) => {\r\n\r\n  let arrKeys = [];\r\n  const fieldName = name;\r\n  if (values[fieldName] && values[fieldName].length) {\r\n    arrKeys = Object.keys(values[fieldName]);\r\n  }\r\n\r\n  const [isActive, setIsActive] = useState(0)\r\n\r\n  const onclickRow = (index) => {\r\n    store.set(\"setIndex\", index)\r\n    setIsActive(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Table basic='very' selectable className='purchaseHead'>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell title=\"Date\">Date</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"Qty\">Qty</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"CLR\">CLR</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"FAT(%)\">FAT(%)</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"SNF(%)\">SNF(%)</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"KGFat\">KGFat</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"KGSNF\">KGSNF</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"FatRate\">FatRate</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"SnfRate\">SnfRate</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"FatAmt\">FatAmt</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"SnfAmt\">SnfAmt</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"MilkPrice\">MilkPrice</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"MilkRate\">MilkRate</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"R.Qty\">R.Qty</Table.HeaderCell>\r\n                    <Table.HeaderCell title=\"S.Qty\">S.Qty</Table.HeaderCell>\r\n                    <Table.HeaderCell width={3} title=\"Remarks\">Remarks</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <TableBody>\r\n            {values[fieldName] && values[fieldName].length > 0 ? (\r\n                arrKeys.map((index) => (\r\n                    <Table.Row key={`${fieldName}[${index}]`} active={isActive === index ? true : false} className=\"VInputPanel\" onClick={() => onclickRow(index)}>\r\n                        <Table.Cell>\r\n                            {moment(values[fieldName][index].date).format('DD-MM-YYYY')}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].qty ? parseFloat(values[fieldName][index].qty).toFixed(3) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].clrP ? parseFloat(values[fieldName][index].clrP).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].fatP ? parseFloat(values[fieldName][index].fatP).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].snfP ? parseFloat(values[fieldName][index].snfP).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].kgFat ? parseFloat(values[fieldName][index].kgFat).toFixed(3) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].kgSnf ? parseFloat(values[fieldName][index].kgSnf).toFixed(3) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].fatRate ? parseFloat(values[fieldName][index].fatRate).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].snfRate ? parseFloat(values[fieldName][index].snfRate).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].fatAmount ? parseFloat(values[fieldName][index].fatAmount).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].snfAmount ? parseFloat(values[fieldName][index].snfAmount).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].milkPrice ? parseFloat(values[fieldName][index].milkPrice).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].milkRate ? parseFloat(values[fieldName][index].milkRate).toFixed(2) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].rejectedQty ? parseFloat(values[fieldName][index].rejectedQty).toFixed(3) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].sourQty ? parseFloat(values[fieldName][index].sourQty).toFixed(3) : ''}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {values[fieldName][index].remarks}\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                    )\r\n                )) : null}\r\n            </TableBody>\r\n        </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VdetailsNonEditable;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikTextAreaComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddNotesCommon = ({setItemObject, name, setField, setValueFor, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addNotes = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.addNote)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' className='labelButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}>N</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Note</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                 //initialValues={vdetails}\r\n                // validationSchema={itemsQuickSchema}\r\n                onSubmit={(values, {resetForm}) => addNotes(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name='addNote' label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 3, value: setValueFor}} focus={true}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNotesCommon;","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPurchase, getPurchaseParams, getSavedPurchaseId, getNotification } from '../data/selectors'\nimport { createPurchase, editPurchase, setNotifyDonePurchase } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, FieldArray, Form as FormikForm } from 'formik'\nimport { FormikInputComponent, FormikDateComponent, FormikTextAreaComponent, FormikAmountComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\nimport PartySelect from '../../party/components/partySelect'\nimport PartyDisplayView from \"../../party/components/partyDisplayView\"\nimport AddQuickVdetails from './addQuickVdetails'\nimport VdetailsNonEditable from './vdetailsNonEditable'\nimport store from 'store2'\nimport AddNotesCommon from './addNotePopUpCommon'\nimport { getMiscListByName } from '../../misc/data/selectors'\nimport moment from 'moment'\n\n\nconst PurchaseForm = (props) => {\n\n    const purchase = useSelector(state => getPurchase(state, props))\n    const savedPurchaseId = useSelector(state => getSavedPurchaseId(state, props))\n    const params = useSelector(state => getPurchaseParams(state, props))\n    const commisionMisc = useSelector(state => getMiscListByName(state, 'Commision'))\n    const headLoadMisc = useSelector(state => getMiscListByName(state, 'Head Load'))\n    const sourMilkMisc = useSelector(state => getMiscListByName(state, 'Sour Milk'))\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [nextDate, setNextDate] = useState()\n\n    const [partyId, setPartyId] = useState(0)\n\n    useEffect(() => {\n        store.remove(\"setIndex\")\n    }, [])\n\n    const savePurchase = (values, resetForm) => {\n        if(values.billNo !== undefined && values.billNo !== '' && values.billNo !== 0){\n            if(values.billDate !== undefined && values.billDate !== '' && values.billDate !== 0){\n                if(values.periodFromDate !== undefined && values.periodFromDate !== '' && values.periodFromDate !== 0){\n                    if(values.periodToDate !== undefined && values.periodToDate !== '' && values.periodToDate !== 0){\n                        let fromDt = moment(values.periodFromDate),\n                            toDt = moment(values.periodToDate);\n                        if(toDt >= fromDt){\n                            if(values.partyM !== undefined && values.partyM !== '' && values.partyM !== 0){\n                                if(Object.keys(values.purchaseVoucherDetails).length > 0){\n                                    values.partyMaster = {id: values.partyM}\n                                    delete values.partyM\n                                    if (props.match.path === '/purchase/create') {\n                                        dispatch(createPurchase(values))\n                                        resetForm()\n                                        setNextDate(null)\n                                    }\n                                    if (props.match.path === '/purchase/edit/:id') {\n                                        dispatch(editPurchase(values))\n                                        props.history.push(`/purchase/list`)\n                                    }\n                                }else{\n                                    setModalState({isOpen: true, keyWord: 'Please enter purchase details row'})\n                                }\n                            }else{\n                                setModalState({isOpen: true, keyWord: 'Please select Supplier'})\n                            }\n                        }else{\n                            setModalState({isOpen: true, keyWord: 'Period To Date should be greater than Period From Date'})\n                        }\n                    }else{\n                        setModalState({isOpen: true, keyWord: 'Please enter Period To Date'})\n                    }\n                }else{\n                    setModalState({isOpen: true, keyWord: 'Please enter Period From Date'})\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'Please enter Bill Date'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'Please enter Bill Number'})\n        }\n    }\n\n    function getVdArr (setField) {\n        return <FieldArray name='purchaseVoucherDetails' component={VdetailsNonEditable} setField={setField}/>\n    }\n\n    const setItemObjectAdd = (values, value, setField) => {\n        values.purchaseVoucherDetails.push(value)\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectEdit = (values, value, setField, index) => {\n        values.purchaseVoucherDetails[index] = value\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const removeObject = (e, setField, values) => {\n        if(store.get(\"setIndex\") !== null && store.get(\"setIndex\") !== undefined && store.get(\"setIndex\") !== ''){\n            delete values.purchaseVoucherDetails[store.get(\"setIndex\")]\n            setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n            callSetAllData(setField, values)\n            store.remove(\"setIndex\")\n        }\n    }\n\n    const callSetAllData = (setField, values) => {\n        let totalRejectedQty = 0\n        let totalSourQty = 0\n        let totalKgFat = 0\n        let totalKgSnf = 0\n        let totalFatAmt = 0\n        let totalSnfAmt = 0\n        let totalMilkprice = 0\n        let ratePerKg = 0\n        let totalQty = 0\n        let totalGoodFat = 0\n        let totalGoodSnf = 0\n        let totalBadFat = 0\n        let totalBadSnf = 0\n        let pDetails = values.purchaseVoucherDetails\n        if(Object.keys(pDetails).length > 0){\n            for(let i = 0; i < Object.keys(pDetails).length; i++){\n                if(pDetails[i]){\n                    totalRejectedQty = parseFloat(totalRejectedQty) + parseFloat(pDetails[i].rejectedQty === \"\" ? 0 : pDetails[i].rejectedQty)\n                    totalSourQty = parseFloat(totalSourQty) + parseFloat(pDetails[i].sourQty === \"\" ? 0 : pDetails[i].sourQty)\n                    totalKgFat = parseFloat(totalKgFat) + parseFloat(pDetails[i].kgFat === \"\" ? 0 : pDetails[i].kgFat)\n                    totalKgSnf = parseFloat(totalKgSnf) + parseFloat(pDetails[i].kgSnf === \"\" ? 0 : pDetails[i].kgSnf)\n                    totalFatAmt = parseFloat(totalFatAmt) + parseFloat(pDetails[i].fatAmount === \"\" ? 0 : pDetails[i].fatAmount)\n                    totalSnfAmt = parseFloat(totalSnfAmt) + parseFloat(pDetails[i].snfAmount === \"\" ? 0 : pDetails[i].snfAmount)\n                    totalMilkprice = parseFloat(totalMilkprice) + parseFloat(pDetails[i].milkPrice === \"\" ? 0 : pDetails[i].milkPrice)\n                    totalQty = parseFloat(totalQty) + parseFloat(pDetails[i].qty === \"\" ? 0 : pDetails[i].qty)\n                    totalGoodFat = parseFloat(totalGoodFat) + parseFloat(pDetails[i].fatQuality === \"Good\" ? pDetails[i].kgFat : 0)\n                    totalGoodSnf = parseFloat(totalGoodSnf) + parseFloat(pDetails[i].snfQuality === \"Good\" ? pDetails[i].kgSnf : 0)\n                    totalBadFat = parseFloat(totalBadFat) + parseFloat(pDetails[i].fatQuality === \"Bad\" ? pDetails[i].kgFat : 0)\n                    totalBadSnf = parseFloat(totalBadSnf) + parseFloat(pDetails[i].snfQuality === \"Bad\" ? pDetails[i].kgSnf : 0)\n\n                }\n            }\n            ratePerKg = parseFloat(totalMilkprice) / parseFloat(totalQty)\n        }\n        setField('totalRejected', totalRejectedQty)\n        setField('totalSour', totalSourQty)\n        setField('totalKgfat', totalKgFat)\n        setField('totalKgsnf', totalKgSnf)\n        setField('totalFatAmount', totalFatAmt)\n        setField('totalSnfAmount', totalSnfAmt)\n        setField('totalQty', totalQty)\n        setField('totalMilkprice', totalMilkprice)\n        setField('totalAvgRateKg', ratePerKg)\n        setField('totalAvgKg', totalQty)\n        setField('totalGoodFat', totalGoodFat)\n        setField('totalGoodSnf', totalGoodSnf)\n        setField('totalBadFat', totalBadFat)\n        setField('totalBadSnf', totalBadSnf)\n        values.totalRejected = totalRejectedQty\n        values.totalSour = totalSourQty\n        values.totalKgfat = totalKgFat\n        values.totalKgsnf = totalKgSnf\n        values.totalFatAmount = totalFatAmt\n        values.totalSnfAmount = totalSnfAmt\n        values.totalQty = totalQty\n        values.totalMilkprice = totalMilkprice\n        values.totalAvgRateKg = ratePerKg\n        values.totalAvgKg = totalQty\n        values.totalGoodFat = totalGoodFat\n        values.totalGoodSnf = totalGoodSnf\n        values.totalBadFat = totalBadFat\n        values.totalBadSnf = totalBadSnf\n        nowSetTotalValue(values, setField)\n    }\n\n    const totalAdditionAndDeduction = (val, index, setField) => {\n        let purchaseV = val\n        let commissionValue = purchaseV.commissionValue && purchaseV.commissionValue !== \"\" ? purchaseV.commissionValue : 0\n        let lateArrivalValue = purchaseV.lateArrivalValue && purchaseV.lateArrivalValue !== \"\" ? purchaseV.lateArrivalValue : 0\n        let mtevalue = purchaseV.mtevalue && purchaseV.mtevalue !== \"\" ? purchaseV.mtevalue : 0\n        let cattleFeedValue = purchaseV.cattleFeedValue && purchaseV.cattleFeedValue !== \"\" ? purchaseV.cattleFeedValue : 0\n        let splIncentiveValue = purchaseV.splIncentiveValue && purchaseV.splIncentiveValue !== \"\" ? purchaseV.splIncentiveValue : 0\n        let headLoadValue = purchaseV.headLoadValue && purchaseV.headLoadValue !== \"\" ? purchaseV.headLoadValue : 0\n        let vaccineValue = purchaseV.vaccineValue && purchaseV.vaccineValue !== \"\" ? purchaseV.vaccineValue : 0\n        let fodderValue = purchaseV.fodderValue && purchaseV.fodderValue !== \"\" ? purchaseV.fodderValue : 0\n        let testEquipMentValue = purchaseV.testEquipMentValue && purchaseV.testEquipMentValue !== \"\" ? purchaseV.testEquipMentValue : 0\n        let sourMilkValue = purchaseV.sourMilkValue && purchaseV.sourMilkValue !== \"\" ? purchaseV.sourMilkValue : 0\n        let cowLoanValue = purchaseV.cowLoanValue && purchaseV.cowLoanValue !== \"\" ? purchaseV.cowLoanValue : 0\n        let shareValue = purchaseV.shareValue && purchaseV.shareValue !== \"\" ? purchaseV.shareValue : 0\n        let arrearValue = purchaseV.arrearValue && purchaseV.arrearValue !== \"\" ? purchaseV.arrearValue : 0\n        let addAdvanceValue = purchaseV.addAdvanceValue && purchaseV.addAdvanceValue !== \"\" ? purchaseV.addAdvanceValue : 0\n        let deductAdvanceValue = purchaseV.deductAdvanceValue && purchaseV.deductAdvanceValue !== \"\" ? purchaseV.deductAdvanceValue : 0\n        let deductOthersValue = purchaseV.deductOthersValue && purchaseV.deductOthersValue !== \"\" ? purchaseV.deductOthersValue : 0\n        let adjustmentValue = purchaseV.adjustmentValue && purchaseV.adjustmentValue !== \"\" ? purchaseV.adjustmentValue : 0\n        let addOthersValue = purchaseV.addOthersValue && purchaseV.addOthersValue !== \"\" ? purchaseV.addOthersValue : 0\n        let totalAddition = parseFloat(commissionValue) + parseFloat(lateArrivalValue) + parseFloat(splIncentiveValue) + parseFloat(headLoadValue) + parseFloat(testEquipMentValue) + parseFloat(sourMilkValue) + parseFloat(arrearValue) + parseFloat(addAdvanceValue) + parseFloat(adjustmentValue) + parseFloat(addOthersValue)\n        let totalDeduction = parseFloat(mtevalue) + parseFloat(cattleFeedValue) + parseFloat(vaccineValue) + parseFloat(fodderValue) + parseFloat(cowLoanValue) + parseFloat(shareValue) + parseFloat(deductAdvanceValue) + parseFloat(deductOthersValue)\n        setField('totalAdditions', totalAddition)\n        setField('totalDeductions', totalDeduction)\n        val.totalAdditions = totalAddition\n        val.totalDeductions = totalDeduction\n        nowSetTotalValue(val, setField)\n    }\n\n    const additionOnChange = (val, index, setField) => {\n        nowSetTotalValue(val, setField)\n    }\n\n    const nowSetTotalValue = (val, setField) => {\n        let milkPrice = val.totalMilkprice !== \"\" ? val.totalMilkprice : 0\n        let totalAdditions = val.totalAdditions !== \"\" ? val.totalAdditions : 0\n        let totalDeductions = val.totalDeductions !== \"\" ? val.totalDeductions : 0\n        let adjustment = val.adjustment !== \"\" ? val.adjustment : 0\n        let netAmount = ((parseFloat(milkPrice) + parseFloat(totalAdditions)) - parseFloat(totalDeductions))\n        setField('netAmount', netAmount)\n        let billTotal = parseFloat(netAmount) + parseFloat(adjustment)\n        setField('billTotal', billTotal)\n        val.netAmount = netAmount\n        val.billTotal = billTotal\n    }\n\n    const computeCommission = (values, setField) => {\n        let commisionValue = 0\n        if(commisionMisc){\n            let commissionVal = commisionMisc.value\n            if(commisionMisc.operationOn === \"QTY(KG)\"){\n                let qty = values.totalQty === \"\" ? 0 : values.totalQty\n                commisionValue = parseFloat(qty) * parseFloat(commissionVal)\n            }else if(commisionMisc.operationOn === \"Milk Price\"){\n                let milkP = values.totalMilkprice === \"\" ? 0 : values.totalMilkprice\n                commisionValue = parseFloat(milkP) * parseFloat(commissionVal)\n            }else if(commisionMisc.operationOn === \"FAT/SNF(KG)\"){\n                let kgFatSNF = parseFloat(values.totalKgfat) + parseFloat(values.totalKgsnf)\n                commisionValue = parseFloat(kgFatSNF) * parseFloat(commissionVal)\n            } \n        }\n        setField('commissionValue', commisionValue)\n        values.commissionValue = commisionValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeHeadLoad = (values, setField) => {\n        let headLoadValue = 0\n        if(headLoadMisc){\n            let headLoadVal = headLoadMisc.value\n            if(headLoadMisc.operationOn === \"QTY(KG)\"){\n                let qty = values.totalQty === \"\" ? 0 : values.totalQty\n                headLoadValue = parseFloat(qty) * parseFloat(headLoadVal)\n            }else if(headLoadMisc.operationOn === \"Milk Price\"){\n                let milkP = values.totalMilkprice === \"\" ? 0 : values.totalMilkprice\n                headLoadValue = parseFloat(milkP) * parseFloat(headLoadVal)\n            }else if(headLoadMisc.operationOn === \"FAT/SNF(KG)\"){\n                let kgFatSNF = parseFloat(values.totalKgfat) + parseFloat(values.totalKgsnf)\n                headLoadValue = parseFloat(kgFatSNF) * parseFloat(headLoadVal)\n            } \n        }\n        setField('headLoadValue', headLoadValue)\n        values.headLoadValue = headLoadValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n    \n    const computeSourMilk = (values, setField) => {\n        let sourMilkValue = 0\n        if(sourMilkMisc){\n            let sourMilkVal = sourMilkMisc.value\n            let qty = values.totalSour === \"\" ? 0 : values.totalSour\n            sourMilkValue = parseFloat(qty) * parseFloat(sourMilkVal)\n        }\n        setField('sourMilkValue', sourMilkValue)\n        values.sourMilkValue = sourMilkValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='txnContainer'>\n                <Formik id=\"purchaseForm\" size=\"large\" width={5}\n                    initialValues={purchase}\n                    onSubmit={(values, { resetForm }) => savePurchase(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Bill Id </label></Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className='boldLabel'>Auto</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Bill No </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Date </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><label className=\"boldText\">Period </label></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodFromDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}><center><label className=\"boldText\">to</label></center></Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodToDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '10%'}}><label className=\"boldText\">Supplier </label></Table.Cell>\n                                        <Table.Cell style={{width: '21%'}}>\n                                            <PartySelect name=\"partyM\" isLabel={false} label=\" \" isSelection={true} setState={setPartyId} userProps={{setField: setFieldValue, setName: 'partyM'}} type=''/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            {partyId !== 0 ? \n                                            <PartyDisplayView partyId={partyId}/>\n                                            :\n                                            <Button type='button' icon size='small' color='vk' title='Add Bank' style={{visibility: 'hidden'}}><Icon name='eye'/></Button>\n                                            }\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Rejected</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalRejected\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Sour</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            <Field name=\"totalSour\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectAdd} index={''}  setField={setFieldValue} values={values} setNextDate={setNextDate} nextDate={nextDate ? nextDate : values.periodFromDate}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <AddQuickVdetails setItemObject={setItemObjectEdit} index={'y'} voucherObj={values} setField={setFieldValue} values={values}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='google plus' style={{float: 'right'}} onClick={(e) => removeObject(e, setFieldValue, values)}>Delete</Button>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '100%', padding: '0px'}}>\n                                            <div className='outScrollX' style={{width: '100%', height: '150px'}}>\n                                                <div className='outScrollY' style={{width: '100%', height: '150px'}}>                                                    \n                                                    <Form.Group>\n                                                        {getVdArr()}\n                                                    </Form.Group>\n                                                </div>\n                                            </div>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} className='purchasetable' fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgfat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalKgsnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">Fat(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalFatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">SNF(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalSnfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <label className=\"boldText\">QTY(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '8%'}}>\n                                            <Field name=\"totalQty\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Milk Price</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalMilkprice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}} className='rightBorder'>\n                                            <center><label className=\"boldText\">Addition</label></center>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}>\n                                            <center><label className=\"boldText\">Deduction</label></center>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Commision\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"commissionValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeCommission(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='commissionNarration' setField={setFieldValue} setValueFor={values.commissionNarration === \"\" ? (commisionMisc ? commisionMisc.description+\" \"+'' : '') : values.commissionNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Late Arrival\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"lateArrivalValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='lateArrivalNarration' setField={setFieldValue} setValueFor={values.lateArrivalNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            M.T.E\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"mtevalue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='mtenarration' setField={setFieldValue} setValueFor={values.mtenarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cattle Feed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cattleFeedValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cattleFeedNarration' setField={setFieldValue} setValueFor={values.cattleFeedNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            S.Incentive\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"splIncentiveValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='splIncentiveNarration' setField={setFieldValue} setValueFor={values.splIncentiveNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Head Load\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"headLoadValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeHeadLoad(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='headLoadNarration' setField={setFieldValue} setValueFor={values.headLoadNarration === \"\" ? (headLoadMisc ? headLoadMisc.description+\" \"+'' : '') : values.headLoadNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Viccine\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"vaccineValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='vaccineNarration' setField={setFieldValue} setValueFor={values.vaccineNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Fodder Seed\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"fodderValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='fodderNarration' setField={setFieldValue} setValueFor={values.fodderNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Testing Eqp\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"testEquipMentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='testEquipMentNarration' setField={setFieldValue} setValueFor={values.testEquipMentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Sour Milk\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"sourMilkValue\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeSourMilk(values, setFieldValue)}>\n                                                <Icon name='question'/>\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='sourMilkNarration' setField={setFieldValue} setValueFor={values.sourMilkNarration === \"\" ? (sourMilkMisc ? sourMilkMisc.description+\" \"+values.totalSour : values.totalSour) : values.sourMilkNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Cow Loan\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"cowLoanValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='cowLoanNarration' setField={setFieldValue} setValueFor={values.cowLoanNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Share\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"shareValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='shareNarration' setField={setFieldValue} setValueFor={values.shareNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Arrear\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"arrearValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='arrearNarration' setField={setFieldValue} setValueFor={values.arrearNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addAdvanceNarration' setField={setFieldValue} setValueFor={values.addAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductAdvanceNarration' setField={setFieldValue} setValueFor={values.deductAdvanceNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"deductOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='deductOthersNarration' setField={setFieldValue} setValueFor={values.deductOthersNarration}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Adjustment\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"adjustmentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{width: '4%'}}>\n                                            <AddNotesCommon name='adjustmentNarration' setField={setFieldValue} setValueFor={values.adjustmentNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '14%'}}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '7%'}}>\n                                            <Field name=\"addOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>                                        \n                                        <Table.Cell textAlign='right' style={{width: '4%'}} className='rightBorder'>\n                                            <AddNotesCommon name='addOthersNarration' setField={setFieldValue} setValueFor={values.addOthersNarration}/>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '50%'}}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>                            \n                            <Table style={{width: '100%'}} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Rate/Kg\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgRateKg\" label=' ' component={FormikAmountComponent} isReadonly={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Good\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalGoodSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Additions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAdditions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Net Amount\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"netAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            <label className=\"boldText\">Avg(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalAvgKg\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '5%'}}>\n                                            Bad\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '12%'}}>\n                                            <Field name=\"totalBadSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Deductions\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"totalDeductions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            Adjustments\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"adjustment\" label=' ' component={FormikAmountComponent} compute={additionOnChange}/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '6%'}}>\n                                            Notes\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{width: '69%'}}>\n                                            <Field name=\"notes\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 1}} focus={true}/>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '10%'}}>\n                                            <label className=\"boldText\">Bill Total</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '15%'}}>\n                                            <Field name=\"billTotal\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <div className=\"stickeyDiv\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{float: 'right'}}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/purchase/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            {savedPurchaseId && savedPurchaseId !== 0 ? \n                            <Notification id={savedPurchaseId} notifySelector={getNotification} notifyDoneAction={setNotifyDonePurchase} type='save'/>\n                            :\n                            null}\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} positive labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PurchaseForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport PurchaseList from \"./components/purchaseList\"\nimport PurchaseForm from \"./components/purchaseForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Purchase = () => {\n    return (\n        <Container>\n            <Route path=\"/purchase/list\" component={withRouter(PurchaseList)} />\n            <Route path=\"/purchase/edit/:id\" component={PurchaseForm} />\n            <Route path=\"/purchase/create\" component={PurchaseForm} />\n        </Container>\n    )\n};\n\nexport default Purchase;\n\n","export const POST_REGISTER_SUMMARY = 'POST_REGISTER_SUMMARY'\nexport const POST_REGISTER_ALLPARTY = 'POST_REGISTER_ALLPARTY'\nexport const POST_REGISTER_SINGLEPARTY = 'POST_REGISTER_SINGLEPARTY'\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikMultiSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst MultiPartySelect = ({ name, isTxn, isLabel, label, isSelection, setState }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikMultiSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MultiPartySelect;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../data/model'\nimport { postSummaryDetails, postAllPartyDetails, postSinglePartyDetails } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikDateComponent, FormikCheckBoxComponent } from '../../../utilities/formUtils'\nimport MultiPartySelect from '../../party/components/multiPartySelect'\nimport moment from 'moment'\n\n\nconst RegisterForm = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n\n    const postRegister = (values, resetForm) => {\n        if(values.fromDate !== \"\" && values.toDate !== \"\"){\n            let fromDt = moment(values.fromDate),\n                toDt = moment(values.toDate);\n            if(toDt >= fromDt){\n                if(values.type === \"Summary\"){\n                    let summaryData = values.fromDate+\"/\"+values.toDate\n                    dispatch(postSummaryDetails(summaryData))\n                    resetForm()\n                }else if(values.type === \"Detailed\"){\n                    if(values.partytype === \"All Suppliers\"){\n                        let allPartyData = values.fromDate+\"/\"+values.toDate\n                        dispatch(postAllPartyDetails(allPartyData))\n                        resetForm()\n                    }else if(values.partytype === \"Selected Supplier\"){\n                        values.partyid = values.partyid.toString()\n                        let singlePartyData = values.partyid+\"/\"+values.fromDate+\"/\"+values.toDate\n                        dispatch(postSinglePartyDetails(singlePartyData))\n                        resetForm()\n                    }\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }        \n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Milk Purchase Register</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"registerForm\" size=\"large\" width={5}\n                    initialValues={register()}\n                    onSubmit={(values, { resetForm }) => postRegister(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    {console.log(values)}\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">From Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"fromDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">To Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"toDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Summary'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Detailed'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    {values.type === \"Detailed\" ? \n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'All Suppliers'}} defaultCheck={true} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'Selected Supplier'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                    {values.partytype === \"Selected Supplier\" ? \n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}>\n                                            <label className=\"boldText\">Party Name: </label>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='3' style={{width: '80%'}}>\n                                            <MultiPartySelect name=\"partyid\" isLabel={false} label=\" \" isSelection={true} type=''/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                </Table.Body>\n                            </Table>\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                Print\n                                <Icon name='print'/>\n                            </Button>\n                            <br/><br/><br/><br/>\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : '')}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} positive labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default RegisterForm;","import * as type from './types'\n\nexport function postSummaryDetails(register) {\n    return {\n        type: type.POST_REGISTER_SUMMARY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postAllPartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postSinglePartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n","\nexport const register =  () => ({\n    \"fromDate\": \"\",\n    \"toDate\": \"\",\n    \"type\": \"\",\n    \"partytype\": \"\",\n    \"partyid\": \"\"\n})\n\n","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport RegisterForm from \"./components/register\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Register = () => {\n    return (\n        <Container>\n            <Route path=\"/register/list\" component={withRouter(RegisterForm)} />\n        </Container>\n    )\n};\n\nexport default Register;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const combination =  () => ({\n    \"setStandard\": \"\",\n    \"setRate\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const combinationSchema = Yup.object().shape({\n    setStandard: Yup.string()\n        .required('This is a Required Field'),\n\n    setRate: Yup.string()\n        .required('This is a Required Field'),\n});\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { combinationSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Form as FormikForm } from 'formik'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editCombination, setNotifyDoneCombination } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst CombinationForm = (props) => {\r\n    \r\n    const combination = useSelector(state => select.getCombination(state, '1'))\r\n    const savedCombinationId = useSelector(state => select.getSavedCombinationId(state, props))\r\n    const dispatch = useDispatch()\r\n    const saveCombination = (values, resetForm) => {\r\n        dispatch(editCombination(values))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Combination</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={combination}\r\n                    validationSchema={combinationSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveCombination(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Standard Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Milk Rate Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedCombinationId && savedCombinationId !== 0 ? \r\n                            <Notification id={savedCombinationId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneCombination} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CombinationForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport CombinationForm from \"./components/combinationForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Combination = () => {\n    return (\n        <Container>\n            <Route path=\"/combination/update\" component={withRouter(CombinationForm)} />\n        </Container>\n    )\n};\n\nexport default Combination;\n\n","import React from 'react';\nimport {Route} from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter} from 'connected-react-router'\nimport { history } from '../../configureStore'\nimport { menu } from './menu'\n\nimport Party from '../party/index'\nimport Bank from '../bank/index'\nimport Group from '../group/index'\nimport MilkRates from '../milkRates/index'\nimport Standard from '../standard/index'\nimport Misc from '../misc/index'\nimport FinYear from '../finyear/index'\nimport Purchase from '../purchase/index'\nimport Register from '../register/index'\nimport Combination from '../combination/index'\n\nimport 'semantic-ui-less/semantic.less'\nimport { Container, Dropdown, Menu, Header, Icon } from 'semantic-ui-react'\n\nconst App = ({ stores }) => (\n  <Provider store = {stores}>\n    <ConnectedRouter history={history} >\n      <Container className=\"paddingTopOnly widhtSection\">\n        <Menu attached='top'>\n          <Menu.Item as={Link} to=\"/\"><Icon name='home'/></Menu.Item>\n          <Dropdown item icon='list' simple>\n            <Dropdown.Menu>\n              { menu.map((m, index) => {\n                return(\n                    <Dropdown.Item>\n                      <Icon name='dropdown' />\n                      <span className='text'>{m.title}</span>\n                      <Dropdown.Menu>\n                        { m.submenu.map((s, sindex) => {\n                          return(\n                          <Dropdown.Item text={s.title} key={sindex} as={Link} to={s.list}/>\n                          )\n                        })}\n                      </Dropdown.Menu>\n                    </Dropdown.Item>\n                  )\n              })}\n            </Dropdown.Menu>    \n          </Dropdown>\n          <Menu.Menu position='right'>\n            <Container className='headerMenuRight'>\n              <Header as='h4' className=\"VerticalAlign topTen\" align='right'>Mayurakshi Co-operative Milk Producers' Union Ltd</Header>\n            </Container>\n            <Menu.Item as={Link} to=\"/\" onClick={() => window.location = \"http://localhost:8080/dairyfarm/logout\"}><Icon className=\"logoutRed\" name='power off'/></Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Route path=\"/party\" component={Party} />\n        <Route path=\"/bank\" component={Bank} />\n        <Route path=\"/group\" component={Group} />\n        <Route path=\"/milkRates\" component={MilkRates} />\n        <Route path=\"/standard\" component={Standard} />\n        <Route path=\"/misc\" component={Misc} />\n        <Route path=\"/finyear\" component={FinYear} />\n        <Route path=\"/purchase\" component={Purchase} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/combination\" component={Combination} />\n      </Container>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './modules/app/App';\nimport configureStore from './configureStore';\n\n\nimport './index.css';\n\n// Creating Store\nconst stores = configureStore()\nconst renderApp = () => ReactDOM.render(<App stores={stores}/>, document.getElementById('root'))\nrenderApp()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}