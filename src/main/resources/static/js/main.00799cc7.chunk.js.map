{"version":3,"sources":["serviceWorker.js","store/monitorReducers.js","store/logger.js","store/txnMiddleware.js","store/localStorage.js","utilities/parseDate.js","modules/party/data/model.js","modules/party/data/selectors.js","modules/party/data/types.js","modules/party/data/actions.js","modules/app/serverError.js","store/path.js","modules/party/data/sagas.js","modules/bank/data/model.js","modules/bank/data/selectors.js","modules/bank/data/types.js","modules/bank/data/actions.js","modules/bank/data/sagas.js","modules/group/data/model.js","modules/group/data/selectors.js","modules/group/data/types.js","modules/group/data/actions.js","modules/group/data/sagas.js","modules/finyear/data/types.js","modules/finyear/data/actions.js","modules/finyear/data/sagas.js","modules/standard/data/types.js","modules/standard/data/actions.js","modules/standard/data/sagas.js","modules/milkRates/data/types.js","modules/milkRates/data/actions.js","modules/milkRates/data/sagas.js","modules/purchase/data/types.js","modules/purchase/data/actions.js","modules/purchase/data/sagas.js","modules/misc/data/types.js","modules/misc/data/actions.js","modules/misc/data/sagas.js","modules/register/data/sagas.js","modules/combination/data/types.js","modules/combination/data/actions.js","modules/combination/data/sagas.js","store/sagas.js","modules/party/data/reducers.js","modules/bank/data/reducers.js","modules/group/data/reducers.js","modules/finyear/data/reducers.js","modules/standard/data/reducers.js","modules/milkRates/data/reducers.js","modules/purchase/data/reducers.js","modules/misc/data/reducers.js","modules/combination/data/reducers.js","reducers.js","configureStore.js","modules/app/menu.js","utilities/notificationUtils.js","modules/party/components/partyList.js","utilities/dateUtils.js","utilities/formUtils.js","modules/party/components/plantSelect.js","modules/group/components/groupSelect.js","modules/bank/components/bankSelect.js","modules/group/components/groupPopup.js","modules/bank/components/bankPopup.js","modules/party/components/partyForm.js","modules/party/index.js","modules/bank/components/bankList.js","modules/bank/components/bankForm.js","modules/bank/index.js","modules/group/components/groupList.js","modules/group/components/groupForm.js","modules/group/index.js","modules/milkRates/data/model.js","modules/milkRates/data/selectors.js","modules/milkRates/components/typeSelect.js","modules/milkRates/components/milkRatesForm.js","modules/milkRates/index.js","modules/standard/data/model.js","modules/standard/data/selectors.js","modules/standard/components/typeSelect.js","modules/standard/components/standardForm.js","modules/standard/index.js","modules/misc/data/model.js","modules/misc/data/selectors.js","modules/misc/components/miscNameType.js","modules/misc/components/miscOperationType.js","modules/misc/components/miscForm.js","modules/misc/index.js","modules/finyear/data/model.js","modules/finyear/data/selectors.js","modules/finyear/components/finYearForm.js","modules/finyear/index.js","modules/purchase/data/selectors.js","modules/purchase/data/model.js","modules/party/components/partySelect.js","modules/purchase/components/purchaseList.js","modules/party/components/partyDisplayView.js","modules/purchase/components/typeTxnSelect.js","modules/purchase/components/shiftSelect.js","modules/purchase/components/qualitySelect.js","modules/combination/data/selectors.js","modules/purchase/components/addQuickVdetails.js","modules/purchase/components/vdetailsNonEditable.js","modules/purchase/components/addNotePopUpCommon.js","modules/purchase/components/addHeadLoadPopup.js","modules/purchase/components/purchaseForm.js","modules/purchase/index.js","modules/register/data/types.js","modules/party/components/multiPartySelect.js","modules/register/components/register.js","modules/register/data/actions.js","modules/register/data/model.js","modules/register/index.js","modules/combination/data/model.js","modules/combination/components/typeSelect.js","modules/combination/components/combinationForm.js","modules/combination/index.js","modules/app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","loggerMiddleware","store","next","group","type","info","result","getState","groupEnd","txnMiddleware","prevState","nextState","hasOwnProperty","txnid","v4","payload","error","err","difference","JSON","stringify","txn","id","fromAction","txnStatus","dt","moment","toJSON","dispatch","txns","combineReducers","txnLog","arguments","length","undefined","Object","objectSpread","defineProperty","loadState","serializedState","localStorage","getItem","parse","saveState","setItem","parseDateFromFormats","formats","parseStrict","Yup","transform","value","originalValue","isType","isValid","toDate","partySchema","shape","partyName","required","getIsPartyFetched","props","party","params","partyFetched","getPartyList","prop","byId","getPartyObjById","getNotification","notifications","selectParty","createSelector","keys","map","key","parseInt","text","CREATE_PARTY","SAVED_PARTY","EDIT_PARTY","EDITED_PARTY","FETCH_PARTY","FETCHED_PARTY","FETCHED_PARTY_BY_ID","NOTIFICATION_DONE_PARTY","DELETE_PARTY","DELETED_PARTY","PRINT_PARTY","fetchParty","setNotifyDoneParty","parseError","url","config","headers","data","response","status","statusText","message","stack","handlError","URL","createParty","saveParty","editParty","saveEditedParty","fetchPartyById","saveFetchedPartyById","requestParty","deleteParty","saveDeleteParty","postPartyPrint","sendPartyPrint","partySaga","regenerator_default","a","wrap","_context","prev","takeEvery","stop","_marked","_ref","_context2","call","savePartyAPI","sent","put","msg","sagaErrorMessage","_marked2","axios","post","crossDomain","then","catch","_context3","_marked3","_ref2","_context4","editPartyAPI","_marked4","_context5","_marked5","_ref3","_context6","fetchPartyByIdAPI","_marked6","get","_context7","_marked7","_ref4","_context8","select","requestPartyAPI","_marked8","_context9","_marked9","_ref5","_context10","deletePartyAPI","_marked10","_context11","_marked11","_context12","sendPartyPrintAPI","_marked12","open","partyEnd","_context13","all","_marked13","bankSchema","bankName","getIsBankFetched","bank","bankFetched","getBankList","getBankById","selectBank","CREATE_BANK","SAVED_BANK","EDIT_BANK","EDITED_BANK","FETCH_BANK","FETCHED_BANK","FETCHED_BANK_BY_ID","NOTIFICATION_DONE_BANK","DELETE_BANK","DELETED_BANK","createBank","fetchBank","setNotifyDoneBank","saveBank","editBank","saveEditedBank","fetchBankById","saveFetchedBankById","requestBank","deleteBank","saveDeleteBank","bankSaga","sagas_marked","saveBankAPI","sagas_marked2","sagas_marked3","editBankAPI","sagas_marked4","sagas_marked5","fetchBankByIdAPI","sagas_marked6","sagas_marked7","requestBankAPI","sagas_marked8","sagas_marked9","deleteBankAPI","sagas_marked10","sagas_marked11","groupSchema","groupName","getIsGroupFetched","groupFetched","getGroupList","getGroupById","selectGroup","CREATE_GROUP","SAVED_GROUP","EDIT_GROUP","EDITED_GROUP","FETCH_GROUP","FETCHED_GROUP","FETCHED_GROUP_BY_ID","NOTIFICATION_DONE_GROUP","DELETE_GROUP","DELETED_GROUP","createGroup","fetchGroup","setNotifyDoneGroup","saveGroup","editGroup","saveEditedGroup","fetchGroupById","saveFetchedGroupById","requestGroup","deleteGroup","saveDeleteGroup","groupSaga","data_sagas_marked","saveGroupAPI","data_sagas_marked2","data_sagas_marked3","editGroupAPI","data_sagas_marked4","data_sagas_marked5","fetchGroupByIdAPI","data_sagas_marked6","_id","data_sagas_marked7","requestGroupAPI","data_sagas_marked8","data_sagas_marked9","deleteGroupAPI","data_sagas_marked10","data_sagas_marked11","CREATE_FINYEAR","SAVED_FINYEAR","FETCH_FINYEAR","FETCHED_FINYEAR","FETCHED_FINYEAR_BY_ID","NOTIFICATION_DONE_FINYEAR","savedFinYear","finYear","setNotifyDoneFinYear","createFinYear","saveFinYear","editFinYear","saveEditedFinYear","fetchFinYearById","saveFetchedFinYearById","fetchFinYear","requestFinYear","finYearSaga","finyear_data_sagas_marked","saveFinYearAPI","finyear_data_sagas_marked2","finyear_data_sagas_marked3","editFinYearAPI","finyear_data_sagas_marked4","finyear_data_sagas_marked5","fetchFinYearByIdAPI","finyear_data_sagas_marked6","finyear_data_sagas_marked7","requestFinYearAPI","finyear_data_sagas_marked8","finyear_data_sagas_marked9","SAVED_STANDARD","EDIT_STANDARD","FETCH_STANDARD","FETCHED_STANDARD","FETCHED_STANDARD_BY_ID","NOTIFICATION_DONE_STANDARD","savedStandard","standard","setNotifyDoneStandard","createStandard","saveStandard","editStandard","saveEditedStandard","fetchStandardById","saveFetchedStandardById","fetchStandard","requestStandard","standardSaga","standard_data_sagas_marked","saveStandardAPI","standard_data_sagas_marked2","standard_data_sagas_marked3","editStandardAPI","standard_data_sagas_marked4","standard_data_sagas_marked5","fetchStandardByIdAPI","standard_data_sagas_marked6","standard_data_sagas_marked7","requestStandardAPI","standard_data_sagas_marked8","standard_data_sagas_marked9","SAVED_MILKRATES","EDIT_MILKRATES","FETCH_MILKRATES","FETCHED_MILKRATES","FETCHED_MILKRATES_BY_ID","NOTIFICATION_DONE_MILKRATES","savedMilkRates","milkRates","setNotifyDoneMilkRates","createMilkRates","saveMilkRates","editMilkRates","saveEditedMilkRates","fetchMilkRatesById","saveFetchedMilkRatesById","fetchMilkRates","requestMilkRates","milkRatesSaga","milkRates_data_sagas_marked","saveMilkRatesAPI","milkRates_data_sagas_marked2","milkRates_data_sagas_marked3","editMilkRatesAPI","milkRates_data_sagas_marked4","milkRates_data_sagas_marked5","fetchMilkRatesByIdAPI","milkRates_data_sagas_marked6","milkRates_data_sagas_marked7","requestMilkRatesAPI","milkRates_data_sagas_marked8","milkRates_data_sagas_marked9","CREATE_PURCHASE","SAVED_PURCHASE","EDIT_PURCHASE","EDITED_PURCHASE","FETCH_PURCHASE","FETCHED_PURCHASE","FETCHED_PURCHASE_BY_ID","NOTIFICATION_DONE_PURCHASE","DELETE_PURCHASE","DELETED_PURCHASE","PRINT_PURCHASE","MULTIPLE_PRINT_PURCHASE","MULTIPLE_DELETE_PURCHASE","MULTIPLE_DELETED_PURCHASE","setNotifyDonePurchase","createPurchase","savePurchase","editPurchase","saveEditedPurchase","fetchPurchaseById","saveFetchedPurchaseById","fetchPurchase","requestPurchase","deletePurchase","saveDeletePurchase","deleteMultiPurchase","saveDeleteMultiPurchase","postPurchasePrint","sendPurchasePrint","postPurchaseMultiPrint","sendPurchaseMultiPrint","purchaseSaga","purchase_data_sagas_marked","savePurchaseAPI","purchase","purchase_data_sagas_marked2","purchase_data_sagas_marked3","editPurchaseAPI","removeid","purchase_data_sagas_marked4","purchase_data_sagas_marked5","fetchPurchaseByIdAPI","purchase_data_sagas_marked6","purchase_data_sagas_marked7","requestPurchaseAPI","purchase_data_sagas_marked8","purchase_data_sagas_marked9","deletePurchaseAPI","purchase_data_sagas_marked10","purchase_data_sagas_marked11","_ref6","deleteMultiPurchaseAPI","sagas_marked12","sagas_marked13","_context14","sendPurchasePrintAPI","_marked14","_context15","_marked15","_context16","sendPurchaseMultiPrintAPI","_marked16","_context17","_marked17","SAVED_MISC","EDIT_MISC","FETCH_MISC","FETCHED_MISC","NOTIFICATION_DONE_MISC","setNotifyDoneMisc","editMisc","saveEditedMisc","fetchMisc","requestMisc","miscSaga","misc_data_sagas_marked","editMiscAPI","misc","misc_data_sagas_marked2","misc_data_sagas_marked3","requestMiscAPI","misc_data_sagas_marked4","misc_data_sagas_marked5","postSummaryRegister","sendSummaryRegister","postAllPartyRegister","sendAllPartyRegister","postSinglePartyRegister","sendSinglePartyRegister","registerSaga","register_data_sagas_marked","sendSummaryRegisterAPI","register_data_sagas_marked2","register_data_sagas_marked3","sendAllPartyRegisterAPI","register_data_sagas_marked4","register_data_sagas_marked5","sendSinglePartyRegisterAPI","register_data_sagas_marked6","register_data_sagas_marked7","SAVED_COMBINATION","EDIT_COMBINATION","FETCH_COMBINATION","FETCHED_COMBINATION","FETCHED_COMBINATION_BY_ID","NOTIFICATION_DONE_COMBINATION","savedCombination","combination","setNotifyDoneCombination","createCombination","saveCombination","editCombination","saveEditedCombination","fetchCombinationById","saveFetchedCombinationById","fetchCombination","requestCombination","combinationSaga","combination_data_sagas_marked","saveCombinationAPI","combination_data_sagas_marked2","combination_data_sagas_marked3","editCombinationAPI","combination_data_sagas_marked4","combination_data_sagas_marked5","fetchCombinationByIdAPI","combination_data_sagas_marked6","combination_data_sagas_marked7","requestCombinationAPI","combination_data_sagas_marked8","combination_data_sagas_marked9","rootSaga","store_sagas_marked","schema","Entity","idAttribute","partyListSchema","defaultPartyParams","createTitle","createSubmitButtonText","editTitle","editSubmitButtonText","savedPartyId","partyID","normalizedParty","normalize","merge","entities","partys","finalState","byListId","searchParams","delete","save","_action$payload","idValue","restOfState","objectWithoutProperties","_toPropertyKey","restOfId","bankListSchema","defaultBankParams","savedBankId","reducers_toPropertyKey","bankID","normalizedBank","banks","groupListSchema","defaultGroupParams","savedGroupId","groupID","normalizedGroup","groups","data_reducers_toPropertyKey","finYearSchema","finYearListSchema","defaultFinYearParams","finYearFetched","savedFinYearId","finYearID","normalizedFinYear","finYears","finyear_data_reducers_toPropertyKey","standardSchema","standardListSchema","defaultStandardParams","savedStandardId","standardID","normalizedStandard","standards","standard_data_reducers_toPropertyKey","milkRatesSchema","milkRatesListSchema","defaultMilkRatesParams","savedMilkRatesId","milkRatesID","normalizedMilkRates","milkRates_data_reducers_toPropertyKey","purchaseSchema","purchaseListSchema","defaultPurchaseParams","purchaseFetched","purchaseDeleted","savedPurchaseId","purchaseID","removeID","normalizedPurchase","purchases","idObj","split","i","purchase_data_reducers_toPropertyKey","miscListSchema","defaultMiscParams","savedMiscId","miscID","name","normalizedMisc","miscs","misc_data_reducers_toPropertyKey","combinationSchema","combinationListSchema","defaultCombinationParams","savedCombinationId","combinationID","normalizedCombination","combination_data_reducers_toPropertyKey","rootReducer","history","router","connectRouter","sagaMiddleware","createSagaMiddleware","createBrowserHistory","basename","menu","icon","title","submenu","list","label","Notification","notifySelector","notifyDoneAction","notifyObj","useSelector","useDispatch","useEffect","getNotObj","edit","toast","position","autoClose","hideProgressBar","react_default","createElement","react_toastify","transition","Slide","Party","isNegative","_useState","useState","_useState2","slicedToArray","deletePartyId","setDeletePartyId","_useState3","_useState4","modalOption","setModalOption","groupMaster","bankMaster","deletePartyFromList","values","Table","Row","negative","Cell","index","phone","partyBankAccNo","textAlign","style","width","balance","parseFloat","Fragment","Link","to","cursor","color","onClick","notificationUtils","Modal","size","onClose","Header","Content","Actions","Button","positive","labelPosition","content","PartyList","printPartyDetails","Container","Grid","columns","className","Column","as","align","floated","push","Icon","selectable","basic","TableHeader","HeaderCell","TableBody","partyList_Party","colSpan","checkValidDateFormats","str","split_str","replace","DD","MM","YY","isDD","isNaN","isMM","isYY","currDate","format","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","getCurrentDate","isValidDay1","checkDay","isValidMonth1","checkMonth","yyStrLen","prefixStr","reqDate","setYear","isValidDay2","isValidMonth2","vfDt","yy","nextYY","calDate","nextDate","diff1","diff2","dateDiff","getYear","nextMM","prevMM","prevYY","prevDate","getMonthYear","validDateRange","yr","isleap","getDateInYYYYMMDD","date","date_split","date1","date2","dt1","dt2","ceil","getTime","FormikInputComponent","validateInput","isLabel","isTxn","placeholder","focus","disabled","isReadonly","field","_ref$form","form","touched","errors","handleChange","submitCount","Form","Field","validate","debounce","startCase","toLower","Input","onChange","autoFocus","readOnly","formik_esm","render","Label","pointing","prompt","FormikDateComponent","setDateManually","_ref2$form","setFieldValue","dirty","setDt","rawEvent","react_datepicker_min_default","placeholderText","dateFormat","scrollableYearDropdown","selected","e","target","onChangeRaw","autoComplete","FormikAmountComponent","decimal","saveOnBlur","compute","path","setValue","setStateValue","onChangeFunc","onchangeset","_ref3$form","handleSubmit","handleBlur","react_number_format_es","thousandSeparator","thousandsGroupStyle","decimalScale","onValueChange","val","setValueChange","floatValue","onBlur","FormikCheckBoxComponent","userProps","_ref4$form","Radio","checked","FormikSelectComponent","isSelection","_ref5$form","setField","Dropdown","search","selection","options","isLowerCaseEnable","getValue","clearable","isDisable","FormikMultiSelectComponent","_ref7","_React$createElement","_ref7$form","fluid","multiple","allowAdditions","_ref8","FormikTextAreaComponent","_ref12","_ref12$form","HeaderClick","count","setCount","displayCount","height","isFloatLeft","float","maxLength","TextArea","resize","syntheticEvent","rows","getholder","PlantSelect","component","GroupSelect","opt","BankSelect","GroupPopup","setFieldVal","displayStatus","setDisplayStatus","trigger","initialValues","validationSchema","onSubmit","FormikForm","Body","Group","widths","BankPopup","resetForm","PartyForm","plantNo","address","nickName","bankM","groupM","plantName","obj","cloneDeep","bankId","groupId","getParty","getSavedPartyId","submitButtonText","getPartyParams","bankMst","groupMst","plantSelect","setName","bankSelect","bankPopup","groupSelect","groupPopup","fixed","Route","withRouter","Bank","deleteBankId","setDeleteBankId","deleteBankFromList","getVlaue","BankList","bankList_Bank","BankForm","getBank","getSavedBankId","getBankParams","deleteGroupId","setDeleteGroupId","deleteGroupFromList","GroupList","groupList_Group","GroupForm","getGroup","getSavedGroupId","getGroupParams","pageName","goodFat","goodSnf","badFat","badSnf","getMilkRatesList","TypeSelect","settings","MilkRatesForm","typeSelect","MilkRates","getStandardList","StandardForm","components_typeSelect","Standard","miscSchema","operationOn","getMiscListByName","MiscNameTypeSelect","trim","typeName","operation","description","MiscOperationType","MiscForm","updatedOn","createdOn","saveMisc","miscNameType","miscOperationType","Misc","fdt","tdt","selectFinYearList","sessionName","FinYearForm","addFinYear","onchangeDD","FinYear","getPurchaseList","periodFromDate","periodToDate","billDate","billNo","partyM","getPurchase","totalFatAmount","totalSnfAmount","totalQty","deductOthersType","adjustmentType","addAdvanceNarration","totalKgfat","shareType","commissionValue","sourMilkType","headLoadType","deductAdvanceNarration","testEquipMentValue","sourMilkNarration","commissionNarration","cattleFeedType","addOthersNarration","testEquipMentType","lateArrivalType","addOthersValue","vaccineType","mtevalue","totalRejected","splIncentiveNarration","fodderNarration","purchaseVoucherDetails","splIncentiveValue","billTotal","sourMilkValue","addAdvanceType","shareValue","arrearNarration","adjustment","headLoadNarration","deductOthersValue","arrearValue","shareNarration","cowLoanNarration","totalSour","fodderType","headLoadValue","deductAdvanceType","vaccineValue","totalMilkprice","mtenarration","cowLoanValue","addOthersType","vaccineNarration","deductAdvanceValue","totalAdditions","cattleFeedNarration","netAmount","totalDeductions","mtetype","addAdvanceValue","testEquipMentNarration","lateArrivalValue","lateArrivalNarration","commissionType","splIncentiveType","arrearType","fodderValue","cowLoanType","adjustmentValue","adjustmentNarration","cattleFeedValue","deductOthersNarration","totalKgsnf","totalAvgRateKg","totalGoodFat","totalGoodSnf","totalAvgKg","totalBadFat","totalBadSnf","headLoadCalVal","partyMaster","purchaseName","PartySelect","setState","Purchase","deletePurchaseId","setDeletePurchaseId","deletePurchaseFromList","printPurchaseFromList","Checkbox","toFixed","PurchaseList","isPurchaseDeleted","_useState5","isOpen","keyWord","_useState6","modalState","setModalState","_useState7","_useState8","modal","setModal","_useState9","_useState10","checkedIds","setCheckedIds","calculateTotal","fetchList","fromDt","toDt","linkCreate","addPurchaseBulkPrint","callToDeleteData","Dimmer","active","Loader","padding","partySelect","purchaseList_Purchase","PartyDisplayView","partyObj","partyId","closeIcon","TypeTxnSelect","ShiftSelect","session","QualitySelect","AddQuickVdetails","setItemObject","setNextDate","voucherObj","vdetails","qty","netQty","setNetQty","isAuto","setIsAuto","clrP","isCLRhas","setIsCLRhas","_useState11","_useState12","popNextDate","setPopNextDate","_useState13","_useState14","onOpen","setOnOpen","getCombinationById","object","getId","getIndex","sourQty","kgFat","snfRate","rejectedQty","snfP","fatRate","fatAmount","pvid","fatP","snfAmount","kgSnf","milkPrice","remarks","milkRate","setStandard","setRate","shift","fatQuality","snfQuality","purchaseDetails","filter","element","getVdetailsObj","getAuto","shiftGet","saveItems","flag","rejectQty","new_date","add","day","month","year","onChangeQty","onChangeCLR","closeOnEscape","closeOnDimmerClick","getOpenPopup","typeTxnSelect","ischeck","setAutoTiming","shiftSelect","margin","qualitySelect","getStandard","getMilkRate","standardObj","milkRateObj","qtyGet","fat","clr","snf","fatType","snfType","fatAmt","snfAmt","totalRs","calculateRate","VdetailsNonEditable","move","swap","insert","unshift","pop","remove","arrKeys","fieldName","isActive","setIsActive","concat","set","onclickRow","AddNotesCommon","setValueFor","addNote","addNotes","AddHeadLoad","afterWork","sendValue","headLoad","addHeadLoad","PurchaseForm","getSavedPurchaseId","getPurchaseParams","commisionMisc","sourMilkMisc","setPartyId","setItemObjectAdd","callSetAllData","setItemObjectEdit","totalRejectedQty","totalSourQty","totalKgFat","totalKgSnf","totalFatAmt","totalSnfAmt","ratePerKg","pDetails","computeHeadLoad","computeCommission","computeSourMilk","nowSetTotalValue","totalAdditionAndDeduction","purchaseV","totalAddition","totalDeduction","additionOnChange","autoAdj","getAdj","commisionValue","commissionVal","milkP","kgFatSNF","sourMilkVal","partyDisplayView","visibility","addQuickVdetails","newPurchaseDetails","setItemObjectDelete","addNotePopUpCommon","addHeadLoadPopup","POST_REGISTER_SUMMARY","POST_REGISTER_ALLPARTY","MultiPartySelect","RegisterForm","postRegister","fromDate","summaryData","partytype","allPartyData","register","postAllPartyDetails","partyid","toString","singlePartyData","postSinglePartyDetails","defaultCheck","multiPartySelect","Register","CombinationForm","combination_components_typeSelect","Combination","App","stores","es","esm","Menu","attached","Item","item","simple","m","s","sindex","preloadedState","configureStore","middleware","routerMiddleware","toConsumableArray","getDefaultMiddleware","enhancers","monitorReducersEnhancer","run","subscribe","throttle","ReactDOM","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00799cc7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve dairy farm; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const loggerMiddleware = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default loggerMiddleware","import diff from 'deep-diff';\nimport v4 from 'uuid';\nimport { combineReducers } from 'redux'\nimport moment  from 'moment'\n\nexport const txnMiddleware = store => next => action => {\n\n  const prevState = store.getState();\n  const result = next(action)\n  const nextState = store.getState();\n\n  if (action.hasOwnProperty('diff') || action.hasOwnProperty('txn')){\n\n        let txnid = v4()        \n        if (action.hasOwnProperty('txn'))\n            txnid = action.payload.txnid\n\n        let error = '';\n        if (action.hasOwnProperty('err'))\n            error = action.err\n\n        let difference = '';\n        if (action.hasOwnProperty('diff'))\n            difference = JSON.stringify(diff(prevState, nextState));\n\n        const txn = { \n                id: txnid,\n                type: action.type !== 'SERVER_ERROR' ? action.type : action.fromAction,\n                payload : action.payload,\n                txnStatus: action.txn,\n                err : error,\n                diff: difference,\n                dt: moment().toJSON() \n            }\n\n        store.dispatch ( {type:'STORE_TXN', payload: txn } )\n    }\n  return result\n}\n  \nfunction txnLog (state = {}, action) {\n    if (action.type === 'STORE_TXN') { \n        const txnid = action.payload.id;   \n        return { ...state, \n            [txnid]: action.payload }        \n    } else {\n        return state\n    }\n}\n\nexport const txns = combineReducers({\n    txnLog\n});\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('taskState')\n      if (serializedState === null){\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  };\n  \n  export const saveState = (state) => {\n    try{\n      const serializedState = JSON.stringify(state)\n      localStorage.setItem('taskState',serializedState)\n    } catch (err) {\n      // ignore write error\n    }\n  }","import moment from 'moment'\nimport * as Yup from 'yup';\n\nexport function parseDateFromFormats (formats, parseStrict) {\n  return Yup.date().transform(function(value, originalValue) {\n    if (Yup.date().isType(value)) return value;\n\n    value = moment(originalValue, formats, parseStrict);\n    return value.isValid() ? value.toDate() : moment();\n  });\n}\n\n// export function parseNumberFromFormats (formats, parseStrict) {\n//   return Yup.number().transform(function(value, originalValue) {\n//     if (Yup.number().isType(value)) return value;\n\n//     value = moment(originalValue, formats, parseStrict);\n//     return value.isValid() ? value : Nan;\n//   });\n// }\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const party =  () => ( {\n  \"plantNo\": \"\",\n  \"address\": \"\",\n  \"nickName\": \"\",\n  \"bankMaster\": \"\",\n  \"bankM\": \"\",\n  \"balance\": \"\",\n  \"phone\": \"\",\n  \"partyName\": \"\",\n  \"groupMaster\": \"\",\n  \"groupM\": \"\",\n  \"partyBankAccNo\": \"\",\n  \"plantName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const partySchema = Yup.object().shape({\n      \n    partyName: Yup.string()\n                .required('This is a Required Field')    \n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { party } from './model'\n\nexport const getIsFetchingParty = (state, props) => state.party.params.isFetching\nexport const getIsPartyFetched = (state, props) => state.party.params.partyFetched\nexport const getSavedPartyId = (state, props) => state.party.params.savedPartyId\nexport const getPartyList = (state, prop) => state.party.byId\nexport const getPartyObjById = (state, id) => state.party.byId[id]\nexport const getNotification = (state, id) => state.party.notifications[id]\n\nexport const getParty = (state, props) => {\n    if (props.match.path === '/party/create') {\n        return party()\n    }\n    if (props.match.path === '/party/edit/:id') {\n        let id = props.match.params.id\n        let obj = cloneDeep(state.party.byId[id])\n        console.log(obj)\n        let bankId = obj.bankMaster ? obj.bankMaster.id : 0\n        obj.bankM = bankId\n        let groupId = obj.groupMaster ? obj.groupMaster.id : 0\n        obj.groupM = groupId\n        return obj\n    }\n}\n\nexport const getPartyParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/party/create') {\n        params.title = state.party.params.createTitle\n        params.submitButtonText = state.party.params.createSubmitButtonText\n    } else if (props.match.path === '/party/edit/:id') {\n        params.title = state.party.params.editTitle\n        params.submitButtonText = state.party.params.editSubmitButtonText\n    }\n    return params\n}\n\n\nexport const selectParty = createSelector(\n    getPartyList,\n    party => {\n        const keys = Object.keys(party)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: party[key].partyName } })\n        return obj\n    }\n)","export const CREATE_PARTY = 'CREATE_PARTY'\nexport const SAVED_PARTY = 'SAVED_PARTY'\nexport const EDIT_PARTY = 'EDIT_PARTY'\nexport const EDITED_PARTY = 'EDITED_PARTY'\nexport const FETCH_PARTY = 'FETCH_PARTY'\nexport const FETCHED_PARTY = 'FETCHED_PARTY'\nexport const FETCH_PARTY_BY_ID = 'FETCH_PARTY_BY_ID'\nexport const FETCHED_PARTY_BY_ID = 'FETCHED_PARTY_BY_ID'\nexport const NOTIFICATION_DONE_PARTY = 'NOTIFICATION_DONE_PARTY'\nexport const DELETE_PARTY = 'DELETE_PARTY'\nexport const DELETED_PARTY = 'DELETED_PARTY'\nexport const PRINT_PARTY = 'PRINT_PARTY'\n","import * as type from './types'\n\nexport function createParty(party) {\n    return {\n        type: type.CREATE_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function savedParty(party) {\n    return {\n        type: type.SAVED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function editParty(party) {\n    return {\n        type: type.EDIT_PARTY,\n        payload: party,\n        txn: 'initiated',\n    };\n}\n\nexport function editedParty(party) {\n    return {\n        type: type.EDITED_PARTY,\n        payload: party.data.data,\n        txn: party.data.type,\n        msg: party.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchParty() {\n    return {\n        type: type.FETCH_PARTY\n    };\n}\n\nexport function fetchedParty(party) {\n    return {\n        type: type.FETCHED_PARTY,\n        payload: party\n    };\n}\n\n\nexport function fetchPartyById(party) {\n    return {\n        type: type.FETCH_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function fetchedPartyById(party) {\n    return {\n        type: type.FETCHED_PARTY_BY_ID,\n        payload: party\n    };\n}\n\nexport function setNotifyDoneParty(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PARTY,\n        payload: props\n    };\n}\n\n\nexport function deleteParty(party) {\n    return {\n        type: type.DELETE_PARTY,\n        payload: party\n    };\n}\n\nexport function deletedParty(party) {\n    return {\n        type: type.DELETED_PARTY,\n        payload: party\n    };\n}\n\nexport function partyPrint(){\n    return {\n        type: type.PRINT_PARTY\n    };\n}","\nexport const parseError = (err) => {\n    return  {\n        url : err.config.url,\n        headers : err.config.headers,\n        data : err.response.data,\n        status : err.status,\n        statusText : err.statusText,\n        message : err.message,\n        stack : err.stack\n    };\n}\n\nexport const handlError = (action, err) => {\n    return ({\n        type : 'SERVER_ERROR',\n        payload : action.payload,\n        fromAction : action.type,\n        txn : 'err',\n        err : err\n    })\n}\n\n","export default URL = 'http://localhost:8080/dairyfarm'","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsPartyFetched } from './selectors'\nimport { savedParty, fetchedParty, fetchedPartyById, deletedParty, editedParty } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Party \n\nfunction* createParty() {\n    yield takeEvery('CREATE_PARTY',saveParty)\n  }\n\nfunction* saveParty(action){\n  const { response, error } = yield call(savePartyAPI, action.payload)\n  if (response) yield put (savedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction savePartyAPI(data) {\n    return axios.post(URL+'/partymaster/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Party \n\nfunction* editParty() {\n  yield takeEvery('EDIT_PARTY',saveEditedParty)\n}\n\nfunction* saveEditedParty(action){\n  const { response, error } = yield call(editPartyAPI, action.payload)  \n  if (response) yield put (editedParty({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editPartyAPI(data) {\n  return axios.post(URL+'/partymaster/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Party by ID\n\nfunction* fetchPartyById() {\n  yield takeEvery('FETCH_PARTY_BY_ID',saveFetchedPartyById)\n}\n\nfunction* saveFetchedPartyById(action){\n  const { response, error } = yield call(fetchPartyByIdAPI, action.payload)  \n  if (response) yield put (fetchedPartyById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchPartyByIdAPI(data) {\n  let id = data\n  return axios.get(URL+'/partymaster/fetch/'+ id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchParty() {\n\n  yield takeEvery('FETCH_PARTY',requestParty)\n\n}\n  \nfunction* requestParty(){\n  const isPartyFetched = yield select(getIsPartyFetched);\n  if(!isPartyFetched){\n    let { data } = yield call(requestPartyAPI)\n    yield put (fetchedParty(data.data))\n  }\n}\n\nfunction requestPartyAPI(data) {\n  return axios.get(URL+'/partymaster/fetch/all', {crossDomain: true})\n}\n\n//#endregion\n\n//#region Saga for Delete Party \n\nfunction* deleteParty() {\n  yield takeEvery('DELETE_PARTY',saveDeleteParty)\n}\n\nfunction* saveDeleteParty(action){\n  const { response, error } = yield call(deletePartyAPI, action.payload)\n  if (response) yield put (deletedParty({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction deletePartyAPI(data) {\n  return axios.post(URL+'/partymaster/delete', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Post Party Print\n\nfunction* postPartyPrint() {\n  yield takeEvery('PRINT_PARTY', sendPartyPrint)\n}\n\nfunction* sendPartyPrint() {\n  yield call(sendPartyPrintAPI)\n}\n\nfunction sendPartyPrintAPI() {\n  window.open(URL+'/partyprintlist', '_blank')\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.party(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.partyEnd()\n}\n\nexport default function* partySaga() {\n    yield all([\n        createParty(),\n        fetchParty(),\n        editParty(),\n        deleteParty(),\n        fetchPartyById(),\n        postPartyPrint()\n    ])\n  }  ","import * as Yup from 'yup'\n\nexport const bank =  () => ({\n    bankName: \"\"\n})\n\nexport const bankSchema = Yup.object().shape({\n\n    bankName: Yup.string()\n                .required('This is a Required Field')\n\n  });\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { bank } from './model'\n\nexport const getIsFetchingBank = (state, props) => state.bank.params.isFetching;\nexport const getIsBankFetched = (state, props) => state.bank.params.bankFetched;\nexport const getSavedBankId = (state, props) => state.bank.params.savedBankId;\nexport const getBankList = (state, prop) => state.bank.byId\nexport const getBankById = (state, id) => state.bank.byId[id]\nexport const getNotification = (state, id) => state.bank.notifications[id]\n\nexport const getBank = (state, props) => {\n    if(props.match.path==='/bank/create'){\n        return bank()\n    }\n    if(props.match.path==='/bank/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.bank.byId[_id]);\n        return obj\n    }\n}\n\nexport const getBankParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/bank/create'){ \n        params.title = state.bank.params.createTitle\n        params.submitButtonText = state.bank.params.createSubmitButtonText        \n    }else if(props.match.path==='/bank/edit/:id'){ \n        params.title = state.bank.params.editTitle\n        params.submitButtonText = state.bank.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectBank = createSelector(\n    getBankList,\n    bank => { \n        const keys = Object.keys(bank)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : bank[key].bankName }})\n        return obj\n    }\n)","export const CREATE_BANK = 'CREATE_BANK'\nexport const SAVED_BANK = 'SAVED_BANK'\nexport const EDIT_BANK = 'EDIT_BANK'\nexport const EDITED_BANK = 'EDITED_BANK'\nexport const FETCH_BANK = 'FETCH_BANK'\nexport const FETCHED_BANK = 'FETCHED_BANK'\nexport const FETCH_BANK_BY_ID = 'FETCH_BANK_BY_ID'\nexport const FETCHED_BANK_BY_ID = 'FETCHED_BANK_BY_ID'\nexport const NOTIFICATION_DONE_BANK = 'NOTIFICATION_DONE_BANK'\nexport const DELETE_BANK = 'DELETE_BANK'\nexport const DELETED_BANK = 'DELETED_BANK'\n","import * as type from './types'\n\nexport function createBank(bank) {\n    return {\n        type: type.CREATE_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function savedBank(bank) {\n    return {\n        type: type.SAVED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function editBank(bank) {\n    return {\n        type: type.EDIT_BANK,\n        payload: bank,\n        txn: 'initiated',\n    };\n}\n\nexport function editedBank(bank) {\n    return {\n        type: type.EDITED_BANK,\n        payload: bank.data.data,\n        txn: bank.data.type,\n        msg: bank.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchBank() {\n    return {\n        type: type.FETCH_BANK\n    };\n}\n\nexport function fetchedBank(bank) {\n    return {\n        type: type.FETCHED_BANK,\n        payload: bank\n    };\n}\n\n\nexport function fetchBankById(bank) {\n    return {\n        type: type.FETCH_BANK_BY_ID,\n        payload: bank\n    };\n}\n\nexport function fetchedBankById(bank) {\n    return {\n        type: type.FETCHED_BANK_BY_ID,\n        payload: bank\n    };\n}\n\n\nexport function setNotifyDoneBank(props) {\n    return {\n        type: type.NOTIFICATION_DONE_BANK,\n        payload: props\n    };\n}\n\n\nexport function deleteBank(bank) {\n    return {\n        type: type.DELETE_BANK,\n        payload: bank\n    };\n}\n\nexport function deletedBank(bank) {\n    return {\n        type: type.DELETED_BANK,\n        payload: bank\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsBankFetched } from './selectors'\nimport { savedBank, fetchedBank, fetchedBankById, deletedBank, editedBank } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Bank \n\nfunction* createBank() {\n  yield takeEvery('CREATE_BANK', saveBank)\n}\n\nfunction* saveBank(action) {\n  const { response, error } = yield call(saveBankAPI, action.payload)\n  if (response) yield put(savedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveBankAPI(data) {\n  return axios.post(URL + '/bankmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Bank \n\nfunction* editBank() {\n  yield takeEvery('EDIT_BANK', saveEditedBank)\n}\n\nfunction* saveEditedBank(action) {\n  const { response, error } = yield call(editBankAPI, action.payload)\n  console.log(response)\n  if (response) yield put(editedBank({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editBankAPI(data) {\n  return axios.post(URL + '/bankmaster/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Bank by ID\n\nfunction* fetchBankById() {\n  yield takeEvery('FETCH_BANK_BY_ID', saveFetchedBankById)\n}\n\nfunction* saveFetchedBankById(action) {\n  const { response, error } = yield call(fetchBankByIdAPI, action.payload)\n  if (response) yield put(fetchedBankById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchBankByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/bankmaster/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchBank() {\n\n  yield takeEvery('FETCH_BANK', requestBank)\n\n}\n\nfunction* requestBank() {\n  const isBankFetched = yield select(getIsBankFetched);\n  if (!isBankFetched) {\n    let { data } = yield call(requestBankAPI)\n    yield put(fetchedBank(data.data))\n  }\n\n}\n\nfunction requestBankAPI() {\n  return axios.get(URL + '/bankmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Bank \n\nfunction* deleteBank() {\n  yield takeEvery('DELETE_BANK', saveDeleteBank)\n}\n\nfunction* saveDeleteBank(action) {\n  const { response, error } = yield call(deleteBankAPI, action.payload)\n  if (response) yield put(deletedBank({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteBankAPI(data) {\n  return axios.post(URL + '/bankmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* bankSaga() {\n  yield all([\n    createBank(),\n    fetchBank(),\n    editBank(),\n    fetchBankById(),\n    deleteBank()\n  ])\n}  ","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const group =  () => ({\n  \"groupName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const groupSchema = Yup.object().shape({\n\n  groupName: Yup.string()\n            .required('This is a Required Field')\n\n});\n","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash'\nimport { group } from './model'\n\nexport const getIsFetchingGroup = (state, props) => state.group.params.isFetching\nexport const getIsGroupFetched = (state, props) => state.group.params.groupFetched\nexport const getSavedGroupId = (state, props) => state.group.params.savedGroupId\nexport const getGroupList = (state, prop) => state.group.byId\nexport const getGroupById = (state, id) => state.group.byId[id]\nexport const getNotification = (state, id) => state.group.notifications[id]\n\nexport const getGroup = (state, props) => {\n    if (props.match.path === '/group/create') {\n        return group()\n    }\n    if (props.match.path === '/group/edit/:id') {\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.group.byId[_id]);\n        return obj\n    }\n}\nexport const getGroupParams = (state, props) => {\n    const params = {}\n    if (props.match.path === '/group/create') {\n        params.title = state.group.params.createTitle\n        params.submitButtonText = state.group.params.createSubmitButtonText\n    } else if (props.match.path === '/group/edit/:id') {\n        params.title = state.group.params.editTitle\n        params.submitButtonText = state.group.params.editSubmitButtonText\n    }\n    return params\n}\n\nexport const selectGroup = createSelector(\n    getGroupList,\n    group => {\n        const keys = Object.keys(group)\n        const obj = keys.map((key) => { return { key: key, value: parseInt(key, 10), text: group[key].groupName } })\n        return obj\n    }\n)","export const CREATE_GROUP = 'CREATE_GROUP'\nexport const SAVED_GROUP = 'SAVED_GROUP'\nexport const EDIT_GROUP = 'EDIT_GROUP'\nexport const EDITED_GROUP = 'EDITED_GROUP'\nexport const FETCH_GROUP = 'FETCH_GROUP'\nexport const FETCHED_GROUP = 'FETCHED_GROUP'\nexport const FETCH_GROUP_BY_ID = 'FETCH_GROUP_BY_ID'\nexport const FETCHED_GROUP_BY_ID = 'FETCHED_GROUP_BY_ID'\nexport const NOTIFICATION_DONE_GROUP = 'NOTIFICATION_DONE_GROUP'\nexport const DELETE_GROUP = 'DELETE_GROUP'\nexport const DELETED_GROUP = 'DELETED_GROUP'\n\n","import * as type from './types'\n\nexport function createGroup(group) {\n    return {\n        type: type.CREATE_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function savedGroup(group) {\n    return {\n        type: type.SAVED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function editGroup(group) {\n    return {\n        type: type.EDIT_GROUP,\n        payload: group,\n        txn: 'initiated',\n    };\n}\n\nexport function editedGroup(group) {\n    return {\n        type: type.EDITED_GROUP,\n        payload: group.data.data,\n        txn: group.data.type,\n        msg: group.data.msg,\n        diff: true\n    };\n}\n\nexport function fetchGroup() {\n    return {\n        type: type.FETCH_GROUP\n    };\n}\n\nexport function fetchedGroup(group) {\n    return {\n        type: type.FETCHED_GROUP,\n        payload: group\n    };\n}\n\n\nexport function fetchGroupById(group) {\n    return {\n        type: type.FETCH_GROUP_BY_ID,\n        payload: group\n    };\n}\n\nexport function fetchedGroupById(group) {\n    return {\n        type: type.FETCHED_GROUP_BY_ID,\n        payload: group\n    };\n}\n\n\nexport function setNotifyDoneGroup(props) {\n    return {\n        type: type.NOTIFICATION_DONE_GROUP,\n        payload: props\n    };\n}\n\nexport function deleteGroup(group) {\n    return {\n        type: type.DELETE_GROUP,\n        payload: group\n    };\n}\n\nexport function deletedGroup(group) {\n    return {\n        type: type.DELETED_GROUP,\n        payload: group\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { getIsGroupFetched } from './selectors'\nimport { savedGroup, fetchedGroup, fetchedGroupById, deletedGroup, editedGroup } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Group \n\nfunction* createGroup() {\n  yield takeEvery('CREATE_GROUP', saveGroup)\n}\n\nfunction* saveGroup(action) {\n  const { response, error } = yield call(saveGroupAPI, action.payload)\n  if (response) yield put(savedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction saveGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Group \n\nfunction* editGroup() {\n  yield takeEvery('EDIT_GROUP', saveEditedGroup)\n}\n\nfunction* saveEditedGroup(action) {\n  const { response, error } = yield call(editGroupAPI, action.payload)\n  if (response) yield put(editedGroup({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/update/', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Group by ID\n\nfunction* fetchGroupById() {\n  yield takeEvery('FETCH_GROUP_BY_ID', saveFetchedGroupById)\n}\n\nfunction* saveFetchedGroupById(action) {\n  const { response, error } = yield call(fetchGroupByIdAPI, action.payload)\n  if (response) yield put(fetchedGroupById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchGroupByIdAPI(data) {\n  let _id = data\n  return axios.get(URL + '/groupmaster/fetch/' + _id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchGroup() {\n\n  yield takeEvery('FETCH_GROUP', requestGroup)\n\n}\n\nfunction* requestGroup() {\n  const isGroupFetched = yield select(getIsGroupFetched);\n  if (!isGroupFetched) {\n    let { data } = yield call(requestGroupAPI)\n    yield put(fetchedGroup(data.data))\n  }\n}\n\nfunction requestGroupAPI() {\n  return axios.get(URL + '/groupmaster/fetch/all', { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Group \n\nfunction* deleteGroup() {\n  yield takeEvery('DELETE_GROUP', saveDeleteGroup)\n}\n\nfunction* saveDeleteGroup(action) {\n  const { response, error } = yield call(deleteGroupAPI, action.payload)\n  if (response) yield put(deletedGroup({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteGroupAPI(data) {\n  return axios.post(URL + '/groupmaster/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* groupSaga() {\n  yield all([\n    createGroup(),\n    fetchGroup(),\n    editGroup(),\n    deleteGroup(),\n    fetchGroupById()\n  ])\n}  ","export const CREATE_FINYEAR = 'CREATE_FINYEAR'\nexport const SAVED_FINYEAR = 'SAVED_FINYEAR'\nexport const EDIT_FINYEAR = 'EDIT_FINYEAR'\nexport const EDITED_FINYEAR = 'EDITED_FINYEAR'\nexport const FETCH_FINYEAR = 'FETCH_FINYEAR'\nexport const FETCHED_FINYEAR = 'FETCHED_FINYEAR'\nexport const FETCH_FINYEAR_BY_ID = 'FETCH_FINYEAR_BY_ID'\nexport const FETCHED_FINYEAR_BY_ID = 'FETCHED_FINYEAR_BY_ID'\nexport const NOTIFICATION_DONE_FINYEAR = 'NOTIFICATION_DONE_FINYEAR'\n","import * as type from './types'\n\nexport function createFinYear(finYear) {\n    return {\n        type : type.CREATE_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function savedFinYear(finYear) {\n    return {\n        type : type.SAVED_FINYEAR,\n        payload : finYear.data.data,        \n        txn: finYear.data.type,\n        msg: finYear.data.msg,\n        diff : true\n    };\n}\n\nexport function editFinYear(finYear) {\n    return {\n        type : type.EDIT_FINYEAR,\n        payload : finYear,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchFinYear(finYear) {\n    return {\n        type : type.FETCH_FINYEAR,\n        payload: finYear\n    };\n}\n\nexport function fetchedFinYear(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR,\n        payload : finYear\n    };\n}\n\n\nexport function fetchFinYearById(finYear) {\n    return {\n        type : type.FETCH_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function fetchedFinYearById(finYear) {\n    return {\n        type : type.FETCHED_FINYEAR_BY_ID,\n        payload : finYear\n    };\n}\n\nexport function setNotifyDoneFinYear(props) {\n    return {\n        type : type.NOTIFICATION_DONE_FINYEAR,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedFinYear, fetchedFinYear, fetchedFinYearById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create FinYear \n\nfunction* createFinYear() {\n    yield takeEvery('CREATE_FINYEAR',saveFinYear)\n  }\n\nfunction* saveFinYear(action){\n  const { response, error } = yield call(saveFinYearAPI, action.payload)\n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveFinYearAPI(data) {\n    return axios.post(URL+'/sessionperiod/create', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited FinYear \n\nfunction* editFinYear() {\n  yield takeEvery('EDIT_FINYEAR',saveEditedFinYear)\n}\n\nfunction* saveEditedFinYear(action){\n  const { response, error } = yield call(editFinYearAPI, action.payload)  \n  if (response) yield put (savedFinYear({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editFinYearAPI(data) {\n  return axios.post(URL+'/sessionperiod/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting FinYear by ID\n\nfunction* fetchFinYearById() {\n  yield takeEvery('FETCH_FINYEAR_BY_ID',saveFetchedFinYearById)\n}\n\nfunction* saveFetchedFinYearById(action){\n  const { response, error } = yield call(fetchFinYearByIdAPI, action.payload)  \n  if (response) yield put (fetchedFinYearById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchFinYearByIdAPI(data) {\n  let id = data\n  return axios.post(URL+'sessionperiod/fetch/'+id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchFinYear() {\n\n  yield takeEvery('FETCH_FINYEAR',requestFinYear)\n\n}\n  \nfunction* requestFinYear(action){\n\n  let { data } = yield call(requestFinYearAPI, action.payload)\n  yield put (fetchedFinYear(data.data))\n\n}\n\nfunction requestFinYearAPI(data) {\n  return axios.get(URL+'/sessionperiod/fetch/all', data,  {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* finYearSaga() {\n    yield all([\n        createFinYear(),\n        fetchFinYear(),\n        editFinYear(),\n        fetchFinYearById()\n    ])\n  }  ","export const CREATE_STANDARD = 'CREATE_STANDARD'\nexport const SAVED_STANDARD = 'SAVED_STANDARD'\nexport const EDIT_STANDARD = 'EDIT_STANDARD'\nexport const EDITED_STANDARD = 'EDITED_STANDARD'\nexport const FETCH_STANDARD = 'FETCH_STANDARD'\nexport const FETCHED_STANDARD = 'FETCHED_STANDARD'\nexport const FETCH_STANDARD_BY_ID = 'FETCH_STANDARD_BY_ID'\nexport const FETCHED_STANDARD_BY_ID = 'FETCHED_STANDARD_BY_ID'\nexport const NOTIFICATION_DONE_STANDARD = 'NOTIFICATION_DONE_STANDARD'\n","import * as type from './types'\n\nexport function createStandard(standard) {\n    return {\n        type : type.CREATE_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function savedStandard(standard) {\n    return {\n        type : type.SAVED_STANDARD,\n        payload : standard.data.data,\n        txn: standard.data.type,\n        msg: standard.data.msg,\n        diff : true\n    };\n}\n\nexport function editStandard(standard) {\n    return {\n        type : type.EDIT_STANDARD,\n        payload : standard,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchStandard(params) {\n    return {\n        type : type.FETCH_STANDARD,\n        payload : params\n    };\n}\n\nexport function fetchedStandard(standard) {\n    return {\n        type : type.FETCHED_STANDARD,\n        payload : standard\n    };\n}\n\n\nexport function fetchStandardById(standard) {\n    return {\n        type : type.FETCH_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function fetchedStandardById(standard) {\n    return {\n        type : type.FETCHED_STANDARD_BY_ID,\n        payload : standard\n    };\n}\n\nexport function setNotifyDoneStandard(props) {\n    return {\n        type : type.NOTIFICATION_DONE_STANDARD,\n        payload: props\n    };\n}","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedStandard, fetchedStandard, fetchedStandardById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Standard \n\nfunction* createStandard() {\n    yield takeEvery('CREATE_STANDARD',saveStandard)\n  }\n\nfunction* saveStandard(action){\n  const { response, error } = yield call(saveStandardAPI, action.payload)\n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveStandardAPI(data) {\n    return axios.post(URL+'/standard/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Standard \n\nfunction* editStandard() {\n  yield takeEvery('EDIT_STANDARD',saveEditedStandard)\n}\n\nfunction* saveEditedStandard(action){\n  const { response, error } = yield call(editStandardAPI, action.payload)  \n  if (response) yield put (savedStandard({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editStandardAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Standard by ID\n\nfunction* fetchStandardById() {\n  yield takeEvery('FETCH_STANDARD_BY_ID',saveFetchedStandardById)\n}\n\nfunction* saveFetchedStandardById(action){\n  const { response, error } = yield call(fetchStandardByIdAPI, action.payload)  \n  if (response) yield put (fetchedStandardById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchStandardByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/standard/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchStandard() {\n\n  yield takeEvery('FETCH_STANDARD',requestStandard)\n\n}\n  \nfunction* requestStandard(action){\n\n  let { data } = yield call(requestStandardAPI, action.payload)\n  yield put (fetchedStandard(data.data))\n\n}\n\nfunction requestStandardAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* standardSaga() {\n    yield all([\n        createStandard(),\n        fetchStandard(),\n        editStandard(),\n        fetchStandardById()\n    ])\n  }  ","export const CREATE_MILKRATES = 'CREATE_MILKRATES'\nexport const SAVED_MILKRATES = 'SAVED_MILKRATES'\nexport const EDIT_MILKRATES = 'EDIT_MILKRATES'\nexport const EDITED_MILKRATES = 'EDITED_MILKRATES'\nexport const FETCH_MILKRATES = 'FETCH_MILKRATES'\nexport const FETCHED_MILKRATES = 'FETCHED_MILKRATES'\nexport const FETCH_MILKRATES_BY_ID = 'FETCH_MILKRATES_BY_ID'\nexport const FETCHED_MILKRATES_BY_ID = 'FETCHED_MILKRATES_BY_ID'\nexport const NOTIFICATION_DONE_MILKRATES = 'NOTIFICATION_DONE_MILKRATES'\n","import * as type from './types'\n\nexport function createMilkRates(milkRates) {\n    return {\n        type : type.CREATE_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function savedMilkRates(milkRates) {\n    return {\n        type : type.SAVED_MILKRATES,\n        payload : milkRates.data.data,\n        txn: milkRates.data.type,\n        msg: milkRates.data.msg,\n        diff : true\n    };\n}\n\nexport function editMilkRates(milkRates) {\n    return {\n        type : type.EDIT_MILKRATES,\n        payload : milkRates,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMilkRates(params) {\n    return {\n        type : type.FETCH_MILKRATES,\n        payload : params\n    };\n}\n\nexport function fetchedMilkRates(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES,\n        payload : milkRates\n    };\n}\n\n\nexport function fetchMilkRatesById(milkRates) {\n    return {\n        type : type.FETCH_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function fetchedMilkRatesById(milkRates) {\n    return {\n        type : type.FETCHED_MILKRATES_BY_ID,\n        payload : milkRates\n    };\n}\n\nexport function setNotifyDoneMilkRates(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MILKRATES,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMilkRates, fetchedMilkRates, fetchedMilkRatesById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create MilkRates \n\nfunction* createMilkRates() {\n    yield takeEvery('CREATE_MILKRATES',saveMilkRates)\n  }\n\nfunction* saveMilkRates(action){\n  const { response, error } = yield call(saveMilkRatesAPI, action.payload)\n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveMilkRatesAPI(data) {\n    return axios.post(URL+'/milkRates/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited MilkRates \n\nfunction* editMilkRates() {\n  yield takeEvery('EDIT_MILKRATES',saveEditedMilkRates)\n}\n\nfunction* saveEditedMilkRates(action){\n  const { response, error } = yield call(editMilkRatesAPI, action.payload)  \n  if (response) yield put (savedMilkRates({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMilkRatesAPI(data) {\n  return axios.post(URL+'/stdmilkrate/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting MilkRates by ID\n\nfunction* fetchMilkRatesById() {\n  yield takeEvery('FETCH_MILKRATES_BY_ID',saveFetchedMilkRatesById)\n}\n\nfunction* saveFetchedMilkRatesById(action){\n  const { response, error } = yield call(fetchMilkRatesByIdAPI, action.payload)  \n  if (response) yield put (fetchedMilkRatesById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchMilkRatesByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/milkRates/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMilkRates() {\n\n  yield takeEvery('FETCH_MILKRATES',requestMilkRates)\n\n}\n  \nfunction* requestMilkRates(action){\n\n  let { data } = yield call(requestMilkRatesAPI, action.payload)\n  yield put (fetchedMilkRates(data.data))\n\n}\n\nfunction requestMilkRatesAPI(data) {\n  return axios.get(URL+'/stdmilkrate/fetchbypagename/'+ data, data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* milkRatesSaga() {\n    yield all([\n        createMilkRates(),\n        fetchMilkRates(),\n        editMilkRates(),\n        fetchMilkRatesById()\n    ])\n  }  ","export const CREATE_PURCHASE = 'CREATE_PURCHASE'\nexport const SAVED_PURCHASE = 'SAVED_PURCHASE'\nexport const EDIT_PURCHASE = 'EDIT_PURCHASE'\nexport const EDITED_PURCHASE = 'EDITED_PURCHASE'\nexport const FETCH_PURCHASE = 'FETCH_PURCHASE'\nexport const FETCHED_PURCHASE = 'FETCHED_PURCHASE'\nexport const FETCH_PURCHASE_BY_ID = 'FETCH_PURCHASE_BY_ID'\nexport const FETCHED_PURCHASE_BY_ID = 'FETCHED_PURCHASE_BY_ID'\nexport const NOTIFICATION_DONE_PURCHASE = 'NOTIFICATION_DONE_PURCHASE'\nexport const DELETE_PURCHASE = 'DELETE_PURCHASE'\nexport const DELETED_PURCHASE = 'DELETED_PURCHASE'\nexport const PRINT_PURCHASE = 'PRINT_PURCHASE'\nexport const MULTIPLE_PRINT_PURCHASE = 'MULTIPLE_PRINT_PURCHASE'\nexport const MULTIPLE_DELETE_PURCHASE = 'MULTIPLE_DELETE_PURCHASE'\nexport const MULTIPLE_DELETED_PURCHASE = 'MULTIPLE_DELETED_PURCHASE'\n\n\n","import * as type from './types'\n\nexport function createPurchase(purchase) {\n    return {\n        type: type.CREATE_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function savedPurchase(purchase) {\n    return {\n        type: type.SAVED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        diff: true\n    };\n}\n\nexport function editPurchase(purchase) {\n    return {\n        type: type.EDIT_PURCHASE,\n        payload: purchase,\n        txn: 'initiated',\n    };\n}\n\nexport function updatedPurchase(purchase) {\n    return {\n        type: type.EDITED_PURCHASE,\n        payload: purchase.data.data,\n        txn: purchase.data.type,\n        msg: purchase.data.msg,\n        removeid: purchase.removeid,\n        diff: true\n    };\n}\n\nexport function fetchPurchase(link) {\n    return {\n        type: type.FETCH_PURCHASE,\n        payload: link\n    };\n}\n\nexport function fetchedPurchase(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE,\n        payload: purchase\n    };\n}\n\n\nexport function fetchPurchaseById(purchase) {\n    return {\n        type: type.FETCH_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\nexport function fetchedPurchaseById(purchase) {\n    return {\n        type: type.FETCHED_PURCHASE_BY_ID,\n        payload: purchase\n    };\n}\n\n\nexport function setNotifyDonePurchase(props) {\n    return {\n        type: type.NOTIFICATION_DONE_PURCHASE,\n        payload: props\n    };\n}\n\n\nexport function deletePurchase(purchase) {\n    return {\n        type: type.DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedPurchase(purchase) {\n    return {\n        type: type.DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function postPrintPurchase(id) {\n    return {\n        type: type.PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function postMultiplePrintPurchase(id) {\n    return {\n        type: type.MULTIPLE_PRINT_PURCHASE,\n        payload: id\n    };\n}\n\n\nexport function deleteMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETE_PURCHASE,\n        payload: purchase\n    };\n}\n\nexport function deletedMultiPurchase(purchase) {\n    return {\n        type: type.MULTIPLE_DELETED_PURCHASE,\n        payload: purchase\n    };\n}\n","import { call, takeEvery, all, put } from 'redux-saga/effects'\nimport { savedPurchase, fetchedPurchase, fetchedPurchaseById, deletedPurchase, updatedPurchase, deletedMultiPurchase } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Purchase \n\nfunction* createPurchase() {\n  yield takeEvery('CREATE_PURCHASE', savePurchase)\n}\n\nfunction* savePurchase(action) {\n  const { response, error } = yield call(savePurchaseAPI, action.payload)\n  if (response) yield put(savedPurchase({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction savePurchaseAPI(data) {\n  console.log(\"--------call saving time----------\")\n  return axios.post(URL + '/purchasetxn/create', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Edited Purchase \n\nfunction* editPurchase() {\n  yield takeEvery('EDIT_PURCHASE', saveEditedPurchase)\n}\n\nfunction* saveEditedPurchase(action) {\n  const { response, error } = yield call(editPurchaseAPI, action.payload)\n  console.log(response)\n  if (response) yield put(updatedPurchase({ data: response.data, msg: response.msg, type: response.type, removeid: action.payload.id }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction editPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/update', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Purchase by ID\n\nfunction* fetchPurchaseById() {\n  yield takeEvery('FETCH_PURCHASE_BY_ID', saveFetchedPurchaseById)\n}\n\nfunction* saveFetchedPurchaseById(action) {\n  const { response, error } = yield call(fetchPurchaseByIdAPI, action.payload)\n  if (response) yield put(fetchedPurchaseById(response.data))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction fetchPurchaseByIdAPI(data) {\n  let id = data\n  return axios.get(URL + '/purchasetxn/fetch/' + id, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchPurchase() {\n\n  yield takeEvery('FETCH_PURCHASE', requestPurchase)\n\n}\n\nfunction* requestPurchase(action) {\n  let { data } = yield call(requestPurchaseAPI, action.payload)\n  yield put(fetchedPurchase(data.data))\n}\n\nfunction requestPurchaseAPI(data) {\n  return axios.get(URL + '/purchasetxn/fetch/'+data, { crossDomain: true })\n}\n\n//#endregion\n\n//#region Saga for Delete Purchase \n\nfunction* deletePurchase() {\n  yield takeEvery('DELETE_PURCHASE', saveDeletePurchase)\n}\n\nfunction* saveDeletePurchase(action) {\n  const { response, error } = yield call(deletePurchaseAPI, action.payload)\n  if (response) yield put(deletedPurchase({ id: action.payload.id, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deletePurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/delete', data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Multiple Delete Purchase \n\nfunction* deleteMultiPurchase() {\n  yield takeEvery('MULTIPLE_DELETE_PURCHASE', saveDeleteMultiPurchase)\n}\n\nfunction* saveDeleteMultiPurchase(action) {\n  const { response, error } = yield call(deleteMultiPurchaseAPI, action.payload)\n  if (response) yield put(deletedMultiPurchase({ id: action.payload, msg: response.data.msg, type: response.data.type }))\n  else {\n    yield put(handlError(action, parseError(error)))\n    sagaErrorMessage(error, action)\n  }\n}\n\nfunction deleteMultiPurchaseAPI(data) {\n  return axios.post(URL + '/purchasetxn/multidelete/'+data, data, { crossDomain: true })\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for Post Purchase Print\n\nfunction* postPurchasePrint() {\n  yield takeEvery('PRINT_PURCHASE', sendPurchasePrint)\n}\n\nfunction* sendPurchasePrint(action) {\n  yield call(sendPurchasePrintAPI, action.payload)\n}\n\nfunction sendPurchasePrintAPI(data) {\n  window.open(URL+'/invoice/print/'+data, '_blank')\n}\n\n//#endregion\n\n\n\n//#region Saga for Post Purchase Multiple Print\n\nfunction* postPurchaseMultiPrint() {\n  yield takeEvery('MULTIPLE_PRINT_PURCHASE', sendPurchaseMultiPrint)\n}\n\nfunction* sendPurchaseMultiPrint(action) {\n  yield call(sendPurchaseMultiPrintAPI, action.payload)\n}\n\nfunction sendPurchaseMultiPrintAPI(data) {\n  window.open(URL+'/invoice/multiprint/'+data, '_blank')\n}\n\n//#endregion\n\n\nconst sagaErrorMessage = (error, action) => {\n  console.group(\"Saga Error:\" + action.type)\n  console.log(error)\n  console.groupEnd()\n}\n\nexport default function* purchaseSaga() {\n  yield all([\n    createPurchase(),\n    fetchPurchase(),\n    editPurchase(),\n    fetchPurchaseById(),\n    deletePurchase(),\n    postPurchasePrint(),\n    postPurchaseMultiPrint(),\n    deleteMultiPurchase()\n  ])\n}  ","export const SAVED_MISC = 'SAVED_MISC'\nexport const EDIT_MISC = 'EDIT_MISC'\nexport const FETCH_MISC = 'FETCH_MISC'\nexport const FETCHED_MISC = 'FETCHED_MISC'\nexport const NOTIFICATION_DONE_MISC = 'NOTIFICATION_DONE_MISC'\n","import * as type from './types'\n\nexport function savedMisc(misc) {\n    return {\n        type : type.SAVED_MISC,\n        payload : misc.data.data,\n        txn: misc.data.type,\n        msg: misc.data.msg,\n        diff : true\n    };\n}\n\nexport function editMisc(misc) {\n    return {\n        type : type.EDIT_MISC,\n        payload : misc,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchMisc(params) {\n    return {\n        type : type.FETCH_MISC,\n        payload : params\n    };\n}\n\nexport function fetchedMisc(misc) {\n    return {\n        type : type.FETCHED_MISC,\n        payload : misc\n    };\n}\n\n\nexport function setNotifyDoneMisc(props) {\n    return {\n        type : type.NOTIFICATION_DONE_MISC,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedMisc, fetchedMisc, fetchedMiscById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Edited Misc \n\nfunction* editMisc() {\n  yield takeEvery('EDIT_MISC',saveEditedMisc)\n}\n\nfunction* saveEditedMisc(action){\n  const { response, error } = yield call(editMiscAPI, action.payload)  \n  if (response) yield put (savedMisc({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editMiscAPI(data) {\n  return axios.post(URL+'/miscsettings/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchMisc() {\n\n  yield takeEvery('FETCH_MISC',requestMisc)\n\n}\n  \nfunction* requestMisc(action){\n\n  let { data } = yield call(requestMiscAPI, action.payload)\n  yield put (fetchedMisc(data.data))\n\n}\n\nfunction requestMiscAPI(data) {\n  return axios.get(URL+'/miscsettings/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* miscSaga() {\n    yield all([\n        fetchMisc(),\n        editMisc()\n    ])\n  }  ","import { call, takeEvery, all } from 'redux-saga/effects'\nimport URL from '../../../store/path'\n\n\n//#region Saga for Post Summary Register \n\nfunction* postSummaryRegister() {\n  yield takeEvery('POST_REGISTER_SUMMARY', sendSummaryRegister)\n}\n\nfunction* sendSummaryRegister(action) {\n  yield call(sendSummaryRegisterAPI, action.payload)\n}\n\nfunction sendSummaryRegisterAPI(data) {\n  window.open(URL+'/report/purchasesummary/'+ data, '_blank')\n}\n\n//#endregion\n\n\n//#region Saga for Post Summary Register \n\nfunction* postAllPartyRegister() {\n  yield takeEvery('POST_REGISTER_ALLPARTY', sendAllPartyRegister)\n}\n\nfunction* sendAllPartyRegister(action) {\n  yield call(sendAllPartyRegisterAPI, action.payload)\n}\n\nfunction sendAllPartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n//#region Saga for Post Summary Register \n\nfunction* postSinglePartyRegister() {\n  yield takeEvery('POST_REGISTER_SINGLEPARTY', sendSinglePartyRegister)\n}\n\nfunction* sendSinglePartyRegister(action) {\n  yield call(sendSinglePartyRegisterAPI, action.payload)\n}\n\nfunction sendSinglePartyRegisterAPI(data) {\n  window.open(URL+'/report/purchasedetail/'+data, '_blank')\n}\n\n//#endregion\n\n\nexport default function* registerSaga() {\n  yield all([\n    postSummaryRegister(),\n    postAllPartyRegister(),\n    postSinglePartyRegister()\n  ])\n}  ","export const CREATE_COMBINATION = 'CREATE_COMBINATION'\nexport const SAVED_COMBINATION = 'SAVED_COMBINATION'\nexport const EDIT_COMBINATION = 'EDIT_COMBINATION'\nexport const EDITED_COMBINATION = 'EDITED_COMBINATION'\nexport const FETCH_COMBINATION = 'FETCH_COMBINATION'\nexport const FETCHED_COMBINATION = 'FETCHED_COMBINATION'\nexport const FETCH_COMBINATION_BY_ID = 'FETCH_COMBINATION_BY_ID'\nexport const FETCHED_COMBINATION_BY_ID = 'FETCHED_COMBINATION_BY_ID'\nexport const NOTIFICATION_DONE_COMBINATION = 'NOTIFICATION_DONE_COMBINATION'\n","import * as type from './types'\n\nexport function createCombination(combination) {\n    return {\n        type : type.CREATE_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function savedCombination(combination) {\n    return {\n        type : type.SAVED_COMBINATION,\n        payload : combination.data.data,\n        txn: combination.data.type,\n        msg: combination.data.msg,\n        diff : true\n    };\n}\n\nexport function editCombination(combination) {\n    return {\n        type : type.EDIT_COMBINATION,\n        payload : combination,\n        txn : 'initiated',\n    };\n}\n\nexport function fetchCombination(params) {\n    return {\n        type : type.FETCH_COMBINATION,\n        payload : params\n    };\n}\n\nexport function fetchedCombination(combination) {\n    return {\n        type : type.FETCHED_COMBINATION,\n        payload : combination\n    };\n}\n\n\nexport function fetchCombinationById(combination) {\n    return {\n        type : type.FETCH_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function fetchedCombinationById(combination) {\n    return {\n        type : type.FETCHED_COMBINATION_BY_ID,\n        payload : combination\n    };\n}\n\nexport function setNotifyDoneCombination(props) {\n    return {\n        type : type.NOTIFICATION_DONE_COMBINATION,\n        payload: props\n    };\n}","import { call, takeEvery, all, put, select } from 'redux-saga/effects'\nimport { savedCombination, fetchedCombination, fetchedCombinationById } from './actions'\nimport axios from 'axios';\nimport { handlError, parseError } from '../../app/serverError'\nimport URL from '../../../store/path'\n\n//#region Saga for Create Combination \n\nfunction* createCombination() {\n    yield takeEvery('CREATE_COMBINATION',saveCombination)\n  }\n\nfunction* saveCombination(action){\n  const { response, error } = yield call(saveCombinationAPI, action.payload)\n  if (response) yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction saveCombinationAPI(data) {\n    return axios.post(URL+'/combination/add', data, {crossDomain: true})\n      .then(response => ({ response }))\n      .catch(error => ({ error }))\n  }\n\n//#endregion\n\n\n//#region Saga for Edited Combination \n\nfunction* editCombination() {\n  yield takeEvery('EDIT_COMBINATION',saveEditedCombination)\n}\n\nfunction* saveEditedCombination(action){\n  const { response, error } = yield call(editCombinationAPI, action.payload)  \n  if (response){ \n    console.log(\"response----------\", response)\n    yield put (savedCombination({ data: response.data, msg: response.msg, type: response.type }))}\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction editCombinationAPI(data) {\n  return axios.post(URL+'/setcombination/update', data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n\n//#region Saga for Getting Combination by ID\n\nfunction* fetchCombinationById() {\n  yield takeEvery('FETCH_COMBINATION_BY_ID',saveFetchedCombinationById)\n}\n\nfunction* saveFetchedCombinationById(action){\n  const { response, error } = yield call(fetchCombinationByIdAPI, action.payload)  \n  if (response) yield put (fetchedCombinationById(response.data))\n  else {\n    yield put (handlError(action, parseError(error)))\n    sagaErrorMessage(error,action)  \n  }\n}\n\nfunction fetchCombinationByIdAPI(data) {\n  let _id = data\n  return axios.post(URL+'/combination/'+ _id, data, {crossDomain: true})\n    .then(response => ({ response }))\n    .catch(error => ({ error }))\n}\n\n//#endregion\n\n//#region Saga for List Tasks \n\nfunction* fetchCombination() {\n\n  yield takeEvery('FETCH_COMBINATION',requestCombination)\n\n}\n  \nfunction* requestCombination(action){\n\n  let { data } = yield call(requestCombinationAPI, action.payload)\n  yield put (fetchedCombination(data.data))\n\n}\n\nfunction requestCombinationAPI(data) {\n  return axios.get(URL+'/setcombination/fetch/all', data, {crossDomain: true})\n}\n\n//#endregion\n\nconst sagaErrorMessage = (error, action) => {\n    console.group(\"Saga Error:\"+action.type)\n    console.log(error)\n    console.groupEnd()\n}\n\nexport default function* combinationSaga() {\n    yield all([\n        createCombination(),\n        fetchCombination(),\n        editCombination(),\n        fetchCombinationById()\n    ])\n  }  ","import { all } from 'redux-saga/effects'\nimport partySaga from '../modules/party/data/sagas'\nimport bankSaga from '../modules/bank/data/sagas'\nimport groupSaga from '../modules/group/data/sagas'\nimport finYearSaga from '../modules/finyear/data/sagas'\nimport standardSaga from '../modules/standard/data/sagas'\nimport milkRatesSaga from '../modules/milkRates/data/sagas'\nimport purchaseSaga from '../modules/purchase/data/sagas'\nimport miscSaga from '../modules/misc/data/sagas'\nimport registerSaga from '../modules/register/data/sagas'\nimport combinationSaga from '../modules/combination/data/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      finYearSaga(),\n      partySaga(),\n      bankSaga(),\n      groupSaga(),\n      standardSaga(),\n      milkRatesSaga(),\n      purchaseSaga(),\n      miscSaga(),\n      registerSaga(),\n      combinationSaga()\n    ])\n  } ","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a partys schema\nconst partySchema = new schema.Entity('partys',{}, { idAttribute: 'id' });\nconst partyListSchema = [partySchema];\n\n\nconst defaultPartyParams = {\n  createTitle: 'Create Party',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Party',\n  editSubmitButtonText: 'Update',\n  partyFetched: false,\n  savedPartyId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n      const normalizedParty = normalize(action.payload, partySchema);\n      return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'FETCHED_PARTY') {  \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }   \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PARTY') {\n      const partyID = action.payload.id;\n      return {...state, \n        [partyID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_PARTY') { \n        const normalizedParty = normalize(action.payload, partyListSchema);\n        return merge({},normalizedParty.entities.partys)\n    }  \n    if (action.type === 'DELETED_PARTY') {\n      if(action.payload.type === \"success\"){\n        const partyID = action.payload.id\n        let finalState = {...state}\n        delete finalState[partyID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PARTY') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PARTY'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPartyParams, action) {\n    if (action.type === 'FETCH_PARTY') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_PARTY') { \n        return {...state, \n          savedPartyId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_PARTY') { \n      return {...state, \n        savedPartyId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_PARTY') { \n      return {...state, \n        partyFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_PARTY_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst party = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default party;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a banks schema\nconst bankSchema = new schema.Entity('banks',{}, { idAttribute: 'id' });\nconst bankListSchema = [bankSchema];\n\n\nconst defaultBankParams = {\n  createTitle: 'Create Bank',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Bank',\n  editSubmitButtonText: 'Update',\n  bankFetched: false,\n  savedBankId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      const normalizedBank = normalize(action.payload, bankListSchema);\n      return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n      const normalizedBank = normalize(action.payload, bankSchema);\n      return merge({},normalizedBank.entities.banks)\n    }\n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_BANK') {\n      const bankID = action.payload.id;\n      return {...state, \n        [bankID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n        const normalizedBank = normalize(action.payload, bankListSchema);\n        return merge({}, normalizedBank.entities.banks)\n    } \n    if (action.type === 'DELETED_BANK') {\n      if(action.payload.type === \"success\"){\n        const bankID = action.payload.id\n        let finalState = {...state}\n        delete finalState[bankID]\n        return finalState\n      }else{\n        return state\n      }\n    }else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultBankParams, action) {\n    if (action.type === 'FETCH_BANK') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_BANK') { \n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_BANK'){\n      return {...state, \n        savedBankId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_BANK') { \n      return {...state, \n        bankFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_BANK_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst bank = combineReducers({\n  notifications,  \n  byId,\n  byListId,\n  params\n});\n\n\nexport default bank;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a groups schema\nconst groupSchema = new schema.Entity('groups',{}, { idAttribute: 'id' });\nconst groupListSchema = [groupSchema];\n\n\nconst defaultGroupParams = {\n  createTitle: 'Create Group',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Group',\n  editSubmitButtonText: 'Update',\n  groupFetched: false,\n  savedGroupId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id;\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n      const normalizedGroup = normalize(action.payload, groupListSchema);\n      return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n      const normalizedGroup = normalize(action.payload, groupSchema);\n      return merge({},normalizedGroup.entities.groups)\n    }\n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_GROUP') {\n      const groupID = action.payload.id\n      return {...state, \n        [groupID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_GROUP') { \n        const normalizedGroup = normalize(action.payload, groupListSchema);\n        return merge({},normalizedGroup.entities.groups)\n    } \n    if (action.type === 'DELETED_GROUP') {\n      if(action.payload.type === \"success\"){\n        const groupID = action.payload.id\n        let finalState = {...state}\n        delete finalState[groupID]\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_GROUP') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_GROUP'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultGroupParams, action) {\n    if (action.type === 'FETCH_GROUP') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_GROUP') { \n        return {...state, \n          savedGroupId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_GROUP') { \n      return {...state, \n        savedGroupId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_GROUP') { \n      return {...state, \n        groupFetched: true\n      }\n    } \n    if (action.type === 'FETCHED_GROUP_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst group = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default group;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a finYears schema\nconst finYearSchema = new schema.Entity('finYears',{}, { idAttribute: 'id' });\nconst finYearListSchema = [finYearSchema];\n\n\nconst defaultFinYearParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  finYearFetched: false,\n  savedFinYearId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n      const normalizedFinYear = normalize(action.payload, finYearSchema);\n      return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') {\n      const finYearID = action.payload.id;\n      return {...state, \n        [finYearID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR') { \n        const normalizedFinYear = normalize(action.payload, finYearListSchema);\n        return merge({},normalizedFinYear.entities.finYears)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_FINYEAR') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_FINYEAR'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultFinYearParams, action) {\n    if (action.type === 'FETCH_FINYEAR') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_FINYEAR') { \n        return {...state, \n          savedFinYearId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_FINYEAR') { \n      return {...state, \n        savedFinYearId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_FINYEAR') { \n      return {...state, \n        finYearFetched: true\n      }\n    }\n    if (action.type === 'FETCHED_FINYEAR_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst finYear = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default finYear;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a standards schema\nconst standardSchema = new schema.Entity('standards',{}, { idAttribute: 'type' });\nconst standardListSchema = [standardSchema];\n\n\nconst defaultStandardParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedStandardId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_STANDARD') { \n      const normalizedStandard = normalize(action.payload, standardListSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n      const normalizedStandard = normalize(action.payload, standardSchema);\n      return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') {\n      const standardID = action.payload.type;\n      return {...state, \n        [standardID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_STANDARD') { \n        const normalizedStandard = normalize(action.payload, standardListSchema);\n        return merge({},normalizedStandard.entities.standards)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_STANDARD') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_STANDARD'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultStandardParams, action) {\n    if (action.type === 'FETCH_STANDARD') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_STANDARD') { \n        return {...state, \n          savedStandardId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_STANDARD') { \n      return {...state, \n        savedStandardId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_STANDARD_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst standard = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default standard;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a milkRates schema\nconst milkRatesSchema = new schema.Entity('milkRates',{}, { idAttribute: 'type' });\nconst milkRatesListSchema = [milkRatesSchema];\n\n\nconst defaultMilkRatesParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMilkRatesId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_MILKRATES') {\n    const milkRatesID = action.payload.type\n    return {...state, \n      [milkRatesID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_MILKRATES') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n      const normalizedMilkRates = normalize(action.payload, milkRatesSchema);\n      return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') {\n      const milkRatesID = action.payload.type\n      return {...state, \n        [milkRatesID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MILKRATES') { \n        const normalizedMilkRates = normalize(action.payload, milkRatesListSchema);\n        return merge({},normalizedMilkRates.entities.milkRates)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MILKRATES') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MILKRATES'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMilkRatesParams, action) {\n    if (action.type === 'FETCH_MILKRATES') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_MILKRATES') { \n        return {...state, \n          savedMilkRatesId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MILKRATES') { \n      return {...state, \n        savedMilkRatesId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_MILKRATES_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst milkRates = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default milkRates;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a purchases schema\nconst purchaseSchema = new schema.Entity('purchases',{}, { idAttribute: 'id' });\nconst purchaseListSchema = [purchaseSchema];\n\n\nconst defaultPurchaseParams = {\n  createTitle: 'Create Milk Purchase',\n  createSubmitButtonText: 'Create',\n  editTitle: 'Update Milk Purchase',\n  editSubmitButtonText: 'Update',\n  purchaseFetched: false,\n  purchaseDeleted: false,\n  savedPurchaseId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n      const normalizedPurchase = normalize(action.payload, purchaseSchema);\n      return merge({},normalizedPurchase.entities.purchases)\n    }\n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        let finalState = {...state}\n        let purchaseID = action.payload.id\n        let idObj = purchaseID.split(\",\")\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_PURCHASE') {\n      const purchaseID = action.payload.id;\n      return {...state, \n        [purchaseID]: action.payload\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') {\n      const purchaseID = action.payload.id\n      const removeID = action.removeid\n      let finalState = {...state, \n        [purchaseID]: action.payload\n      }\n      delete finalState[removeID]\n      return finalState\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n        const normalizedPurchase = normalize(action.payload, purchaseListSchema);\n        return merge({}, normalizedPurchase.entities.purchases)\n    } \n    if (action.type === 'DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        let finalState = {...state}\n        delete finalState[purchaseID]\n        return finalState\n      }else{\n        return state\n      }\n    }\n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') {\n      if(action.payload.type === \"success\"){\n        const purchaseID = action.payload.id\n        const idObj = purchaseID.split(\",\")\n        let finalState = {...state}\n        for(let i = 0; i < idObj.length; i++){\n          if(idObj[i] !== null && idObj[i] !== undefined && idObj[i] !== \"\" ){\n            let singleId = idObj[i]\n            delete finalState[singleId]\n          }\n        }\n        return finalState\n      }else{\n        return state\n      }\n    } else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'DELETED_PURCHASE') {\n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          delete: { \n            status : action.payload.type === \"success\" ? 'success' : 'error',\n            msg : action.payload.msg\n          }\n        }\n      }\n    } \n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultPurchaseParams, action) {\n    if (action.type === 'FETCH_PURCHASE') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'EDITED_PURCHASE') { \n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if(action.type === 'NOTIFICATION_DONE_PURCHASE'){\n      return {...state, \n        savedPurchaseId: action.payload.id\n      }\n    }\n    if (action.type === 'FETCHED_PURCHASE') { \n      return {...state, \n        purchaseFetched: true\n      }\n    }  \n    if (action.type === 'FETCHED_PURCHASE_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    }   \n    if (action.type === 'MULTIPLE_DELETE_PURCHASE') { \n        return {...state,\n          purchaseDeleted: true\n        }\n    } \n    if (action.type === 'MULTIPLE_DELETED_PURCHASE') { \n      return {...state,\n        purchaseDeleted: false\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst purchase = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default purchase;\n","import { combineReducers } from 'redux';\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr';\nimport moment from 'moment'\n\n// Define a miscs schema\nconst miscSchema = new schema.Entity('miscs',{}, { idAttribute: 'name' });\nconst miscListSchema = [miscSchema];\n\n\nconst defaultMiscParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedMiscId: 0\n}\n\n\nfunction byId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }    \n    if (action.type === 'FETCHED_MISC') { \n      const normalizedMisc = normalize(action.payload, miscListSchema);\n      return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_MISC') {\n      const miscID = action.payload.name;\n      return {...state, \n        [miscID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_MISC') { \n        const normalizedMisc = normalize(action.payload, miscListSchema);\n        return merge({},normalizedMisc.entities.miscs)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_MISC') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_MISC'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultMiscParams, action) {\n    if (action.type === 'FETCH_MISC') { \n        return {...state, \n          searchParams: action.payload\n        }\n    }\n    if (action.type === 'SAVED_MISC') { \n        return {...state, \n          savedMiscId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_MISC') { \n      return {...state, \n        savedMiscId: action.payload.id\n      }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst misc = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default misc;\n","import { combineReducers } from 'redux'\nimport { merge } from 'lodash'\nimport { normalize, schema } from 'normalizr'\n\n// Define a combination schema\nconst combinationSchema = new schema.Entity('combination',{}, { idAttribute: 'id' });\nconst combinationListSchema = [combinationSchema];\n\n\nconst defaultCombinationParams = {\n  createTitle: '',\n  createSubmitButtonText: 'Save',\n  editTitle: '',\n  editSubmitButtonText: 'Update',\n  savedCombinationId: 0\n}\n\n\nfunction byId(state = {}, action) {\n  if (action.type === 'SAVED_COMBINATION') {\n    const combinationID = action.payload.id\n    return {...state, \n      [combinationID]: action.payload\n    }\n  }\n    if (action.type === 'FETCHED_COMBINATION') {\n      console.log(\"--action.payload--\", action.payload) \n      const normalizedCombination = normalize(action.payload, combinationListSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n      const normalizedCombination = normalize(action.payload, combinationSchema);\n      return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n\n  function byListId(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') {\n      const combinationID = action.payload.id\n      return {...state, \n        [combinationID]: action.payload\n      }\n    }\n    if (action.type === 'FETCHED_COMBINATION') { \n        const normalizedCombination = normalize(action.payload, combinationListSchema);\n        return merge({},normalizedCombination.entities.combination)\n    } \n    else {\n      return state\n    }\n  }\n\n  \n\n  function notifications(state = {}, action) {\n    if (action.type === 'SAVED_COMBINATION') { \n      return {...state, \n        [action.payload.id]: { ...state[action.payload.id],\n          save: { \n            status : action.txn === \"success\" ? 'success' : 'error',\n            msg : action.msg\n          }\n        }\n      }\n    } \n    if(action.type === 'NOTIFICATION_DONE_COMBINATION'){\n      const {id, type} = action.payload\n      // Remove the 'id' element from state\n      const { [id]: idValue, ...restOfState } = state;\n      // Remove the 'type' from the 'id' element\n      const { [type]: removedValue, ...restOfId } = idValue;\n      // Merge back together\n      const finalState = { ...restOfState, [id]: restOfId };     \n      return finalState\n  \n    } else {\n      return state\n    }\n  }\n\n  function params(state = defaultCombinationParams, action) {\n    if (action.type === 'FETCH_COMBINATION') { \n        return {...state, \n          searchParams: action.payload\n        }\n    } \n    if (action.type === 'SAVED_COMBINATION') { \n        return {...state, \n          savedCombinationId: action.payload.id\n        }\n    } \n    if (action.type === 'NOTIFICATION_DONE_COMBINATION') { \n      return {...state, \n        savedCombinationId: action.payload.id\n      }\n    } \n    if (action.type === 'FETCHED_COMBINATION_BY_ID') { \n        return {...state,\n          searchParams: {}\n        }\n    } \n    else {\n        return state\n    }\n  }\n\n\n\nconst combination = combineReducers({\n    byId,\n    byListId,\n    params,\n    notifications\n});\n\n\nexport default combination;\n","import { txns } from './store/txnMiddleware'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport party from './modules/party/data/reducers'\nimport bank from './modules/bank/data/reducers'\nimport group from './modules/group/data/reducers'\nimport finYear from './modules/finyear/data/reducers'\nimport standard from './modules/standard/data/reducers'\nimport milkRates from './modules/milkRates/data/reducers'\nimport purchase from './modules/purchase/data/reducers'\nimport misc from './modules/misc/data/reducers'\nimport combination from './modules/combination/data/reducers';\n\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    txns,\n    finYear,\n    party,\n    bank,\n    group,\n    standard,\n    milkRates,\n    purchase,\n    misc,\n    combination\n})\n\nexport default rootReducer","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport createSagaMiddleware from 'redux-saga'\nimport { throttle } from 'lodash'\n\nimport monitorReducersEnhancer from './store/monitorReducers'\nimport loggerMiddleware from './store/logger'\nimport { txnMiddleware } from './store/txnMiddleware' //logActionDiff\nimport { loadState, saveState } from './store/localStorage';\nimport rootSaga from './store/sagas'\nimport rootReducer from './reducers'\n\nimport { fetchFinYear } from './modules/finyear/data/actions'\nimport { fetchBank } from './modules/bank/data/actions'\nimport { fetchGroup } from './modules/group/data/actions'\nimport { fetchParty } from './modules/party/data/actions'\nimport { fetchStandard } from './modules/standard/data/actions'\nimport { fetchMilkRates } from './modules/milkRates/data/actions'\nimport { fetchMisc } from './modules/misc/data/actions'\nimport { fetchCombination } from './modules/combination/data/actions'\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const history = createBrowserHistory({\n  basename: '/dairyfarm',\n});\n\nexport default function configureAppStore() {\n\n  const preloadedState = loadState();\n\n  const store = configureStore({\n    reducer: rootReducer(history),\n    middleware: [sagaMiddleware,txnMiddleware,loggerMiddleware,routerMiddleware(history), ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer(history)))\n  }  \n\n  sagaMiddleware.run(rootSaga)\n\n  store.subscribe(throttle(() => {\n    saveState({\n      // loginDetails : store.getState().loginDetails,\n      // messagesById: store.getState().messagesById,\n      // messagesPrimary : store.getState().messagesPrimary\n    });\n  }), 1000);\n  store.dispatch(fetchCombination())\n  store.dispatch(fetchFinYear())\n  store.dispatch(fetchBank())\n  store.dispatch(fetchGroup())\n  store.dispatch(fetchParty())\n  store.dispatch(fetchStandard(\"SetStandard\"))\n  store.dispatch(fetchMilkRates(\"SetPriceRate\"))\n  store.dispatch(fetchMisc())\n  console.log(\"call\")\n  return store\n}\n\n\n\n","export const menu = [\n  {\n    icon: '',\n    title: 'Master',\n    submenu: [\n      {\n        icon: '',\n        title: 'Bank',\n        list: '/bank/list',\n        label: 'Bank'\n      },\n      {\n        icon: '',\n        title: 'Group',\n        list: '/group/list',\n        label: 'Group'\n      },\n      {\n        icon: '',\n        title: 'Party',\n        list: '/party/list',\n        label: 'Party'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Transaction',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase',\n        list: '/purchase/list',\n        label: 'Milk Purchase'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Settings',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Rates',\n        list: '/milkRates/update',\n        label: 'Milk Rates'\n      },\n      {\n        icon: '',\n        title: 'Standard',\n        list: '/standard/update',\n        label: 'Standard'\n      },\n      {\n        icon: '',\n        title: 'Misc',\n        list: '/misc/update',\n        label: 'Misc'\n      },\n      {\n        icon: '',\n        title: 'Combination',\n        list: '/combination/update',\n        label: 'Combination'\n      }\n    ]\n  },\n  {\n    icon: '',\n    title: 'Reports',\n    submenu: [\n      {\n        icon: '',\n        title: 'Milk Purchase Register',\n        list: '/register/list',\n        label: 'Milk Purchase Register'\n      }\n    ]\n  }\n]","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Notification = ({ id, notifySelector, type, notifyDoneAction }, props) => {\n    const notifyObj = useSelector(state => notifySelector(state, id))\n    console.log(\"id-------------------\", id)\n    console.log(\"notifyObj-------------------\", notifyObj)\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        if(id !== 0 && notifyObj){\n            const options = {\n                position: \"bottom-center\",\n                autoClose: 3000,\n                hideProgressBar: true\n            }\n            const getNotObj = type === \"save\" ? notifyObj.save : type === \"edit\" ? notifyObj.edit : type === \"delete\" ? notifyObj.delete : {}\n            if(getNotObj){\n                toast[getNotObj.status]( getNotObj.msg, options );\n                dispatch(notifyDoneAction({id, type}))\n            }\n        }\n    })\n\n    if (notifyObj){\n    return (\n        <ToastContainer transition={Slide}/>\n    )} else return null\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteParty, setNotifyDoneParty, partyPrint } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchParty } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\nimport { getGroupById } from '../../group/data/selectors'\nimport { getBankById } from '../../bank/data/selectors'\n\nconst Party = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.party.status === 1 ? false : true\n\n    const [deletePartyId, setDeletePartyId] = useState(false)\n    const [modalOption, setModalOption] = useState({ status: false, id: 0 })\n\n    const group = useSelector(state => getGroupById(state, props.party ? props.party.groupMaster ? props.party.groupMaster.id : 0 : 0))\n    const bank = useSelector(state => getBankById(state, props.party ? props.party.bankMaster ? props.party.bankMaster.id : 0 : 0))\n\n    const deletePartyFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deleteParty(getVlaue))\n        setDeletePartyId(values)\n        setModalOption({ status: false, id: 0 })\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.party.partyName}</Table.Cell>\n            <Table.Cell>{props.party.phone}</Table.Cell>\n            <Table.Cell>{group ? group.groupName !== undefined ? group.groupName : '' : ''}</Table.Cell>\n            <Table.Cell>{bank ? bank.bankName !== undefined ? bank.bankName : '' : '' + \" - \" + props.party.partyBankAccNo}</Table.Cell>\n            <Table.Cell textAlign='right' style={{ width: '10%' }}>{props.party.balance > 0 ? props.party.balance : (props.party.balance * -1)} {parseFloat(props.party.balance) >= 0 ? \"Dr\" : \"Cr\"}</Table.Cell>\n            <Table.Cell textAlign='center' style={{ width: '10%' }}>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/party/edit/\" + props.party.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({ status: true, id: props.party.id })}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                    {\n                        deletePartyId ?\n                            <Notification id={deletePartyId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneParty} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({ status: false, id: 0 })}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Party?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePartyFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes' />\n                        <Button onClick={() => setModalOption({ status: false, id: 0 })} negative labelPosition='right' icon='close' content='No' />\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PartyList = (props) => {\n    // Loading Logic if tasks not fetched\n    const party = useSelector(state => select.getPartyList(state, props))\n    const partyFetched = useSelector(state => select.getIsPartyFetched(state, props))\n    const dispatch = useDispatch()\n\n    const addPartyClick = () => {\n        props.history.push('/party/create');\n    }\n\n    const printPartyDetails = () => {\n        dispatch(partyPrint())\n    }\n\n    useEffect(() => {\n        dispatch(fetchParty())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Party List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addPartyClick()}>\n                            Add Party<Icon name='add' />\n                        </Button>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => printPartyDetails()}>\n                            Print<Icon name='print' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '5%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Party Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '15%' }}>Phone</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Group</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '20%' }}>Bank & A/C No</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='right' style={{ width: '10%' }}>Balance</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center' style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!partyFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"7\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(party).map((key, index) =>\n                                <Party party={party[key]} key={party[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PartyList;\n","\n/*\n * @param str (Given Date String)\n * @param dateObj (Date Field Object)\n * @description This function is called when str is not blank.\n */\nexport const checkValidDateFormats = (str) => {\n    str = str.replace(/[ ]/gi, \"-\").replace(/[*]/gi, \"-\").replace(/[.]/gi, \"-\").replace(/[+]/gi, \"-\").replace(/[/]/gi, \"-\")\n    let split_str = str.split(\"-\");\n    if (split_str.length <= 3) { // Within dd,MM and yyyy.\n        let DD = parseInt(split_str[0], 10) < 10 ? \"0\" + parseInt(split_str[0], 10) : parseInt(split_str[0]),\n            MM = parseInt(split_str[1], 10) < 10 ? \"0\" + parseInt(split_str[1], 10) : parseInt(split_str[1]),\n            YY = split_str[2],\n            isDD = !isNaN(DD) && DD ? true : false,\n            isMM = !isNaN(MM) && MM ? true : false,\n            isYY = !isNaN(YY) && YY ? true : false,\n            currDate = getCurrentDate(\"yyyy-MM-dd\"),\n            reqDate = \"\";\n\n        if ((isDD === true && isMM === true  && isYY === true)) {    // All three (dd-MM-yyy)\n            let isValidDay1 = checkDay(DD, MM, YY);\n            let isValidMonth1 = checkMonth(MM);\n            if (isValidDay1 === true && isValidMonth1 === true) {\n                return setYear(DD, MM, YY);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\");\n            }\n        } else if (isDD === true && isMM === true && split_str.length === 2) {            // Only first two (dd-MM)\n            let isValidDay2 = checkDay(DD, MM, YY);\n            let isValidMonth2 = checkMonth(MM);\n            if (isValidDay2 === true && isValidMonth2 === true) {\n                reqDate = getYear(DD, MM, currDate);\n                return reqDate\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else if (isDD === true && split_str.length === 1) {                                                // Only first one (dd)\n            let isValidDay3 = checkDay(DD, MM, YY);\n            if (isValidDay3 === true) {\n                reqDate = getMonthYear(DD, currDate);\n                return reqDate\n                // checkValidDateFormats(reqDate);\n            } else {\n                console.log(\"Date out of range. Please ensure you enter proper date.\")\n            }\n        } else {\n            console.log(\"Please enter proper date in 'dd-MM-yyyy' format.\");\n        }\n    } else { // Not Within dd,MM and yyyy.\n        console.log(\"Please enter date in 'dd-MM-yyyy' format.\")\n    }\n}\n\n\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @return true if DD satisfy the valid day range, else false\n */\nfunction checkDay(DD, MM, YY){\n    var validDateRange = 31;\n    if(MM !== undefined && !isNaN(MM)){\n        if(MM === 1 || MM ===3 || MM === 5 || MM === 7 || MM === 8 || MM === 10 || MM === 12){\n            validDateRange = 31;\n        }else if(MM === 2){\n            if(YY === undefined){\n                console.log('YY not defined')\n            }\n            var isLeapYear = isleap(YY);\n            validDateRange = isLeapYear === true ? 29 : 28;\n        }else{\n            validDateRange = 30;\n        }\n    }    \n    return DD !== 0 ? (DD <= validDateRange ? true : false) : false;\n}\n\n/*\n * @param MM (Given Month)\n * @return true if MM satisfy the valid month range, else false\n */\nfunction checkMonth(MM){\n    var validMonthRange = 12;\n    return MM !== 0 ? (MM <= validMonthRange ? true : false) : false;\n}\n\n/*\n * @param dateObj (Date Field Object)\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param YY (Given Year)\n * @description This function is called when DD, MM and YY is given.\n * Checks valid Year format and set required Date to the Date field.\n */\nfunction setYear(DD, MM, YY){\n    var yyStrLen = YY.length,\n    prefixStr = \"\",\n    reqDate = DD+\"-\"+MM+\"-\"+YY;\n    //    console.log(\"DD: \"+DD+\"\\nMM: \"+MM+\"\\nYY: \"+YY+\"\\nyyStrLen: \"+yyStrLen)\n    if(yyStrLen === 2){\n        prefixStr = parseInt(YY, 10) >= 80 && parseInt(YY, 10) <= 99 ? \"19\" : \"20\";\n        reqDate = DD+\"-\"+MM+\"-\"+prefixStr+YY;\n    }else if(yyStrLen === 4){\n        if(parseInt(YY,10) < 1980){\n            console.log(\"Year cannot be less than 1980\");\n        }\n    }\n    if(yyStrLen !== 2 && yyStrLen !== 4){\n        console.log(\"Date out of range. Please ensure you enter proper date.\");\n    }\n    // const rDt = getDateInYYYYMMDD(reqDate, \"-\", \"-\")\n    // console.log('DD MM YY',reqDate)\n    return reqDate\n}\n\n/*\n * @param DD (Given Day)\n * @param MM (Given Month)\n * @param currDate (Current Date)\n * @description This function is called when DD and MM is given.\n * @return Required Date\n */\nfunction getYear(DD, MM, currDate){\n    // console.log(\"DD: \"+DD+\"\\nMM: \"+MM)\n\n    const vfDt = currDate\n        \n    //console.log(\"v_fromDate: \"+vfDt)\n    var yy = vfDt.split(\"-\")[0],\n    mm = vfDt.split(\"-\")[1],\n    nextYY = parseInt(yy, 10) + 1,\n    calDate = yy+\"-\"+MM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+MM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    // console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate);\n    // alert(parseInt(MM, 10)+\" > \"+parseInt(mm, 10))\n    if(parseInt(MM, 10) <  parseInt(mm, 10)){\n        diff1 = dateDiff(vfDt, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(vfDt, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) > parseInt(diff2, 10) ? DD+\"-\"+MM+\"-\"+yy : DD+\"-\"+MM+\"-\"+nextYY;\n    // alert(parseInt(diff1, 10) +\">\" +parseInt(diff2, 10))\n    //  console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }\n    else{\n        reqDate = DD+\"-\"+MM+\"-\"+yy;\n    }\n    return reqDate;\n}\n\n/*\n * @param DD (Given Day)\n * @param currDate (Current Date)\n * @description This function is called when only DD is given.\n * @return Required Date\n */\nfunction getMonthYear(DD, currDate){\n    //    console.log(\"DD: \"+DD)\n    var yy = currDate.split(\"-\")[0],\n    mm = currDate.split(\"-\")[1],\n    dd = currDate.split(\"-\")[2],\n    nextMM = parseInt(mm, 10) === 12 ? '01' : ((parseInt(mm, 10) + 1) < 10 ? \"0\"+(parseInt(mm, 10) + 1) : (parseInt(mm, 10) + 1)),\n    prevMM = parseInt(mm, 10) === 1 ? 12 : ((parseInt(mm, 10) - 1) < 10 ? \"0\"+(parseInt(mm, 10) - 1) : (parseInt(mm, 10) - 1)),\n    nextYY = parseInt(mm, 10) === 12 ? parseInt(yy, 10) + 1 : yy,\n    prevYY = parseInt(mm, 10) === 1 ? parseInt(yy, 10) - 1 : yy,\n    calDate = yy+\"-\"+mm+\"-\"+DD,\n    prevDate = prevYY+\"-\"+prevMM+\"-\"+DD,\n    nextDate = nextYY+\"-\"+nextMM+\"-\"+DD,\n    diff1 = \"\",\n    diff2 = \"\",\n    reqDate = \"\";\n    //    console.log(\"calDate: \"+calDate+\"\\nprevDate: \"+prevDate+\"\\nnextDate: \"+nextDate)\n    if(parseInt(DD, 10) > parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, prevDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+prevMM+\"-\"+prevYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else if(parseInt(DD, 10) < parseInt(dd, 10)){\n        diff1 = dateDiff(currDate, calDate);\n        diff1 = parseInt(diff1, 10) < 0 ? (parseInt(diff1, 10) * (-1)) : diff1;\n        diff2 = dateDiff(currDate, nextDate);\n        diff2 = parseInt(diff2, 10) < 0 ? (parseInt(diff2, 10) * (-1)) : diff2;\n        reqDate = parseInt(diff1, 10) < parseInt(diff2, 10) ? DD+\"-\"+mm+\"-\"+yy : DD+\"-\"+nextMM+\"-\"+nextYY;\n    //        console.log(\"diff1: \"+diff1+\"\\ndiff2: \"+diff2)\n    }else{\n        reqDate = DD+\"-\"+mm+\"-\"+yy;\n    }  \n    return reqDate;\n}\n\n/*\n * @param YY (Given Year)\n * @return true if the given year is a Leap Year, else false\n */\nfunction isleap(YY){\n    var yr = YY;\n    if ((parseInt(yr, 10) % 4) === 0){\n        if (parseInt(yr, 10) % 100 === 0){\n            if (parseInt(yr, 10) % 400 !== 0){\n                //                alert(\"Not Leap\");\n                return false;\n            }else if(parseInt(yr, 10) % 400 === 0){\n                //                alert(\"Leap\");\n                return true;\n            }\n        }else if(parseInt(yr, 10) % 100 !== 0){\n            //            alert(\"Leap\");\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * @param format (Required Format)\n * @return Current Date\n */\nfunction getCurrentDate(format){\n    var d = new Date(),\n    dd = d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\n    mm = (d.getMonth() + 1) < 10 ? \"0\"+(d.getMonth() + 1) : (d.getMonth() + 1),\n    yyyy = d.getFullYear(),\n    currDate = \"\";\n    if(format === \"yyyy-MM-dd\"){\n        currDate = yyyy + \"-\" + mm + \"-\" + dd;\n    }else if(format === \"dd-MM-yyyy\"){\n        currDate = dd + \"-\" + mm + \"-\" + yyyy;\n    }\n    return currDate;\n}\n\n/*\n * @param date (Given Date)\n * @param separator (Given Separator)\n * @param reqseparator (Required Separator)\n * @return Given Date in yyyy-MM-dd\n */\nexport function getDateInYYYYMMDD(date){\n    if(date !== undefined) {\n        const date_split = date.split('-')\n        return  date_split[2] + '-' + date_split[1] + '-' + date_split[0];    \n    } else\n        return date\n}\n\n/*\n * @param v_fromDate (Voucher Period From Date)\n * @param v_toDate (Voucher Period To Date)\n * @param date (Given Date)\n * @return true if given date is within period range, else false\n */\n/*\n * @return Difference between two dates in number of day\n */\nfunction dateDiff(date1, date2){ //date1: To Date(greater)-----date2: From Date(smaller)\n    //    console.log(\"date1: \"+date1+\"\\ndate2: \"+date2)\n    var dt1 = new Date(date1);\n    var dt2 = new Date(date2);\n    var oneDay=1000*60*60*24;    \n    return Math.ceil((dt1.getTime()-dt2.getTime())/oneDay);\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorMessage } from 'formik'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport NumberFormat from 'react-number-format';\nimport { isObject, startCase, toLower, get } from \"lodash\";\nimport { Form, Radio, Input, Label, Dropdown, TextArea, Loader } from 'semantic-ui-react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { checkValidDateFormats, getDateInYYYYMMDD } from './dateUtils'\nimport { debounce } from 'lodash'\n\n\nexport function getValueFromEvent(e) {\n  const { target } = e;\n  let newValues;\n  if (target) {\n    const value = (target.type === \"checkbox\") ? target.checked : target.value;\n    newValues = { [target.name]: value }\n  }\n  else if (isObject(e)) { newValues = e; }\n  return newValues;\n}\n\n\nexport const FormikInputComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, disabled, isReadonly,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      <Input name={field.name}\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={field.value}\n        autoFocus={focus ? focus : false}\n        style={{width: '100%'}}\n        readOnly = {isReadonly ? isReadonly : false}\n        disabled = {disabled ? disabled : false}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  );\n\n\n  export const FormikDateComponent = ({\n    isLabel, label, placeholder, width, focus, isTxn, setDateManually,\n    field, // { name, value, onChange, onBlur }\n    form: { touched, errors, values, handleChange, setFieldValue, dirty }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n    ...props\n  }) => {\n  \n  const [dt, setDt] = useState((setDateManually && setDateManually !== undefined && setDateManually !== \"\") ? moment(setDateManually).toDate() : field.value ? moment(field.value).toDate() : null)\n  let rawEvent = ''\n  useEffect(() => {\n    if(setDateManually !== undefined && setDateManually !== \"\" && setDateManually !== 0){\n      setFieldValue(field.name, setDateManually)\n      // console.log(\"_-------------done-1------------_\", setDateManually)\n      setDt(moment(setDateManually).toDate())\n    }else{\n      if(setDateManually !== undefined && setDateManually !== \"\"){\n        setFieldValue(field.name, setDateManually)\n        // console.log(\"_-------------done-2------------_\", setDateManually)\n        setDt(moment(setDateManually).toDate())\n      }\n    }\n  }, [setDateManually])\n\n  const handleDateChange = (e) => {\n    if (rawEvent.type === 'change'){\n        let str = rawEvent.target.value\n        const dt1 = checkValidDateFormats(str)\n        handleChange(dt1)\n        setFieldValue(field.name, getDateInYYYYMMDD(dt1))\n        setDt(moment(getDateInYYYYMMDD(dt1)).toDate())  \n    } else {\n        setDt(e)\n        const dt = moment(e)\n        handleChange(dt.format(\"DD-MM-YYYY\"))\n        setFieldValue(field.name, dt.format(\"YYYY-MM-DD\"))\n    }\n  }\n\n  return (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n      <Form.Field style={{width: '100%'}} width={width ? width : null} error={get(errors,field.name) && get(touched,field.name)}>\n        {errors[field.name] && touched[field.name] && !isTxn ?\n          <label>{errors[field.name]}</label> :\n          <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        <DatePicker\n          name={field.name}\n          placeholderText={placeholder}\n          dateFormat=\"dd-MM-yyyy\"\n          scrollableYearDropdown\n          selected={field.value ? dt : null}\n          onChange={handleDateChange}\n          onChangeRaw={e=> rawEvent = e}\n          autoComplete='off'\n          autoFocus={focus ? focus : false}\n          style={{width: '100%'}}\n        />\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikAmountComponent = ({\n  isLabel, label, saveOnBlur, decimal, compute, isTxn, path, placeholder, focus, setValue, disabled, setStateValue, isReadonly, onChangeFunc, onchangeset,\n  field, // { name, value, onChange, onBlur }\n  index,\n  form: { touched, errors, values, handleSubmit, handleBlur, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) =>  {\n\n  useEffect(() => {\n    if(setValue !== undefined && setValue !== \"\" && setValue !== 0){\n      setFieldValue(field.name, setValue)\n    }else{\n      if(setValue !== undefined && setValue !== \"\"){\n        setFieldValue(field.name, setValue)\n      }\n    }\n  }, [setValue])\n\n  const setValueChange = (setFieldValue, val) => {\n    setFieldValue(field.name, val)\n    if(setStateValue){\n      setStateValue(val !== undefined && val !== \"\" ? val : 0)\n    }\n    if(onChangeFunc){\n      onChangeFunc(val !== undefined && val !== \"\" ? val : 0, setFieldValue)\n    }\n    if(onchangeset){\n      onchangeset(values, setFieldValue)\n    }\n  }\n\n  return(\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <NumberFormat \n        thousandSeparator={true} \n        thousandsGroupStyle=\"lakh\"\n        decimalScale = {(decimal) ? decimal : 2 }\n        placeholder={placeholder}\n        name={field.name}\n        value={field.value}\n        onValueChange={(val) => setValueChange(setFieldValue, val.floatValue)}\n        autoFocus={focus ? focus : false}\n        disabled = {disabled ? disabled : false}\n        style={{textAlign: \"right\", width: '100%'}}\n        readOnly={isReadonly ? isReadonly : false}\n        onBlur={(e) =>{\n          // e.persist()\n          // handleBlur(e)\n          if (compute) compute(values, index, setFieldValue)\n        }}\n      />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n  )\n}\n\n\nexport const FormikCheckBoxComponent = ({\n  userProps, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n      <Radio\n      name={field.name}\n      id={userProps.id}\n      value={userProps.id}\n      checked={userProps.id === field.value}\n      onChange={field.onChange}\n      autoFocus={focus ? focus : false}\n    />&nbsp;&nbsp;<b>{userProps.id}</b>\n      {/* {errors[field.name] && touched[field.name] ?\n        <label>{errors[field.name]}</label> :\n        <label>{userProps.isLabel ? null : startCase(toLower(field.name))}</label>} */}\n    </Form.Field>\n  );  \n\nexport const FormikSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, placeholder,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\nconst onChange = (value) => {\n  setFieldValue(field.name, value)\n  if (userProps.getValue)\n    userProps.getValue(value);\n}\n\nuseEffect(() => {\n  if(userProps.setValue && userProps.setField){\n    userProps.setField(field.name, userProps.setValue)\n  }\n}, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n      search\n      selection={isSelection ? true : false}\n      id={field.id}\n      name={field.name}\n      placeholder={placeholder}\n      options={userProps.options}\n      value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n      onChange={(e, { value }) => onChange(value)}\n      autoFocus={focus ? focus : false}\n      clearable\n      disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n      style={{width: '100%'}}\n      />     \n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikMultiSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n  \n  useEffect(() => {\n    if(userProps.setValue && userProps.setField){\n      userProps.setField(field.name, userProps.setValue)\n    }\n  }, [userProps.setValue])\n\nreturn (\n  // <Form.Field error={errors[field.name] && touched[field.name]}>\n  <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n    {errors[field.name] && touched[field.name] && !isTxn ?\n      <label>{errors[field.name]}</label> :\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n    <Dropdown\n        options={userProps.options}\n        placeholder={userProps.placeholder}\n        search\n        selection\n        fluid\n        multiple\n        allowAdditions\n        value={userProps ? userProps.isLowerCaseEnable ? toLower(field.value) : field.value : field.value}\n        onChange={(e, { value }) => onChange(value)}\n        disabled={userProps ? userProps.isDisable ? userProps.isDisable : null : null}\n        style={{width: '100%'}}\n        selection={isSelection ? true : false}\n        id={field.id}\n        name={field.name}\n      />\n    {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n    </Form.Field>\n)};  \n\n\nexport const FormikAsyncSelectComponent = ({\n  userProps, isLabel, label, isTxn, isSelection, focus, width, appendLabel, appendLabelText, className, isFetching,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const onChange = (value) => {\n    setFieldValue(field.name, value)\n    if (userProps.getValue)\n      userProps.getValue(value);\n  }\n\n\n  const loadOptions = (searchQuery) => {\n      userProps.getInputValue(searchQuery, values.id);\n  }\n  return (\n\n    // <Form.Field error={errors[field.name] && touched[field.name]}>{appendLabel ? className : \"\"}\n    <Form.Field width={width ? width : null} className=\"goRelative\" error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label>{errors[field.name]}</label> :\n        <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n        \n      <Dropdown\n        search\n        selection={isSelection ? true : false}\n        // selectOnNavigation={true}\n        id={field.id}\n        name={field.name}\n        placeholder={userProps.placeHolder}\n        options={userProps.searchOptions && userProps.searchOptions.length>0 ? userProps.searchOptions : userProps.options}\n        value={field.value}\n        onSearchChange={(e, { searchQuery }) => loadOptions(searchQuery)}\n        onChange={(e, { value }) => onChange(value)}\n        placeholder={userProps.placeholder}\n        clearable\n        searchInput={{ autoFocus: focus ? focus : false }}\n        style={{width: '100%'}}\n        />\n      {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      {appendLabel ? isFetching  ? <Loader active size=\"mini\" className=\"smallLoader\"/> : <Label size=\"mini\" className=\"noColorLabel\">{appendLabelText}</Label> : null}\n      </Form.Field>\n  )\n};  \n\n\nexport const FormikTextAreaComponent = ({\n  userProps, isTxn, isLabel, label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, handleBlur, setFieldValue, HeaderClick }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n\n  const [ count, setCount ] = useState(0)\n\n  const onChange = (syntheticEvent, value) => {\n    setFieldValue(field.name, value.value)\n    setCount(value.value.length)\n    if(value.value !== \"\"){\n      if (userProps.getValue)\n        userProps.getValue(value.value);\n    }else{\n      if (userProps.getValue)\n        userProps.getValue('');\n    }\n  }\n  \n  useEffect(() => {\n    if(userProps){\n      if(userProps.value){\n        setFieldValue(field.name, userProps.value)\n      }\n    }\n  }, [userProps.value])\n\n  useEffect(() => {\n    if(userProps && userProps.displayCount !== undefined && userProps.displayCount === true && field.value && field.value.length === 0){\n      setCount(0)\n    }else{\n      if(field.value && field.value.length > 0){\n        setCount(field.value.length)\n      }else{\n        setCount(0)\n      }\n    }\n  }, [field.value])\n\n  const height = userProps ? (userProps.height === undefined ? 3 : (userProps.height === '' ? 3 : userProps.height === 0 ? 3 : userProps.height)): 3;\n  const isFloatLeft = userProps && userProps.displayCount !== undefined && userProps.displayCount === true ? 'left' : null\n  return (\n    <Form.Field style={{width: '100%'}} error={get(errors,field.name) && get(touched,field.name)}>\n      {errors[field.name] && touched[field.name] && !isTxn ?\n        <label style={{float: isFloatLeft}}>{errors[field.name]}</label> :\n        <label style={{float: isFloatLeft}}>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n      {userProps ? userProps.displayCount !== undefined && userProps.displayCount === true ?\n          <label style={{float: 'right'}}>{count} / {userProps.maxLength}</label>\n          : null: null}\n        <TextArea\n          name={field.name}\n          style={{ \n              resize: 'none', \n              width: '100%'\n          }}\n          value={field.value}\n          onChange={onChange}\n          rows={height}\n          maxLength={userProps ? userProps.maxLength : null}\n          placeholder={userProps ? userProps.getholder : null}>\n        </TextArea>\n        {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n      </Form.Field>\n  )\n};\n\nexport const FormikDisplayLabelComponent = ({\n  validateInput, isLabel, label, isTxn, placeholder, focus, text,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, values, handleChange, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => (\n    // <Form.Field error={errors[field.name] && touched[field.name]}>\n    <Form.Field error={get(errors,field.name) && get(touched,field.name)} validate={validateInput ? debounce(validateInput, 1000) : \"\"}>\n      <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>\n      <label className=\"AutoGenerate\">{text}</label>\n    </Form.Field>\n  );\n\n// export const FormikAsyncSelectComponent = ({\n//   userProps, isLabel, label, isTxn,\n//   field, // { name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//       userProps.getValue(value);\n//   }\n\n\n//   const loadOptions = (inputValue, callback) => {\n//     userProps.getInputValue(inputValue, callback);\n//   }\n\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <AsyncSelect\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         defaultOptions={userProps.options}\n//         loadOptions={loadOptions} \n//         value={userProps.options ? userProps.options.find(option => option.value === field.value) : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n// export const regexCheckLakhWithZeroDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:|,\\d+)?$/\n// export const regexCheckLakhWithTwoDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,2})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithThreeDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,3})|,\\d+|\\.)?$/\n// export const regexCheckLakhWithFourDecimal = /^(?:\\d+|\\d{1,2}(?:,\\d{2})+)(?:(\\.\\d{0,4})|,\\d+|\\.)?$/\n\n// export const FormikAmtForTxnComponent = ({\n//   isLabel,\n//   label,\n//   field,  //{ name, value, onChange, onBlur }\n//   form: { touched, errors, values, handleBlur, setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//   ...props\n// }) => {\n\n//   const [ textVal, setTextValue ] = useState(\"\")\n\n// return (\n//     <Form.Field error={errors[field.name] && touched[field.name]}>\n//       {errors[field.name] && touched[field.name] ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Input \n//         name={field.name}\n//         type=\"text\"\n//         onFocus={e => (field.value) ? setTextValue(parseFloat(field.value).toString().replace(/,/g, '')): \"\"}\n//         onChange={e => {\n//           // const re = /^(?:\\d+|\\d{1,3}(?:,\\d{2})+)(?:(\\.|,)\\d+|\\.\\d{0,2})?$/;\n//           // const re = lakhWithTwoDecimal;\n//           if (e.target.value === '' || regexCheckLakhWithTwoDecimal.test(e.target.value)) {\n//             setTextValue(e.target.value)\n//             setFieldValue(field.name, e.target.value)\n//           }          \n//         }}\n//         onBlur={e => {\n//           // handleBlur(e) \n//           let vl = (field.value) ? parseFloat(field.value).toFixed(2).replace(regexConvertToLakh, '$1,') : \"\"\n//           setTextValue(vl)\n//           // let someValue = e.currentTarget.value\n//     }}\n//         value={textVal}\n//       />\n//     </Form.Field>\n//   )};\n\n\n// export const FormikSelectComponent = ({\n//     userProps, isLabel, label, isTxn,\n//     field, // { name, value, onChange, onBlur }\n//     form: { touched, errors, values, handleChange, setFieldValue, submitCount }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n//     ...props\n//   }) => {\n  \n//   const onChange = (value) => {\n//     setFieldValue(field.name, value.value)\n//     if (userProps.getValue)\n//     userProps.getValue(value);\n//   }\n\n//   return (\n\n//     // <Form.Field error={errors[field.name] && touched[field.name]}>\n//     <Form.Field error={get(errors,field.name) && get(touched,field.name)}>\n//       {errors[field.name] && touched[field.name] && !isTxn ?\n//         <label>{errors[field.name]}</label> :\n//         <label>{isLabel ? null : label ? label: startCase(toLower(field.name))}</label>}\n//       <Select\n//         id={field.id}\n//         name={field.name}\n//         placeholder={userProps.placeHolder}\n//         options={userProps.options}\n//         // value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         value={userProps.options ? userProps.options.find(option => (option.value === field.value) ? option.value : \"\") : null}\n//         onChange={onChange}\n//         style={{outline: 'none'}}\n//         />\n//       {isTxn ? <ErrorMessage name={field.name} render= { msg => <Label size=\"mini\" color='red' basic pointing prompt>{msg}</Label> }/>: null }\n//       </Form.Field>\n//   )\n// };  \n\n\n","import React from 'react';\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\n    \n\nconst PlantSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = [{\n        key : \"1\",\n        value : 1,\n        text : \"1\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default PlantSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectGroup } from '../data/selectors'\n    \n\nconst GroupSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n\n    \n    const opt = useSelector(state => selectGroup(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default GroupSelect;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport { selectBank } from '../data/selectors'\n    \n\nconst BankSelect = ({ name, isTxn, isLabel, label, isSelection }, props) => {\n    \n    const opt = useSelector(state => selectBank(state, props))\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default BankSelect;\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createGroup } from '../data/actions' \r\nimport { groupSchema, group } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst GroupPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const saveGroup = (values) => {\r\n        dispatch(createGroup(values))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Group' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Group</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"groupPopupForm\" size=\"large\" width={5}\r\n                    initialValues={group()}\r\n                    validationSchema={groupSchema}\r\n                    onSubmit={(values) => saveGroup(values)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GroupPopup;","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBank } from '../data/actions'\r\nimport { bankSchema, bank } from '../data/model'\r\nimport { Modal, Form, Button, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikInputComponent } from '../../../utilities/formUtils'\r\n\r\n// import UserDropdown from '../../users/components/userDropdown'\r\n\r\nconst BankPopup = ({ name, setFieldVal , ...props}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const saveBank = (values) => {\r\n        dispatch(createBank(values))\r\n        setDisplayStatus(false)\r\n    }\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={()=>setDisplayStatus(true)}><Icon name='add circle'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Create Bank</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"bankPopupForm\" size=\"large\" width={5}\r\n                    initialValues={bank()}\r\n                    validationSchema={bankSchema}\r\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{width: '25%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\r\n                                        <Table.Cell style={{width: '75%'}}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type='button' onClick={handleSubmit} icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\r\n                                Create\r\n                                <Icon name='add circle' />\r\n                            </Button>\r\n                            <br/><br/><br/><br/>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BankPopup;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getParty, getPartyParams, getSavedPartyId, getNotification } from '../data/selectors'\nimport { createParty, editParty, setNotifyDoneParty } from '../data/actions'\nimport { partySchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikAmountComponent, FormikInputComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\nimport PlantSelect from '../../party/components/plantSelect'\nimport GroupSelect from '../../group/components/groupSelect'\nimport BankSelect from '../../bank/components/bankSelect'\nimport GroupPopup from '../../group/components/groupPopup'\nimport BankPopup from '../../bank/components/bankPopup'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst PartyForm = (props) => {\n\n    const party = useSelector(state => getParty(state, props))\n    const savedPartyId = useSelector(state => getSavedPartyId(state, props))\n    const params = useSelector(state => getPartyParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveParty = (values, resetForm) => {\n        if (props.match.path === '/party/create') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(createParty(values))\n            resetForm()\n        }\n        if (props.match.path === '/party/edit/:id') {\n            let bankMst = { id: values.bankM !== undefined && values.bankM !== \"\" && values.bankM !== 0 ? values.bankM : null }\n            values.bankMaster = bankMst\n            let groupMst = { id: values.groupM !== undefined && values.groupM !== \"\" && values.groupM !== 0 ? values.groupM : null }\n            values.groupMaster = groupMst\n            delete values.bankM\n            delete values.groupM\n            dispatch(editParty(values))\n            props.history.push(`/party/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"partyForm\" size=\"large\" width={5}\n                    initialValues={party}\n                    validationSchema={partySchema}\n                    onSubmit={(values, { resetForm }) => saveParty(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <PlantSelect name=\"plantNo\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'plantNo' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"plantName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"address\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 400, displayCount: true, height: 3 }} focus={true} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"phone\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <BankSelect name=\"bankM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'bankM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <BankPopup setFieldVal={setFieldValue} name='bankPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"partyBankAccNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\n                                        <Table.Cell style={{ width: '20%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"balance\" label=' ' component={FormikAmountComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '60%' }}>\n                                            <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{ width: '80%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"nickName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\n                                        <Table.Cell colSpan={4} style={{ width: '70%' }}>\n                                            <Form.Group widths={2}>\n                                                <GroupSelect name=\"groupM\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue, setName: 'groupM' }} type='' />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <GroupPopup setFieldVal={setFieldValue} name='groupPopup' />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <br /><br /><br /><br />\n                            {savedPartyId && savedPartyId !== 0 && props.match.path === '/party/create' ?\n                            <Notification id={savedPartyId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneParty} type='save' />\n                            :\n                            null}\n                            {console.log(\"text----------------\" + params.submitButtonText)}\n                            <div className=\"stickeyDiv CustomeFormPurchase\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/party/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PartyForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport PartyList from \"./components/partyList\";\nimport PartyForm from \"./components/partyForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Party = () => {\n    return (\n        <Container>\n            <Route path=\"/party/list\" component={withRouter(PartyList)} />\n            <Route path=\"/party/edit/:id\" component={PartyForm} />\n            <Route path=\"/party/create\" component={PartyForm} />\n        </Container>\n    )\n};\n\nexport default Party;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteBank, setNotifyDoneBank } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport { fetchBank } from '../data/actions'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Bank = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.bank.status === 1 ? false : true;\n\n    const [deleteBankId, setDeleteBankId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const deleteBankFromList = (values) => {\n        const getVlaue = { id: values }\n        setDeleteBankId(values)\n        dispatch(deleteBank(getVlaue))\n        setModalOption({status: false, id: 0})\n    }\n\n    return (\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.bank.bankName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ?\n                    <>\n                        <Link to={\"/bank/edit/\" + props.bank.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{ cursor: 'pointer', color: 'red' }} onClick={() => setModalOption({status: true, id: props.bank.id})}>Delete</span>\n                    </>\n                    :\n                    <span>Deleted</span>\n                }\n                <>\n                {console.log(deleteBankId)}\n                    { \n                        deleteBankId ?\n                            <Notification id={deleteBankId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneBank} type='delete' />\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this bank?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteBankFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst BankList = (props) => {\n    // Loading Logic if tasks not fetched\n    const bank = useSelector(state => select.getBankList(state, props))\n    const bankFetched = useSelector(state => select.getIsBankFetched(state, props))\n    const dispatch = useDispatch()\n    const addBankClick = () => {\n        props.history.push('/bank/create')\n    }\n\n    useEffect(() => {\n        dispatch(fetchBank())\n    })\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Bank List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addBankClick()}>\n                            Add Bank<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{ width: '10%' }}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '80%' }}>Bank Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{ width: '10%' }}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!bankFetched ?\n                        <>\n                            <Table.Row>\n                                <Table.Cell style={{ width: '100%' }} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>\n                            </Table.Row>\n                        </> :\n                        <>\n                            {Object.keys(bank).map((key, index) =>\n                                <Bank bank={bank[key]} key={bank[key].id} index={index} />)}\n                        </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default BankList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getBank, getBankParams, getSavedBankId, getNotification } from '../data/selectors'\nimport { createBank, editBank, setNotifyDoneBank } from '../data/actions' \nimport { bankSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst BankForm = (props) => {\n\n    const bank = useSelector(state => getBank(state, props))\n    const savedBankId = useSelector(state => getSavedBankId(state, props))\n    const params = useSelector(state => getBankParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveBank = (values, resetForm) => {\n        if (props.match.path === '/bank/create') {\n            dispatch(createBank(values))\n            resetForm()\n        }\n        if (props.match.path === '/bank/edit/:id') {\n            dispatch(editBank(values))\n            props.history.push(`/bank/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"bankForm\" size=\"large\" width={5}\n                    initialValues={bank}\n                    validationSchema={bankSchema}\n                    onSubmit={(values, { resetForm }) => saveBank(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Bank Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"bankName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/bank/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedBankId && savedBankId !== 0 && props.match.path === '/bank/create' ? \n                            <Notification id={savedBankId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneBank} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default BankForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BankList from \"./components/bankList\";\nimport BankForm from \"./components/bankForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Bank = () => {\n    return (\n        <Container>\n            <Route path=\"/bank/list\" component={withRouter(BankList)} />\n            <Route path=\"/bank/edit/:id\" component={BankForm} />\n            <Route path=\"/bank/create\" component={BankForm} />\n        </Container>\n    )\n};\n\nexport default Bank;\n\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deleteGroup, setNotifyDoneGroup, fetchGroup } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Modal } from 'semantic-ui-react'\nimport Notification from '../../../utilities/notificationUtils'\n\nconst Group = props => {\n    const dispatch = useDispatch();\n    const isNegative = props.group.status === 1 ? false : true;\n    \n    const [deleteGroupId, setDeleteGroupId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n    \n    const deleteGroupFromList = (values) => {\n        const getVlaue = {id: values}\n        dispatch(deleteGroup(getVlaue))\n        setDeleteGroupId(values)\n        setModalOption({status: false, id: 0})\n    }\n    \n    return(\n        <Table.Row negative={isNegative}>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.group.groupName}</Table.Cell>\n            <Table.Cell>\n                {isNegative === false ? \n                    <>\n                        <Link to={\"/group/edit/\"+props.group.id}>Edit</Link><span>&nbsp;&nbsp;</span>\n                        <span style={{cursor: 'pointer', color: 'red'}} onClick={() => setModalOption({status: true, id: props.group.id})}>Delete</span>\n                    </>\n                :\n                    <span>Deleted</span>\n                }\n                <>\n                {\n                    deleteGroupId ? \n                    <Notification id={deleteGroupId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneGroup} type='delete'/>\n                    :\n                    null\n                }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Group?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deleteGroupFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst GroupList = (props) => {\n    // Loading Logic if tasks not fetched\n    const group = useSelector(state => select.getGroupList(state, props)) \n    const groupFetched = useSelector(state => select.getIsGroupFetched(state, props))\n    const dispatch = useDispatch()\n    \n    const addGroupClick = () => {\n        props.history.push('/group/create');\n    }\n    \n    useEffect(()=>{\n        dispatch(fetchGroup())\n    })      \n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Group List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'>\n                        <Button icon labelPosition='right' className=\"CustomeBTNList\" color='vk' onClick={() => addGroupClick()}>\n                            Add Group<Icon name='add' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br/>\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell style={{width: '10%'}}>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '80%'}}>Group Name</Table.HeaderCell>\n                        <Table.HeaderCell style={{width: '10%'}}>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                <TableBody>\n                    {!groupFetched ? \n                    <>\n                        <Table.Row>\n                            <Table.Cell style={{width: '100%'}} textAlign='center' colSpan=\"3\">Fetching ...</Table.Cell>                             \n                        </Table.Row>\n                    </> :\n                    <>\n                    { Object.keys(group).map((key, index) => \n                    <Group group={group[key]} key={group[key].id} index={index}/> )}\n                    </>\n                    }\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default GroupList;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getGroup, getGroupParams, getSavedGroupId, getNotification } from '../data/selectors'\nimport { createGroup, editGroup, setNotifyDoneGroup } from '../data/actions' \nimport { groupSchema } from '../data/model'\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikInputComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\n\n\nconst GroupForm = (props) => {\n\n    const group = useSelector(state => getGroup(state, props))\n    const savedGroupId = useSelector(state => getSavedGroupId(state, props))\n    const params = useSelector(state => getGroupParams(state, props))\n    const dispatch = useDispatch()\n\n    console.log(\"params-------\", params)\n\n    const saveGroup = (values, resetForm) => {\n        if (props.match.path === '/group/create') {\n            dispatch(createGroup(values))\n            resetForm()\n        }\n        if (props.match.path === '/group/edit/:id') {\n            dispatch(editGroup(values))\n            props.history.push(`/group/list`)\n        }\n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"groupForm\" size=\"large\" width={5}\n                    initialValues={group}\n                    validationSchema={groupSchema}\n                    onSubmit={(values, { resetForm }) => saveGroup(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">Group Name: </label></Table.Cell>\n                                        <Table.Cell colSpan={5} style={{width: '80%'}}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"groupName\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            {console.log(\"text----------------\"+params.submitButtonText)}\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                {params.submitButtonText}\n                                <Icon name={props.match.path === '/group/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                            </Button>\n                            <br/><br/><br/><br/>\n                            {savedGroupId && savedGroupId !== 0 && props.match.path === '/group/create' ? \n                            <Notification id={savedGroupId} notifySelector={getNotification} notifyDoneAction={setNotifyDoneGroup} type='save'/>\n                            :\n                            null}\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default GroupForm;","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport GroupList from \"./components/groupList\";\nimport GroupForm from \"./components/groupForm\";\nimport { Container } from 'semantic-ui-react'\n\n\nconst Group = () => {\n    return (\n        <Container>\n            <Route path=\"/group/list\" component={withRouter(GroupList)} />\n            <Route path=\"/group/edit/:id\" component={GroupForm} />\n            <Route path=\"/group/create\" component={GroupForm} />\n        </Container>\n    )\n};\n\nexport default Group;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const milkRates =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const milkRatesSchema = Yup.object().shape({\n    type: Yup.string()\n        .required('This is a Required Field'),\n\n    pageName: Yup.string()\n        .required('This is a Required Field'),\n        \n    goodFat: Yup.string()\n        .required('This is a Required Field'),\n\n    goodSnf: Yup.string()\n        .required('This is a Required Field'),\n\n    badFat: Yup.string()\n        .required('This is a Required Field'),\n\n    badSnf: Yup.string()\n        .required('This is a Required Field')\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { milkRates } from './model'\n\nexport const getIsFetchingMilkRates = (state, props) => state.milkRates.params.isFetching\nexport const getIsMilkRatesFetched = (state, props) => state.milkRates.params.milkRatesFetched\nexport const getSavedMilkRatesId = (state, props) => state.milkRates.params.savedMilkRatesId\nexport const getMilkRatesList = (state, prop) => state.milkRates.byId\nexport const getNotification = (state, id) => state.milkRates.notifications[id]\n\nexport const getMilkRates = (state, props) => {\n    return milkRates()\n}\nexport const getMilkRatesParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/milkRates/create')){ \n        params.title = state.milkRates.params.createTitle\n        params.submitButtonText = state.milkRates.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/milkRates/edit/')){ \n        params.title = state.milkRates.params.editTitle\n        params.submitButtonText = state.milkRates.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const settings = useSelector(state => select.getMilkRatesList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { milkRatesSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editMilkRates, setNotifyDoneMilkRates } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MilkRatesForm = (props) => {\r\n    \r\n    const milkRates = useSelector(state => select.getMilkRates(state, props))\r\n    const savedMilkRatesId = useSelector(state => select.getSavedMilkRatesId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMilkRates = (values, resetForm) => {\r\n        dispatch(editMilkRates(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Milk Price / Rates</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={milkRates}\r\n                    validationSchema={milkRatesSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveMilkRates(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMilkRatesId && savedMilkRatesId !== 0 ? \r\n                            <Notification id={savedMilkRatesId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMilkRates} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MilkRatesForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MilkRatesForm from \"./components/milkRatesForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst MilkRates = () => {\n    return (\n        <Container>\n            <Route path=\"/milkRates/update\" component={withRouter(MilkRatesForm)} />\n        </Container>\n    )\n};\n\nexport default MilkRates;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const standard =  () => ({\n    \"type\": \"\",\n    \"goodFat\": \"\",\n    \"goodSnf\": \"\",\n    \"badFat\": \"\",\n    \"badSnf\": \"\",\n    \"pageName\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const standardSchema = Yup.object().shape({\n\n  type: Yup.string()\n  .required('This is a Required Field'),\n\n  pageName: Yup.string()\n    .required('This is a Required Field'),\n    \n  goodFat: Yup.string()\n    .required('This is a Required Field'),\n\n  goodSnf: Yup.string()\n    .required('This is a Required Field'),\n\n  badFat: Yup.string()\n    .required('This is a Required Field'),\n\n  badSnf: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { standard } from './model'\n\nexport const getIsFetchingStandard = (state, props) => state.standard.params.isFetching\nexport const getIsStandardFetched = (state, props) => state.standard.params.standardFetched\nexport const getSavedStandardId = (state, props) => state.standard.params.savedStandardId\nexport const getStandardList = (state, prop) => state.standard.byId\nexport const getNotification = (state, id) => state.standard.notifications[id]\n\nexport const getStandard = (state, props) => {\n    return standard()\n}\n\nexport const getStandardParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/standard/create')){ \n        params.title = state.standard.params.createTitle\n        params.submitButtonText = state.standard.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/standard/edit/')){ \n        params.title = state.standard.params.editTitle\n        params.submitButtonText = state.standard.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const settings = useSelector(state => select.getStandardList(state, props))\n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('type', values) \n            userProps.setField('goodFat', settings[values] ? settings[values].goodFat ? settings[values].goodFat : '' : '') \n            userProps.setField('goodSnf', settings[values] ? settings[values].goodSnf ? settings[values].goodSnf : '' : '') \n            userProps.setField('badFat', settings[values] ? settings[values].badFat ? settings[values].badFat : '' : '') \n            userProps.setField('badSnf', settings[values] ? settings[values].badSnf ? settings[values].badSnf : '' : '') \n            userProps.setField('pageName', settings[values] ? settings[values].pageName ? settings[values].pageName : '' : '') \n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { standardSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editStandard, setNotifyDoneStandard } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst StandardForm = (props) => {\r\n\r\n    const standard = useSelector(state => select.getStandard(state, props))\r\n    const savedStandardId = useSelector(state => select.getSavedStandardId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveStandard = (values, resetForm) => {\r\n        dispatch(editStandard(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Standard</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={standard}\r\n                    validationSchema={standardSchema}\r\n                    onSubmit={(values, { resetForm }) => saveStandard(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"type\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Quantity\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                Fat\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell textAlign=\"center\" style={{ width: '40%' }}>\r\n                                            <label className=\"boldText\">\r\n                                                SNF\r\n                                            </label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Good </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"goodSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bad </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badFat\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '40%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"badSnf\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedStandardId && savedStandardId !== 0 ? \r\n                            <Notification id={savedStandardId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneStandard} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StandardForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport StandardForm from \"./components/standardForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Standard = () => {\n    return (\n        <Container>\n            <Route path=\"/standard/update\" component={withRouter(StandardForm)} />\n        </Container>\n    )\n};\n\nexport default Standard;\n\n","import * as Yup from 'yup'\nimport { parseDateFromFormats } from '../../../utilities/parseDate'\n\nexport const misc =  () => ({\n    \"typeName\": \"\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"updatedOn\": \"\",\n    \"value\": \"\",\n    \"operation\": \"\",\n    \"operationOn\": \"\",\n    \"createdOn\" : \"\",\n    \"status\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const miscSchema = Yup.object().shape({\n\n  name: Yup.string()\n  .required('This is a Required Field'),\n\n  value: Yup.string()\n    .required('This is a Required Field'),\n\n  operationOn: Yup.string()\n    .required('This is a Required Field')\n\n});\n","import { startsWith, cloneDeep } from 'lodash';\nimport { misc } from './model'\n\nexport const getIsFetchingMisc = (state, props) => state.misc.params.isFetching\nexport const getIsMiscFetched = (state, props) => state.misc.params.miscFetched\nexport const getSavedMiscId = (state, props) => state.misc.params.savedMiscId\nexport const getMiscList = (state, prop) => state.misc.byId\nexport const getMiscListByName = (state, name) => state.misc.byId[name]\nexport const getNotification = (state, id) => state.misc.notifications[id]\n\nexport const getMisc = (state, props) => {\n    return misc()\n}\n\nexport const getMiscParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/misc/create')){ \n        params.title = state.misc.params.createTitle\n        params.submitButtonText = state.misc.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/misc/edit/')){ \n        params.title = state.misc.params.editTitle\n        params.submitButtonText = state.misc.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst MiscNameTypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n\n    const misc = useSelector(state => select.getMiscList(state, props))\n    const opt = [{\n        key : \"Commision\",\n        value : \"Commision\",\n        text : \"Commision\"\n    }\n    // ,{\n    //     key : \"Head Load\",\n    //     value : \"Head Load\",\n    //     text : \"Head Load\"\n    // }\n    ,{\n        key : \"Sour Milk\",\n        value : \"Sour Milk\",\n        text : \"Sour Milk\"\n    }]\n\n    const getSelectedValue = (values) => {\n        values = values.trim()\n        if(userProps && userProps !== undefined && userProps.setField && userProps.setField !== undefined){\n            userProps.setField('name', values)\n            userProps.setField('id', misc[values] ? misc[values].id ? misc[values].id : '' : '')\n            userProps.setField('typeName', misc[values] ? misc[values].typeName ? misc[values].typeName.trim() : '' : '')\n            userProps.setField('operation', misc[values] ? misc[values].operation ? misc[values].operation.trim() : '' : '')\n            userProps.setField('operationOn', misc[values] ? misc[values].operationOn ? misc[values].operationOn.trim() : '' : '')\n            userProps.setField('value', misc[values] ? misc[values].value ? misc[values].value : '' : '')\n            userProps.setField('description', misc[values] ? misc[values].description ? misc[values].description : '' : '')\n        }\n    }\n\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default MiscNameTypeSelect;\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst MiscOperationType = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\r\n    const opt = [{\r\n        key : \"QTY(KG)\",\r\n        value : \"QTY(KG)\",\r\n        text : \"QTY(KG)\"\r\n    },{\r\n        key : \"Milk Price\",\r\n        value : \"Milk Price\",\r\n        text : \"Milk Price\"\r\n    },{\r\n        key : \"FAT/SNF(KG)\",\r\n        value : \"FAT/SNF(KG)\",\r\n        text : \"FAT/SNF(KG)\"\r\n    }]\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MiscOperationType;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { miscSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent, FormikTextAreaComponent } from '../../../utilities/formUtils'\r\nimport MiscNameType from './miscNameType'\r\nimport MiscOperationType from './miscOperationType'\r\nimport * as select from '../data/selectors'\r\nimport { editMisc, setNotifyDoneMisc } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst MiscForm = (props) => {\r\n\r\n    const misc = useSelector(state => select.getMisc(state, props))\r\n    const savedMiscId = useSelector(state => select.getSavedMiscId(state, props))\r\n    const dispatch = useDispatch()\r\n\r\n    const saveMisc = (values, resetForm) => {\r\n        console.log(values, \"------------------saving values\")\r\n        dispatch(editMisc(values))\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Misc</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"miscForm\" size=\"large\" width={5}\r\n                    initialValues={misc}\r\n                    validationSchema={miscSchema}\r\n                    onSubmit={(values, { resetForm }) => saveMisc(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Type: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscNameType name=\"name\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    {values.name !== \"Sour Milk\" ? \r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Operation On: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <MiscOperationType name=\"operationOn\" isLabel={false} label=\" \" isSelection={true} userProps={{ setField: setFieldValue }} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    : null }\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Value (Rs.): </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"value\" label=' ' component={FormikAmountComponent} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Description: </label></Table.Cell>\r\n                                        <Table.Cell style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"description\" label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 200, displayCount: false, height: 3}} focus={true}/>\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedMiscId && savedMiscId !== 0 ? \r\n                            <Notification id={savedMiscId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneMisc} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MiscForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport MiscForm from \"./components/miscForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Misc = () => {\n    return (\n        <Container>\n            <Route path=\"/misc/update\" component={withRouter(MiscForm)} />\n        </Container>\n    )\n};\n\nexport default Misc;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const finYear =  () => ({\n    \n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSchema = Yup.object().shape({\n\n    \n\n  });\n\nexport const finYearSearchList =  () => ({\n    fintype: \"\",\n    finco: \"\",\n    fdt: \"\",\n    tdt: \"\"\n})\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const finYearSearchListSchema = Yup.object().shape({\n    fdt: Yup.string()\n                .required('This is a Required Field'),\n    \n    tdt: Yup.string()\n                .required('This is a Required Field')\n\n  });","import { createSelector } from 'reselect'\nimport { startsWith, cloneDeep } from 'lodash';\nimport { finYear } from './model'\n\nexport const getIsFetchingFinYear = (state, props) => state.finYear.params.isFetching\nexport const getIsFinYearFetched = (state, props) => state.finYear.params.finYearFetched\nexport const getSavedFinYearId = (state, props) => state.finYear.params.savedFinYearId\nexport const getFinYearList = (state, prop) => state.finYear.byId\nexport const getNotification = (state, id) => state.finYear.notifications[id]\n\nexport const getFinYear = (state, props) => {\n    if(props.match.path==='/finYear/create'){\n        return finYear()\n    }\n    if(props.match.path==='/finYear/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.finYear.byListId[_id]);\n        return obj\n    }\n}\n\nexport const getFinYearParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/finYear/create')){ \n        params.title = state.finYear.params.createTitle\n        params.submitButtonText = state.finYear.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/finYear/edit/')){ \n        params.title = state.finYear.params.editTitle\n        params.submitButtonText = state.finYear.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\nexport const selectFinYearList = createSelector(\n    getFinYearList,\n    finYear => { \n        const keys = Object.keys(finYear)\n        // const obj = keys.map( (key) => { return { value : key, label : year[key].name }})\n        const obj = keys.map( (key) => { return { key : key,  value : key, text : finYear[key].sessionName }})\n        return obj\n    })","import React, { useState } from 'react'\r\nimport store from 'store2'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Container, Button, Table, Icon, Dropdown, Modal } from 'semantic-ui-react'\r\nimport * as select from '../data/selectors'\r\nimport { createFinYear, setNotifyDoneFinYear } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\nconst FinYearForm = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [year, setYear] = useState(false)\r\n    const dispatch = useDispatch()\r\n    \r\n    const finYearFetched = useSelector(state => select.getIsFinYearFetched(state, props))\r\n    const savedFinYearId = useSelector(state => select.getSavedFinYearId(state, props))\r\n    const options = useSelector(state => select.selectFinYearList(state, props))\r\n    \r\n    const onchangeDD = (value) => {\r\n        setYear(value)\r\n    }\r\n\r\n    const addNewFinYear = () => {\r\n        setDisplayStatus(true)\r\n    }\r\n\r\n    const addFinYear = () => {\r\n        dispatch(createFinYear({}))\r\n        setDisplayStatus(false)\r\n    }\r\n\r\n    const setSessionAndGoToApp = () => {}\r\n\r\n    return (\r\n        <Container className='formContainer'>\r\n            <Table>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Financial Year: </label></Table.Cell>\r\n                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                        {\r\n                            !finYearFetched && options.length > 0 ? \r\n                                <>Loading</> \r\n                            : \r\n                                <Dropdown clearable options={options} selection style={{float: 'right', width: '85%'}} onChange={(e, { value }) => onchangeDD(value)}/>\r\n                        }\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n            <Modal open={displayStatus} size='mini' trigger={<Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'left' }} onClick={() => addNewFinYear()}>Add Year<Icon name='add circle' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n                <Modal.Header>Confirmation</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Do you want to add new Financial Year?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => addFinYear(false)} positive labelPosition='right' icon='checkmark' content='Yes'/>\r\n                    <Button onClick={() => setDisplayStatus(false)} negative labelPosition='right' icon='close' content='No'/>\r\n                </Modal.Actions>\r\n            </Modal>\r\n            <Button type=\"button\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }} onClick={() => setSessionAndGoToApp()}>\r\n                Go\r\n                <Icon name='arrow alternate circle right' />\r\n            </Button>\r\n            <br /><br /><br /><br />\r\n            {savedFinYearId && savedFinYearId !== 0 ? \r\n                <Notification id={savedFinYearId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneFinYear} type='save'/>\r\n            :\r\n            null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FinYearForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport FinYearForm from \"./components/finYearForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst FinYear = () => {\n    return (\n        <Container>\n            <Route path=\"/finyear\" component={withRouter(FinYearForm)} />\n        </Container>\n    )\n};\n\nexport default FinYear;\n\n","import { createSelector } from 'reselect'\nimport { cloneDeep } from 'lodash'\nimport { purchase, purchaseDetails } from './model'\nimport store from 'store2'\n\nexport const getIsFetchingPurchase = (state, props) => state.purchase.params.isFetching\nexport const getIsPurchaseFetched = (state, props) => state.purchase.params.purchaseFetched\nexport const getSavedPurchaseId = (state, props) => state.purchase.params.savedPurchaseId\nexport const getIsPurchaseDeleted = (state, props) => state.purchase.params.purchaseDeleted\nexport const getPurchaseList = (state, prop) => state.purchase.byListId\nexport const getPurchaseById = (state, id) => state.purchase.byListId[id]\nexport const getNotification = (state, id) => state.purchase.notifications[id]\n\nexport const getPurchase = (state, props) => {\n    if(props.match.path==='/purchase/create'){\n        return purchase()\n    }\n    if(props.match.path==='/purchase/edit/:id'){\n        let _id = props.match.params.id\n        let obj = cloneDeep(state.purchase.byListId[_id])\n        let partyM = obj.partyMaster ? obj.partyMaster.id : 0\n        obj.partyM = partyM\n        return obj\n    }\n}\n\nexport const getVdetailsObj = (state, object, index, getId, getIndex, combination) => {\n    if(index === \"\"){\n        let obj = purchaseDetails()\n        let shift = store.session('getShift')\n        obj.shift = shift\n        if(combination){\n            obj.setStandard = combination.setStandard\n            obj.setRate = combination.setRate\n        }\n        return obj\n    }else{\n        let obj = {}\n        if(object && index !== \"\" && getId !== undefined && getId !== null && object.purchaseVoucherDetails){\n            let purchaseDetails\n            if(getId !== null && getId !== undefined && getId !== \"\"){\n                purchaseDetails = object.purchaseVoucherDetails.filter((element) => {\n                    return parseInt(element.id, 10) === parseInt(getId, 10);\n                })\n                obj = purchaseDetails ? purchaseDetails[0] : {}\n            }else{\n                console.log(\"object-------------\", object)\n                console.log(\"getIndex-------------\", getIndex)\n                obj = object.purchaseVoucherDetails[getIndex]\n            }\n            cloneDeep(obj);\n        }\n        return obj\n    }\n}\n\nexport const getPurchaseParams = (state, props) => {\n    const params =  {}\n    if(props.match.path==='/purchase/create'){\n        params.title = state.purchase.params.createTitle\n        params.submitButtonText = state.purchase.params.createSubmitButtonText        \n    }else if(props.match.path==='/purchase/edit/:id'){\n        params.title = state.purchase.params.editTitle\n        params.submitButtonText = state.purchase.params.editSubmitButtonText        \n    }\n    return params\n}\n\nexport const selectPurchase = createSelector(\n    getPurchaseList,\n    purchase => { \n        const keys = Object.keys(purchase)\n        const obj = keys.map( (key) => { return { key : key, value : parseInt(key, 10), text : purchase[key].purchaseName }})\n        return obj\n    }\n)","import * as Yup from 'yup'\nimport moment from 'moment'\n\nexport const purchase =  () => ({\n    \"periodFromDate\": moment().format('YYYY-MM-DD'),\n    \"totalFatAmount\": \"\",\n    \"totalSnfAmount\": \"\",\n    \"totalQty\": \"\",\n    \"deductOthersType\": \"\",\n    \"adjustmentType\": \"\",\n    \"addAdvanceNarration\": \"\",\n    \"totalKgfat\": \"\",\n    \"shareType\": \"\",\n    \"commissionValue\": \"\",\n    \"sourMilkType\": \"\",\n    \"headLoadType\": \"\",\n    \"deductAdvanceNarration\": \"\",\n    \"testEquipMentValue\": \"\",\n    \"sourMilkNarration\": \"\",\n    \"id\": \"\",\n    \"commissionNarration\": \"\",\n    \"billNo\": \"\",\n    \"cattleFeedType\": \"\",\n    \"addOthersNarration\": \"\",\n    \"testEquipMentType\": \"\",\n    \"lateArrivalType\": \"\",\n    \"addOthersValue\": \"\",\n    \"billDate\": moment().format('YYYY-MM-DD'),\n    \"updatedOn\": \"\",\n    \"vaccineType\": \"\",\n    \"mtevalue\": \"\",\n    \"totalRejected\": \"\",\n    \"splIncentiveNarration\": \"\",\n    \"fodderNarration\": \"\",\n    \"purchaseVoucherDetails\": [],\n    \"splIncentiveValue\": \"\",\n    \"billTotal\": \"\",\n    \"sourMilkValue\": \"\",\n    \"periodToDate\": moment().format('YYYY-MM-DD'),\n    \"addAdvanceType\": \"\",\n    \"shareValue\": \"\",\n    \"arrearNarration\": \"\",\n    \"adjustment\": \"\",\n    \"headLoadNarration\": \"\",\n    \"deductOthersValue\": \"\",\n    \"arrearValue\": \"\",\n    \"shareNarration\": \"\",\n    \"cowLoanNarration\": \"\",\n    \"totalSour\": \"\",\n    \"fodderType\": \"\",\n    \"createdOn\": \"\",\n    \"headLoadValue\": \"\",\n    \"deductAdvanceType\": \"\",\n    \"partyM\": \"\",\n    \"vaccineValue\": \"\",\n    \"totalMilkprice\": \"\",\n    \"mtenarration\": \"\",\n    \"cowLoanValue\": \"\",\n    \"addOthersType\": \"\",\n    \"vaccineNarration\": \"\",\n    \"deductAdvanceValue\": \"\",\n    \"totalAdditions\": \"\",\n    \"cattleFeedNarration\": \"\",\n    \"netAmount\": \"\",\n    \"totalDeductions\": \"\",\n    \"mtetype\": \"\",\n    \"addAdvanceValue\": \"\",\n    \"testEquipMentNarration\": \"\",\n    \"lateArrivalValue\": \"\",\n    \"lateArrivalNarration\": \"\",\n    \"commissionType\": \"\",\n    \"splIncentiveType\": \"\",\n    \"arrearType\": \"\",\n    \"fodderValue\": \"\",\n    \"cowLoanType\": \"\",\n    \"adjustmentValue\": \"\",\n    \"adjustmentNarration\": \"\",\n    \"cattleFeedValue\": \"\",\n    \"deductOthersNarration\": \"\",\n    \"totalKgsnf\": \"\",\n    \"totalAvgRateKg\": \"\",\n    \"totalGoodFat\": \"\",\n    \"totalGoodSnf\": \"\",\n    \"totalAvgKg\": \"\",\n    \"totalBadFat\": \"\",\n    \"totalBadSnf\": \"\",\n    \"headLoadCalVal\": \"\"\n})\n\nexport const purchaseSchema = Yup.object().shape({\n\n    periodFromDate: Yup.string()\n                .required('This is a Required Field'),\n    periodToDate: Yup.string()\n                .required('This is a Required Field'),\n    billDate: Yup.string()\n                .required('This is a Required Field'),\n    billNo: Yup.string()\n                .required('This is a Required Field'),\n    partyM: Yup.string()\n                .required('This is a Required Field')\n\n  });\n\nexport const purchaseDetails =  () => ({\n    \"date\": \"\",\n    \"sourQty\": \"\",\n    \"updatedOn\": null,\n    \"createdOn\": null,\n    \"kgFat\": \"\",\n    \"snfRate\": \"\",\n    \"rejectedQty\": \"\",\n    \"clrP\": \"\",\n    \"snfP\": \"\",\n    \"fatRate\": \"\",\n    \"fatAmount\": \"\",\n    \"pvid\": \"\",\n    \"qty\": \"\",\n    \"fatP\": \"\",\n    \"snfAmount\": \"\",\n    \"id\": \"\",\n    \"kgSnf\": \"\",\n    \"milkPrice\": \"\",\n    \"remarks\": \"\",\n    \"milkRate\": \"\",\n    \"setStandard\": \"\",\n    \"setRate\": \"\",\n    \"shift\": \"\",\n    \"fatQuality\": \"\",\n    \"snfQuality\": \"\"\n  })\n\nexport const purchaseDetailsSchema = Yup.object().shape({\n\n    date: Yup.string()\n                .required('This is a Required Field')\n\n});\n\nexport const purchaseSearch = () => ({\n  'party': '',\n  'fromDt': '',\n  'toDt': ''\n})","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst PartySelect = ({ name, isTxn, isLabel, label, isSelection, setState, placeholder }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} placeholder={placeholder} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PartySelect;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as select from '../data/selectors'\nimport { deletePurchase, setNotifyDonePurchase, postPrintPurchase, postMultiplePrintPurchase, deleteMultiPurchase } from '../data/actions'\nimport { Container, Table, TableHeader, TableBody, Header, Button, Grid, Icon, Form, Modal, Checkbox, Loader, Dimmer } from 'semantic-ui-react'\nimport { FormikDateComponent } from '../../../utilities/formUtils'\nimport { fetchPurchase } from '../data/actions'\nimport { purchaseSearch } from '../data/model'\nimport Notification from '../../../utilities/notificationUtils'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport PartySelect from '../../party/components/partySelect'\nimport moment from 'moment'\nimport { getPartyObjById } from '../../party/data/selectors'\n\nconst Purchase = props => {\n    const dispatch = useDispatch();\n\n    const [deletePurchaseId, setDeletePurchaseId] = useState(false)\n    const [modalOption, setModalOption] = useState({status: false, id: 0})\n\n    const party = useSelector(state => getPartyObjById(state, props.purchase.partyMaster.id))\n\n    const deletePurchaseFromList = (values) => {\n        const getVlaue = { id: values }\n        dispatch(deletePurchase(getVlaue))\n        setDeletePurchaseId(values)\n        setModalOption({status: false, id: 0})\n    }\n\n    const printPurchaseFromList = (values) => {\n        dispatch(postPrintPurchase(values))\n    }\n\n    return (\n        <Table.Row>\n            <Table.Cell> \n                <Checkbox onChange={props.compute} id={props.purchase.id} name={props.purchase.id}/>\n            </Table.Cell>\n            <Table.Cell>{props.index + 1}</Table.Cell>\n            <Table.Cell>{props.purchase.billNo}</Table.Cell>\n            <Table.Cell>{party.partyName}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.billDate).isValid() ? moment(props.purchase.billDate).format(\"DD-MM-YYYY\") : \"\"}</Table.Cell>\n            <Table.Cell>{moment(props.purchase.periodFromDate).isValid() ? moment(props.purchase.periodFromDate).format(\"DD/MM\") : \"\"} - {moment(props.purchase.periodToDate).isValid() ? moment(props.purchase.periodToDate).format(\"DD/MM\") : \"\"}</Table.Cell>\n            <Table.Cell>{props.purchase.totalQty ? parseFloat(props.purchase.totalQty).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgfat ? parseFloat(props.purchase.totalKgfat).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalKgsnf ? parseFloat(props.purchase.totalKgsnf).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAvgKg ? parseFloat(props.purchase.totalAvgKg).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalAdditions ? parseFloat(props.purchase.totalAdditions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalDeductions ? parseFloat(props.purchase.totalDeductions).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.billTotal ? parseFloat(props.purchase.billTotal).toFixed(2) : parseFloat(0).toFixed(2)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalRejected ? parseFloat(props.purchase.totalRejected).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>{props.purchase.totalSour ? parseFloat(props.purchase.totalSour).toFixed(3) : parseFloat(0).toFixed(3)}</Table.Cell>\n            <Table.Cell>\n                <>\n                \n                    <Icon title=\"Print\" name=\"print\" style={{ cursor: 'pointer', color: '#496d91'}} onClick={() => printPurchaseFromList(props.purchase.id)} />\n                    <span>&nbsp;&nbsp;</span>\n                    <Link to={\"/purchase/edit/\" + props.purchase.id}>\n                        <Icon title=\"Edit\" name=\"pencil alternate\" style={{ cursor: 'pointer', color: '#496d91' }} />\n                    </Link><span>&nbsp;&nbsp;</span>\n                    {/* <span style={{ cursor: 'pointer', color: 'blue' }} onClick={() => editPurchaseFromList(props.purchase.id)}>Edit&nbsp;&nbsp;</span> */}\n                    <Icon title=\"Delete\" name=\"trash\" style={{ cursor: 'pointer', color: '#d44837' }} onClick={() => setModalOption({status: true, id: props.purchase.id})} />\n                </>\n                <>\n                {/* {console.log(deletePurchaseId)} */}\n                    { \n                        deletePurchaseId ?\n                            <Notification id={deletePurchaseId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDonePurchase} type='delete'/>\n                            :\n                            null\n                    }\n                </>\n                <Modal open={modalOption.status} size='mini' onClose={() => setModalOption({status: false, id: 0})}>\n                    <Modal.Header>Confirmation</Modal.Header>\n                    <Modal.Content>\n                        <p>Do you want to delete this Purchase?</p>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => deletePurchaseFromList(modalOption.id)} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                        <Button onClick={() => setModalOption({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                    </Modal.Actions>\n                </Modal>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nconst PurchaseList = (props) => {\n    // Loading Logic if tasks not fetched\n    const purchase = useSelector(state => select.getPurchaseList(state, props))\n    const isPurchaseDeleted = useSelector(state => select.getIsPurchaseDeleted(state, props))\n    const dispatch = useDispatch()\n    const addPurchaseClick = () => {\n        props.history.push('/purchase/create')\n    }\n\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n    const [modal, setModal] = useState({status: false, id: 0})\n    const [checkedIds, setCheckedIds] = useState('')\n\n    const calculateTotal = (e, { checked }) => {\n         if (checked){ \n            setCheckedIds(checkedIds + ',' + e.target.name) \n        }else { \n            setCheckedIds(checkedIds.replace(','+e.target.name, '')) \n        }\n    }\n\n    const fetchList = (values, resetForm) => {\n        // console.log(values)\n        // dispatch(fetchPurchase('11/2019-01-01/2020-12-01'))\n        if(values.fromDt !== \"\" && values.toDt !== \"\"){\n            let fromDt = moment(values.fromDt),\n                toDt = moment(values.toDt);\n            if(toDt >= fromDt){\n                let linkCreate = values.party === \"\" ? 0+\"/\"+values.fromDt+\"/\"+values.toDt : 0+\"/\"+values.party+\"/\"+values.fromDt+\"/\"+values.toDt\n                dispatch(fetchPurchase(linkCreate))\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }\n    }\n\n    const addPurchaseBulkPrint = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            dispatch(postMultiplePrintPurchase(checkedIds))\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectPrint'})\n        }\n    }\n\n    const addPurchaseBulkDelete = () => {\n        if(checkedIds !== null && checkedIds !== undefined && checkedIds !== \"\"){\n            setModal({status: true, id: 0})\n        }else{\n            setModalState({isOpen: true, keyWord: 'notselectDelete'})\n        }\n    }\n\n    const callToDeleteData = () => {\n        dispatch(deleteMultiPurchase(checkedIds))\n        setModal({status: false, id: 0})\n    }\n\n    return (\n        <Container>\n            {\n                isPurchaseDeleted ? \n                    <div>\n                        <Dimmer active>\n                            <Loader size=\"big\">\n                                Please Wait...<br/>Deleting Purchase <br/><br/> \n                                <font className=\"warningLoader\" style={{color: 'red'}}>\n                                    Please do not close the Browser\n                                </font>\n                            </Loader>\n                        </Dimmer>\n                    </div>\n                 :\n                    null\n            } \n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Purchase List</Header>\n                    </Grid.Column>\n                    <Grid.Column width={12} floated={'right'} align='right'>\n                        <Formik id=\"purchaseForm\" size=\"large\" width={10}\n                            initialValues={purchaseSearch()}\n                            onSubmit={(values, { resetForm }) => fetchList(values, resetForm)}\n                            render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                                <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={10} onSubmit={handleSubmit}>\n                                    <Form.Group widths={1}>\n                                        <Table style={{width: '100%'}} className='purchasetablePop' basic='very'>\n                                            <Table.Body>\n                                                <Table.Row>\n                                                    <Table.Cell style={{width: '20%', padding: '0px 10px'}} textAlign='right'>\n                                                        <PartySelect name=\"party\" isLabel={false} placeholder='Supplier' label=\" \" isSelection={true} type=''/>\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '15%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"fromDt\" label=' ' placeholder={'From Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '15%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Field name=\"toDt\" label=' ' placeholder={'To Date'} component={FormikDateComponent} />\n                                                    </Table.Cell>\n                                                    <Table.Cell style={{width: '50%', padding: '0px 10px'}} textAlign='right'>\n                                                        <Button type=\"submit\" icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk'>\n                                                            Go<Icon name='arrow alternate circle right'/>\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk' onClick={() => addPurchaseClick()}>\n                                                            Add<Icon name='add' />\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='vk' onClick={() => addPurchaseBulkPrint()}>\n                                                            Print<Icon name='print' />\n                                                        </Button>\n                                                        <Button type='button' icon labelPosition='right' className=\"customeBTNListPurchase\" color='google plus' onClick={() => addPurchaseBulkDelete()}>\n                                                            Delete<Icon name='trash alternate outline' />\n                                                        </Button>\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            </Table.Body>\n                                        </Table>\n                                    </Form.Group>\n                                </Form>\n                            )}\n                        />\n                        <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                            <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                            <Modal.Content>\n                                <p>\n                                    {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : (modalState.keyWord === 'notselectDelete' ? 'No purchase checked to delete' : (modalState.keyWord === 'notselectPrint' ? 'No purchase checked to print' : '')))}\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                            </Modal.Actions>\n                        </Modal>\n                        <Modal open={modal.status} size='mini' onClose={() => setModal({status: false, id: 0})}>\n                            <Modal.Header>Confirmation</Modal.Header>\n                            <Modal.Content>\n                                <p>Do you want to delete checked Purchases?</p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => callToDeleteData()} positive labelPosition='right' icon='checkmark' content='Yes'/>\n                                <Button onClick={() => setModal({status: false, id: 0})} negative labelPosition='right' icon='close' content='No'/>\n                            </Modal.Actions>\n                        </Modal>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br />\n            <Table selectable basic='very'>\n                <TableHeader>\n                    <Table.Row>\n                        <Table.HeaderCell></Table.HeaderCell>\n                        <Table.HeaderCell>Sl. No.</Table.HeaderCell>\n                        <Table.HeaderCell>Bill No.</Table.HeaderCell>\n                        <Table.HeaderCell>Supplier</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Bill Period</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>FAT(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>SNF(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>AVG(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Addi(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Dedu(Rs)</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                        <Table.HeaderCell>Reg(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Sour(Kg)</Table.HeaderCell>\n                        <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                </TableHeader>\n                {/* {console.log(\"checkedIds==================\", checkedIds)} */}\n                <TableBody>\n                    {Object.keys(purchase).map((key, index) =>\n                        <Purchase compute={calculateTotal} purchase={purchase[key]} key={purchase[key].id} index={index} />)}\n                </TableBody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default PurchaseList;\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getPartyObjById } from '../data/selectors'\r\nimport { Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { getGroupById } from '../../group/data/selectors'\r\nimport { getBankById } from '../../bank/data/selectors'\r\n\r\n\r\nconst PartyDisplayView = (props) => {\r\n\r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const partyObj = useSelector(state => getPartyObjById(state, props.partyId))\r\n    const group = useSelector(state => getGroupById(state, partyObj ? partyObj.groupMaster ? partyObj.groupMaster.id : 0 : 0))\r\n    const bank = useSelector(state => getBankById(state, partyObj ? partyObj.bankMaster ? partyObj.bankMaster.id : 0 : 0))\r\n\r\n    return (\r\n        <Modal size='large' closeIcon open={displayStatus} trigger={<Button type='button' icon size='small' color='vk' title='Add Bank' onClick={() => setDisplayStatus(true)}><Icon name='eye' /></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Details</Modal.Header>\r\n            <Modal.Content>\r\n                {partyObj ?\r\n                    <Table>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.plantNo}\r\n                                </Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Plant Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={3} style={{ width: '60%' }}>\r\n                                    {partyObj.plantName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Address: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.address}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Phone: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.phone}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Bank: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {bank ? bank.bankName === undefined ? '' : bank.bankName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">A/C No: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.partyBankAccNo}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Balance: </label></Table.Cell>\r\n                                <Table.Cell style={{ width: '20%' }}>\r\n                                    {partyObj.balance}\r\n                                </Table.Cell>\r\n                                <Table.Cell colSpan={4} style={{ width: '60%' }}>\r\n                                    <label className=\"tipText\">Tip: ( Negative value for credit balance )</label>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Nick Name: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {partyObj.nickName}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Group: </label></Table.Cell>\r\n                                <Table.Cell colSpan={5} style={{ width: '80%' }}>\r\n                                    {group ? group.groupName === undefined ? '' : group.groupName : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    : null}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PartyDisplayView;","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst TypeTxnSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Flush\",\r\n        value : \"Flush\",\r\n        text : \"Flush\"\r\n    },{\r\n        key : \"Lean\",\r\n        value : \"Lean\",\r\n        text : \"Lean\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        setField(name, values)\r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TypeTxnSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\nimport store from 'store2'\r\n    \r\n\r\nconst ShiftSelect = ({ name, isTxn, isLabel, label, isSelection, setField }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Morning\",\r\n        value : \"Morning\",\r\n        text : \"Morning\"\r\n    },{\r\n        key : \"Evening\",\r\n        value : \"Evening\",\r\n        text : \"Evening\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        store.session(\"getShift\", values)\r\n        console.log(\"session--------\", store.session(\"getShift\"))\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, setField: setField, setValue: store.session(\"getShift\") }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShiftSelect;\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\r\n    \r\n\r\nconst QualitySelect = ({ name, isTxn, isLabel, label, isSelection, disabled }, props) => {\r\n\r\n    const opt = [{\r\n        key : \"Good\",\r\n        value : \"Good\",\r\n        text : \"Good\"\r\n    },{\r\n        key : \"Bad\",\r\n        value : \"Bad\",\r\n        text : \"Bad\"\r\n    }]\r\n\r\n    const getSelectedValue = (values) => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue, isDisable: disabled }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default QualitySelect;\r\n","import { startsWith, cloneDeep } from 'lodash'\n\nexport const getIsFetchingCombination = (state, props) => state.combination.params.isFetching\nexport const getIsCombinationFetched = (state, props) => state.combination.params.combinationFetched\nexport const getSavedCombinationId = (state, props) => state.combination.params.savedCombinationId\nexport const getCombinationList = (state, prop) => state.combination.byId\nexport const getCombinationById = (state, id) => state.combination.byId[id]\nexport const getNotification = (state, id) => state.combination.notifications[id]\n\nexport const getCombination = (state, id) => {\n    let obj = cloneDeep(state.combination.byId[id])\n    return obj\n}\n\nexport const getCombinationParams = (state, props) => {\n    const params =  {}\n\n    if(startsWith(state.router.location.pathname,'/combination/create')){ \n        params.title = state.combination.params.createTitle\n        params.submitButtonText = state.combination.params.createSubmitButtonText        \n    };\n\n    if(startsWith(state.router.location.pathname,'/combination/edit/')){ \n        params.title = state.combination.params.editTitle\n        params.submitButtonText = state.combination.params.editSubmitButtonText        \n    };\n\n    return params\n}\n\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getVdetailsObj } from '../data/selectors'\r\nimport { Form, Button, Modal, Table, Checkbox } from 'semantic-ui-react';\r\nimport { Formik, Field, Form as FormikForm } from 'formik';\r\nimport { FormikAmountComponent, FormikTextAreaComponent, FormikDateComponent } from '../../../utilities/formUtils'\r\nimport TypeTxnSelect from './typeTxnSelect'\r\nimport ShiftSelect from './shiftSelect'\r\nimport QualitySelect from './qualitySelect'\r\nimport store from 'store2'\r\nimport { getMilkRatesList } from '../../milkRates/data/selectors'\r\nimport { getStandardList } from '../../standard/data/selectors'\r\nimport { getCombinationById } from '../../combination/data/selectors'\r\n\r\nimport moment from 'moment'\r\n\r\nconst AddQuickVdetails = ({ setItemObject, setNextDate, nextDate, index, voucherObj, name, setField, values, ...props }) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n    const [modalState, setModalState] = useState({ isOpen: false, keyWord: '' })\r\n    const [netQty, setNetQty] = useState(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n    const [isAuto, setIsAuto] = useState(false)\r\n    const [isCLRhas, setIsCLRhas] = useState(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n    const [popNextDate, setPopNextDate] = useState(nextDate)\r\n    const [onOpen, setOnOpen] = useState(false)\r\n\r\n    const combination = useSelector(state => getCombinationById(state, 1))\r\n    const vdetails = useSelector(state => getVdetailsObj(state, voucherObj, index, store.get(\"setId\"), store.get(\"setIndex\"), combination))\r\n    // console.log(\"vdetails-==========\", vdetails)\r\n    const milkRates = useSelector(state => getMilkRatesList(state, props))\r\n    const standard = useSelector(state => getStandardList(state, props))\r\n\r\n    useEffect(() => {\r\n        if (index === \"y\" && onOpen) {\r\n            setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n            setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n            setOnOpen(false)\r\n            let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n            let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n            store.session('getShift', shiftGet)\r\n        }\r\n    }, [vdetails])\r\n\r\n    const saveItems = (value, resetForm) => {\r\n        let flag = false,\r\n            qty = value.qty === undefined ? 0 : value.qty === \"\" ? 0 : value.qty,\r\n            rejectQty = value.rejectedQty === undefined ? 0 : value.rejectedQty === \"\" ? 0 : value.rejectedQty,\r\n            sourQty = value.sourQty === undefined ? 0 : value.sourQty === \"\" ? 0 : value.sourQty,\r\n            milkPrice = value.milkPrice === undefined ? 0 : value.milkPrice === \"\" ? 0 : value.milkPrice\r\n        if (qty === 0 && rejectQty === 0 && sourQty === 0) {\r\n            flag = false\r\n            setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n        } else {\r\n            if (qty !== 0) {\r\n                if (milkPrice === 0) {\r\n                    flag = false\r\n                    setModalState({ isOpen: true, keyWord: 'calculate' })\r\n                } else {\r\n                    flag = true\r\n                }\r\n            } else {\r\n                flag = true\r\n            }\r\n        }\r\n        if (flag) {\r\n            if (index === '') {\r\n                let new_date = moment(value.date, \"YYYY-MM-DD\").add('days', 1),\r\n                    day = new_date.format('DD'),\r\n                    month = new_date.format('MM'),\r\n                    year = new_date.format('YYYY')\r\n                setItemObject(values, value, setField)\r\n                if(isAuto){\r\n                    store.session('getShift', value.shift)\r\n                }else{\r\n                    store.session('getShift', value.shift === \"Morning\" ? \"Evening\" : \"Morning\")\r\n                }\r\n                resetForm()\r\n                setNextDate(year+'-'+month+'-' +day)\r\n                setPopNextDate(year+'-'+month+'-' +day)\r\n            } else {\r\n                setItemObject(values, value, setField, store.get(\"setIndex\"))\r\n                setDisplayStatus(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeWindow = () => {\r\n        setDisplayStatus(false)\r\n        if(isAuto === false){\r\n            store.session('getShift', null)\r\n        }\r\n    }\r\n \r\n    const onChangeQty = (values, setField) => {\r\n        setNetQty(values)\r\n        if (values === \"\" || values === 0) {\r\n            setField('clrP', '')\r\n            setField('fatP', '')\r\n            setField('snfP', '')\r\n            setField('fatQuality', '')\r\n            setField('snfQuality', '')\r\n            setField('fatRate', '')\r\n            setField('snfRate', '')\r\n            setField('kgFat', '')\r\n            setField('kgSnf', '')\r\n            setField('fatAmount', '')\r\n            setField('snfAmount', '')\r\n            setField('milkRate', '')\r\n            setField('milkPrice', '')\r\n        }\r\n    }\r\n\r\n    const onChangeCLR = (values, setField) => {\r\n        if (values === \"\" || values === 0) {\r\n            setIsCLRhas(false)\r\n        } else {\r\n            setIsCLRhas(true)\r\n            setField('snfP', '')\r\n        }\r\n    }\r\n\r\n    const getOpenPopup = () => {\r\n        setNetQty(vdetails ? vdetails.qty === \"\" ? 0 : vdetails.qty : 0)\r\n        setIsCLRhas(vdetails ? (vdetails.clrP === null || vdetails.clrP === undefined || vdetails.clrP === \"\" || vdetails.clrP === 0) ? false : true : false)\r\n        let getAuto = store.session('isAuto') && store.session('isAuto') !== undefined ? store.session('isAuto') : false\r\n        setIsAuto(getAuto)\r\n        setOnOpen(true)\r\n        store.session('isAuto', getAuto)\r\n        let shiftGet = index === \"\" ? store.session('getShift') && store.session('getShift') !== undefined ? (getAuto ? store.session('getShift') : (store.session('getShift') === \"Morning\" ? \"Evening\" : \"Morning\")) : 'Morning' : (vdetails ? (vdetails.shift ? vdetails.shift : 'Morning' ) : \"Morning\")\r\n        store.session('getShift', shiftGet)\r\n        setPopNextDate(nextDate)\r\n        if (index === \"y\") {\r\n            if (store.get(\"setId\") !== undefined && store.get(\"setId\") !== null) {\r\n                setDisplayStatus(true)\r\n            }\r\n        } else {\r\n            setDisplayStatus(true)\r\n        }\r\n    }\r\n\r\n    const setAutoTiming = (values, ischeck) => {\r\n        setIsAuto(ischeck)\r\n        store.session('isAuto', ischeck)\r\n        store.session('getShift', values.shift)\r\n    }\r\n\r\n    const calculateRate = (setField, values) => {\r\n        if (values.setStandard !== \"\" && values.setRate !== \"\") {\r\n            if (values.qty !== \"\" && values.qty !== 0) {\r\n                if (values.fatP !== \"\" && values.fatP !== 0) {\r\n                    if ((values.snfP !== undefined && values.snfP !== \"\" && values.snfP !== 0 && isCLRhas === false) || (isCLRhas === true && values.clrP !== undefined && values.clrP !== '' && values.clrP !== 0)) {\r\n                        let getStandard = values.setStandard\r\n                        let getMilkRate = values.setRate\r\n                        let standardObj = standard[getStandard]\r\n                        let milkRateObj = milkRates[getMilkRate]\r\n                        let qtyGet = values.qty\r\n                        let fat = values.fatP\r\n                        let clr = values.clrP\r\n                        let snf = isCLRhas === false ? values.snfP : ((parseFloat(clr) / 4) + (0.25 * parseFloat(fat)) + 0.44)\r\n                        if (isCLRhas) {\r\n                            setField('snfP', snf)\r\n                        }\r\n                        let fatType = parseFloat(fat) >= parseFloat(standardObj.goodFat) ? \"Good\" : \"Bad\"\r\n                        let snfType = parseFloat(snf) >= parseFloat(standardObj.goodSnf) ? \"Good\" : \"Bad\"\r\n                        setField('fatQuality', fatType)\r\n                        setField('snfQuality', snfType)\r\n                        let fatRate = fatType === \"Good\" ? milkRateObj.goodFat : milkRateObj.badFat\r\n                        let snfRate = fatType === \"Good\" ? milkRateObj.goodSnf : milkRateObj.badSnf\r\n                        setField('fatRate', fatRate)\r\n                        setField('snfRate', snfRate)\r\n                        let kgFat = (parseFloat(qtyGet) * parseFloat(fat)) / 100\r\n                        let kgSnf = (parseFloat(qtyGet) * parseFloat(snf)) / 100\r\n                        setField('kgFat', kgFat)\r\n                        setField('kgSnf', kgSnf)\r\n                        let fatAmt = parseFloat(kgFat) * parseFloat(fatRate)\r\n                        let snfAmt = parseFloat(kgSnf) * parseFloat(snfRate)\r\n                        setField('fatAmount', fatAmt)\r\n                        setField('snfAmount', snfAmt)\r\n                        let totalRs = parseFloat(fatAmt) + parseFloat(snfAmt)\r\n                        let milkRatePerKg = parseFloat(totalRs) / parseFloat(qtyGet)\r\n                        setField('milkRate', milkRatePerKg)\r\n                        setField('milkPrice', totalRs)\r\n                    } else {\r\n                        setModalState({ isOpen: true, keyWord: 'clrsnf' })\r\n                    }\r\n                } else {\r\n                    setModalState({ isOpen: true, keyWord: 'fatP' })\r\n                }\r\n            } else {\r\n                setModalState({ isOpen: true, keyWord: 'anyqty' })\r\n            }\r\n        } else {\r\n            setModalState({ isOpen: true, keyWord: 'setDD' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal open={displayStatus} closeOnEscape={false} closeOnDimmerClick={false} trigger={<Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }} onClick={() => getOpenPopup()}>{index === '' ? 'Add' : 'Edit'}</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Details</Modal.Header>\r\n            <Modal.Content>\r\n                <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                    initialValues={vdetails}\r\n                    // validationSchema={itemsQuickSchema}\r\n                    onSubmit={(values, { resetForm }) => saveItems(values, resetForm)}\r\n                    render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                        <Form key={index} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                            <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                <Table.Body>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Standard</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeTxnSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Rate Name</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeTxnSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <label className=\"boldText\">Supply Date</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <Field name=\"date\" label=' ' component={FormikDateComponent} setDateManually={popNextDate}/>\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Checkbox label='Auto' checked={isAuto ? true : false} onChange={(e, { checked }) => setAutoTiming(values, checked)} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '35%' }}>\r\n                                            <ShiftSelect name=\"shift\" isLabel={false} label=\" \" isSelection={true} type='' setField={setFieldValue} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell colSpan='4' style={{ width: '100%', padding: '0px' }}>\r\n                                            <Table style={{ width: '100%' }} className='purchasetablePop'>\r\n                                                <Table.Body>\r\n                                                    <Table.Row className=\"VInputPanel\">\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Quantity</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '25%' }}>\r\n                                                            <Form.Group widths={2}>\r\n                                                                <Field name=\"qty\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeQty} />\r\n                                                            </Form.Group>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Quantity(R)</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <Field name=\"rejectedQty\" label=' ' component={FormikAmountComponent}/>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <label className=\"boldText\">Quantity(S)</label>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell style={{ width: '15%' }}>\r\n                                                            <Field name=\"sourQty\" label=' ' component={FormikAmountComponent}/>\r\n                                                        </Table.Cell>\r\n                                                    </Table.Row>\r\n                                                </Table.Body>\r\n                                            </Table>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Table style={{ width: '100%', margin: '0px' }}>\r\n                                <Table.Body>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">CLR</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"clrP\" label=' ' component={FormikAmountComponent} onChangeFunc={onChangeCLR} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Quality</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Rate / Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Total Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Amount</label>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">Fat</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"fatP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : false} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <QualitySelect name=\"fatQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"fatRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"kgFat\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"fatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">SNF</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '15%' }}>\r\n                                            <Field name=\"snfP\" label=' ' component={FormikAmountComponent} isReadonly={netQty === \"\" || netQty === 0 ? true : (isCLRhas === true ? true : false)} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <QualitySelect name=\"snfQuality\" isLabel={false} label=\" \" isSelection={true} type='' disabled={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"snfRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"kgSnf\" label=' ' component={FormikAmountComponent} decimal={3} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"snfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell colSpan='2' style={{ width: '20%' }}>\r\n                                            <center><Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='vk' disabled={netQty === \"\" || netQty === 0 ? true : false} onClick={() => { calculateRate(setFieldValue, values) }}>Calc Rate</Button></center>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Milk Rate / Kg</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"milkRate\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <label className=\"boldText\">Total Rs.</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell style={{ width: '20%' }}>\r\n                                            <Field name=\"milkPrice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row className=\"VInputPanel\">\r\n                                        <Table.Cell style={{ width: '5%' }}>\r\n                                            <label className=\"boldText\">Remarks</label>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell colSpan='3' style={{ width: '55%' }}>\r\n                                            <Field name=\"remarks\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 100, displayCount: false, height: 1 }} focus={true} />\r\n                                        </Table.Cell>\r\n                                        <Table.Cell colSpan='2' style={{ width: '40%' }}>\r\n                                            <div style={{float: 'right'}}>\r\n                                                <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> {index === '' ? 'Add' : 'Update'} </Button>\r\n                                                <Button type='button' onClick={() => closeWindow()} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\"> Close </Button>\r\n                                            </div>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({ isOpen: false, keyWord: '' })}>\r\n                                <Modal.Header style={{ color: 'red' }}>Warning</Modal.Header>\r\n                                <Modal.Content>\r\n                                    <p>\r\n                                        {modalState.keyWord === 'calculate' ? 'Please enter details and calculate milk price' : (modalState.keyWord === 'anyqty' ? 'Please enter quantity' : (modalState.keyWord === \"setDD\" ? 'Please select Standard and Rate Name' : (modalState.keyWord === \"fatP\" ? 'Please enter FAT' : (modalState.keyWord === \"clrsnf\" ? 'Please enter CLR or SNF' : ''))))}\r\n                                    </p>\r\n                                </Modal.Content>\r\n                                <Modal.Actions>\r\n                                    <Button onClick={() => setModalState({ isOpen: false, keyWord: '' })} negative labelPosition='right' icon='checkmark' content='Okay' />\r\n                                </Modal.Actions>\r\n                            </Modal>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddQuickVdetails;","import React, { useState } from 'react'\r\nimport {Table, TableBody, Modal, Button, Icon } from 'semantic-ui-react'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from 'moment'\r\nimport store from 'store2'\r\n\r\n\r\nexport const VdetailsNonEditable = ({\r\n  name, move, swap, push, insert, unshift, pop, setField, remove, // { name, value, onChange, onBlur }\r\n  form: { initialValues, values, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  ...props\r\n}) => {\r\n\r\n    let arrKeys = [];\r\n    const fieldName = name;\r\n    if (values[fieldName] && values[fieldName].length) {\r\n        arrKeys = Object.keys(values[fieldName]);\r\n    }\r\n\r\n    const [isActive, setIsActive] = useState(null)\r\n\r\n    const onclickRow = (index, id) => {\r\n        store.set(\"setIndex\", index)\r\n        store.set(\"setId\", id)\r\n        setIsActive(index)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table basic='very' selectable className='purchaseHead'>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell title=\"Date\">Date</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"Qty\">Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"CLR\">CLR</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FAT(%)\">FAT(%)</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SNF(%)\">SNF(%)</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"KGFat\">KGFat</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"KGSNF\">KGSNF</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FatRate\">FatRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SnfRate\">SnfRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"FatAmt\">FatAmt</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"SnfAmt\">SnfAmt</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"MilkPrice\">MilkPrice</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"MilkRate\">MilkRate</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"R.Qty\">R.Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell title=\"S.Qty\">S.Qty</Table.HeaderCell>\r\n                        <Table.HeaderCell width={3} title=\"Remarks\">Remarks</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <TableBody>\r\n                {values[fieldName] && values[fieldName].length > 0 ? (\r\n                    arrKeys.map((index) => (\r\n                        <Table.Row key={`${fieldName}[${index}]`} active={isActive === index ? true : false} className=\"VInputPanel\" onClick={() => onclickRow(index, values[fieldName][index].id)}>\r\n                            <Table.Cell>\r\n                                {moment(values[fieldName][index].date).format('DD-MM-YYYY')}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].qty ? parseFloat(values[fieldName][index].qty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].clrP ? parseFloat(values[fieldName][index].clrP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatP ? parseFloat(values[fieldName][index].fatP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfP ? parseFloat(values[fieldName][index].snfP).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].kgFat ? parseFloat(values[fieldName][index].kgFat).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].kgSnf ? parseFloat(values[fieldName][index].kgSnf).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatRate ? parseFloat(values[fieldName][index].fatRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfRate ? parseFloat(values[fieldName][index].snfRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].fatAmount ? parseFloat(values[fieldName][index].fatAmount).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].snfAmount ? parseFloat(values[fieldName][index].snfAmount).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].milkPrice ? parseFloat(values[fieldName][index].milkPrice).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].milkRate ? parseFloat(values[fieldName][index].milkRate).toFixed(2) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].rejectedQty ? parseFloat(values[fieldName][index].rejectedQty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].sourQty ? parseFloat(values[fieldName][index].sourQty).toFixed(3) : ''}\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {values[fieldName][index].remarks}\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        )\r\n                    )) : null}\r\n                </TableBody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VdetailsNonEditable;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikTextAreaComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddNotesCommon = ({setItemObject, name, setField, setValueFor, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addNotes = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.addNote)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type='button' className='labelButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}>N</Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Note</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                 //initialValues={vdetails}\r\n                // validationSchema={itemsQuickSchema}\r\n                onSubmit={(values, {resetForm}) => addNotes(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name='addNote' label=' ' component={FormikTextAreaComponent} userProps={{maxLength: 300, displayCount: false, height: 3, value: setValueFor}} focus={true}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNotesCommon;","import React, { useState } from 'react'\r\nimport { Form, Button, Modal, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Field, Form as FormikForm } from 'formik'\r\nimport { FormikAmountComponent } from '../../../utilities/formUtils'\r\n\r\nconst AddHeadLoad = ({setItemObject, name, setField, setValueFor, afterWork, sendValue, ...props}) => {\r\n    \r\n    const [displayStatus, setDisplayStatus] = useState(false)\r\n\r\n    const addHeadLoad = (values, resetForm) => {\r\n        setDisplayStatus(false)\r\n        setField(name, values.headLoad)\r\n        sendValue[name] = values.headLoad\r\n        afterWork(sendValue, setField)\r\n        resetForm()\r\n    }\r\n\r\n    return (\r\n        <Modal size='tiny' open={displayStatus} trigger={<Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => setDisplayStatus(true)}><Icon name='question'/></Button>} onClose={() => setDisplayStatus(false)}>\r\n            <Modal.Header>Add Head Load Value</Modal.Header>\r\n            <Modal.Content>\r\n            <Formik id=\"vdForm\" size=\"large\" width={5}\r\n                onSubmit={(values, {resetForm}) => addHeadLoad(values, resetForm)}\r\n                render={({ handleSubmit, onChange, values, handleChange, errors, setFieldValue }) => (\r\n                    <Form key={name} as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\r\n                        <Table style={{width: '100%'}} className='purchasetablePop'>\r\n                            <Table.Body>\r\n                                <Table.Row className=\"VInputPanel\">\r\n                                    <Table.Cell style={{width: '100%'}}>\r\n                                        <Field name=\"headLoad\" label=' ' component={FormikAmountComponent} setValue={setValueFor}/>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <br/>\r\n                        <Button type='button' onClick={handleSubmit} size=\"medium\" color='vk' className=\"CustomeBTNWithoutMargin\" style={{float: 'right'}}> Add </Button>\r\n                        <br/><br/>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddHeadLoad;","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPurchase, getPurchaseParams, getSavedPurchaseId, getNotification } from '../data/selectors'\nimport { createPurchase, editPurchase, setNotifyDonePurchase } from '../data/actions'\nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, FieldArray, Form as FormikForm } from 'formik'\nimport { FormikInputComponent, FormikDateComponent, FormikTextAreaComponent, FormikAmountComponent } from '../../../utilities/formUtils'\nimport Notification from '../../../utilities/notificationUtils'\nimport PartySelect from '../../party/components/partySelect'\nimport PartyDisplayView from \"../../party/components/partyDisplayView\"\nimport AddQuickVdetails from './addQuickVdetails'\nimport VdetailsNonEditable from './vdetailsNonEditable'\nimport store from 'store2'\nimport AddNotesCommon from './addNotePopUpCommon'\nimport AddHeadLoad from './addHeadLoadPopup'\nimport { getMiscListByName } from '../../misc/data/selectors'\nimport moment from 'moment'\n\n\nconst PurchaseForm = (props) => {\n\n    const purchase = useSelector(state => getPurchase(state, props))\n    const savedPurchaseId = useSelector(state => getSavedPurchaseId(state, props))\n    const params = useSelector(state => getPurchaseParams(state, props))\n    const commisionMisc = useSelector(state => getMiscListByName(state, 'Commision'))\n    const sourMilkMisc = useSelector(state => getMiscListByName(state, 'Sour Milk'))\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({ isOpen: false, keyWord: '' })\n    const [nextDate, setNextDate] = useState()\n\n    const [partyId, setPartyId] = useState(purchase ? (purchase.partyMaster ? purchase.partyMaster.id : 0) : 0)\n\n    useEffect(() => {\n        store.remove(\"setId\")\n        store.remove(\"setIndex\")\n    }, [])\n\n\n    const savePurchase = (values, resetForm) => {\n        if (values.billNo !== undefined && values.billNo !== '' && values.billNo !== 0) {\n            if (values.billDate !== undefined && values.billDate !== '' && values.billDate !== 0) {\n                if (values.periodFromDate !== undefined && values.periodFromDate !== '' && values.periodFromDate !== 0) {\n                    if (values.periodToDate !== undefined && values.periodToDate !== '' && values.periodToDate !== 0) {\n                        let fromDt = moment(values.periodFromDate),\n                            toDt = moment(values.periodToDate);\n                        if (toDt >= fromDt) {\n                            if (values.partyM !== undefined && values.partyM !== '' && values.partyM !== 0) {\n                                if (Object.keys(values.purchaseVoucherDetails).length > 0) {\n                                    values.partyMaster = { id: values.partyM }\n                                    delete values.partyM\n                                    if (props.match.path === '/purchase/create') {\n                                        dispatch(createPurchase(values))\n                                        resetForm()\n                                        setNextDate(null)\n                                    }\n                                    if (props.match.path === '/purchase/edit/:id') {\n                                        dispatch(editPurchase(values))\n                                        props.history.push(`/purchase/list`)\n                                    }\n                                } else {\n                                    setModalState({ isOpen: true, keyWord: 'Please enter purchase details row' })\n                                }\n                            } else {\n                                setModalState({ isOpen: true, keyWord: 'Please select Supplier' })\n                            }\n                        } else {\n                            setModalState({ isOpen: true, keyWord: 'Period To Date should be greater than Period From Date' })\n                        }\n                    } else {\n                        setModalState({ isOpen: true, keyWord: 'Please enter Period To Date' })\n                    }\n                } else {\n                    setModalState({ isOpen: true, keyWord: 'Please enter Period From Date' })\n                }\n            } else {\n                setModalState({ isOpen: true, keyWord: 'Please enter Bill Date' })\n            }\n        } else {\n            setModalState({ isOpen: true, keyWord: 'Please enter Bill Number' })\n        }\n    }\n\n    function getVdArr(setField) {\n        return <FieldArray name='purchaseVoucherDetails' component={VdetailsNonEditable} setField={setField} />\n    }\n\n    const setItemObjectAdd = (values, value, setField) => {\n        values.purchaseVoucherDetails.push(value)\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectEdit = (values, value, setField, index) => {\n        values.purchaseVoucherDetails[index] = value\n        setField('purchaseVoucherDetails', values.purchaseVoucherDetails)\n        callSetAllData(setField, values)\n    }\n\n    const setItemObjectDelete = (values, setField) => {\n        if (store.get(\"setId\") !== null && store.get(\"setId\") !== undefined && store.get(\"setId\") !== \"\") {\n            let purchaseDetails = values.purchaseVoucherDetails,\n                id = store.get(\"setId\"),\n                newPurchaseDetails = purchaseDetails.filter((element) => {\n                    return parseInt(element.id, 10) !== parseInt(id, 10);\n                })\n            setField('purchaseVoucherDetails', newPurchaseDetails)\n            values.purchaseVoucherDetails = newPurchaseDetails\n            callSetAllData(setField, values)\n        }\n    }\n\n    const callSetAllData = (setField, values) => {\n        let totalRejectedQty = 0\n        let totalSourQty = 0\n        let totalKgFat = 0\n        let totalKgSnf = 0\n        let totalFatAmt = 0\n        let totalSnfAmt = 0\n        let totalMilkprice = 0\n        let ratePerKg = 0\n        let totalQty = 0\n        let totalGoodFat = 0\n        let totalGoodSnf = 0\n        let totalBadFat = 0\n        let totalBadSnf = 0\n        let pDetails = values.purchaseVoucherDetails\n        if (Object.keys(pDetails).length > 0) {\n            for (let i = 0; i < Object.keys(pDetails).length; i++) {\n                if (pDetails[i]) {\n                    totalRejectedQty = parseFloat(totalRejectedQty) + parseFloat((pDetails[i].rejectedQty === null || pDetails[i].rejectedQty === undefined || pDetails[i].rejectedQty === \"\") ? 0 : pDetails[i].rejectedQty)\n                    totalSourQty = parseFloat(totalSourQty) + parseFloat((pDetails[i].sourQty === null || pDetails[i].sourQty === undefined || pDetails[i].sourQty === \"\") ? 0 : pDetails[i].sourQty)\n                    totalKgFat = parseFloat(totalKgFat) + parseFloat((pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat)\n                    totalKgSnf = parseFloat(totalKgSnf) + parseFloat((pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf)\n                    totalFatAmt = parseFloat(totalFatAmt) + parseFloat((pDetails[i].fatAmount === null || pDetails[i].fatAmount === undefined || pDetails[i].fatAmount === \"\") ? 0 : pDetails[i].fatAmount)\n                    totalSnfAmt = parseFloat(totalSnfAmt) + parseFloat((pDetails[i].snfAmount === null || pDetails[i].snfAmount === undefined || pDetails[i].snfAmount === \"\") ? 0 : pDetails[i].snfAmount)\n                    totalMilkprice = parseFloat(totalMilkprice) + parseFloat((pDetails[i].milkPrice === null || pDetails[i].milkPrice === undefined || pDetails[i].milkPrice === \"\") ? 0 : pDetails[i].milkPrice)\n                    totalQty = parseFloat(totalQty) + parseFloat((pDetails[i].qty === null || pDetails[i].qty === undefined || pDetails[i].qty === \"\") ? 0 : pDetails[i].qty)\n                    totalGoodFat = parseFloat(totalGoodFat) + parseFloat(pDetails[i].fatQuality === \"Good\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalGoodSnf = parseFloat(totalGoodSnf) + parseFloat(pDetails[i].snfQuality === \"Good\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                    totalBadFat = parseFloat(totalBadFat) + parseFloat(pDetails[i].fatQuality === \"Bad\" ? (pDetails[i].kgFat === null || pDetails[i].kgFat === undefined || pDetails[i].kgFat === \"\") ? 0 : pDetails[i].kgFat : 0)\n                    totalBadSnf = parseFloat(totalBadSnf) + parseFloat(pDetails[i].snfQuality === \"Bad\" ? (pDetails[i].kgSnf === null || pDetails[i].kgSnf === undefined || pDetails[i].kgSnf === \"\") ? 0 : pDetails[i].kgSnf : 0)\n                }\n            }\n            if (parseFloat(totalQty) !== 0) {\n                ratePerKg = parseFloat(totalMilkprice) / parseFloat(totalQty)\n            }\n        }\n        setField('totalRejected', totalRejectedQty)\n        setField('totalSour', totalSourQty)\n        setField('totalKgfat', totalKgFat)\n        setField('totalKgsnf', totalKgSnf)\n        setField('totalFatAmount', totalFatAmt)\n        setField('totalSnfAmount', totalSnfAmt)\n        setField('totalQty', totalQty)\n        setField('totalMilkprice', totalMilkprice)\n        setField('totalAvgRateKg', ratePerKg)\n        setField('totalAvgKg', totalQty)\n        setField('totalGoodFat', totalGoodFat)\n        setField('totalGoodSnf', totalGoodSnf)\n        setField('totalBadFat', totalBadFat)\n        setField('totalBadSnf', totalBadSnf)\n        values.totalRejected = totalRejectedQty\n        values.totalSour = totalSourQty\n        values.totalKgfat = totalKgFat\n        values.totalKgsnf = totalKgSnf\n        values.totalFatAmount = totalFatAmt\n        values.totalSnfAmount = totalSnfAmt\n        values.totalQty = totalQty\n        values.totalMilkprice = totalMilkprice\n        values.totalAvgRateKg = ratePerKg\n        values.totalAvgKg = totalQty\n        values.totalGoodFat = totalGoodFat\n        values.totalGoodSnf = totalGoodSnf\n        values.totalBadFat = totalBadFat\n        values.totalBadSnf = totalBadSnf\n        if (values.headLoadValue !== null && values.headLoadValue !== undefined && values.headLoadValue !== \"\") {\n            computeHeadLoad(values, setField)\n        }\n        if (values.commissionValue !== null && values.commissionValue !== undefined && values.commissionValue !== \"\") {\n            computeCommission(values, setField)\n        }\n        if (values.sourMilkValue !== null && values.sourMilkValue !== undefined && values.sourMilkValue !== \"\") {\n            computeSourMilk(values, setField)\n        }\n        nowSetTotalValue(values, setField)\n    }\n\n    const totalAdditionAndDeduction = (val, index, setField) => {\n        let purchaseV = val\n        let commissionValue = purchaseV.commissionValue && purchaseV.commissionValue !== \"\" ? purchaseV.commissionValue : 0\n        let lateArrivalValue = purchaseV.lateArrivalValue && purchaseV.lateArrivalValue !== \"\" ? purchaseV.lateArrivalValue : 0\n        let mtevalue = purchaseV.mtevalue && purchaseV.mtevalue !== \"\" ? purchaseV.mtevalue : 0\n        let cattleFeedValue = purchaseV.cattleFeedValue && purchaseV.cattleFeedValue !== \"\" ? purchaseV.cattleFeedValue : 0\n        let splIncentiveValue = purchaseV.splIncentiveValue && purchaseV.splIncentiveValue !== \"\" ? purchaseV.splIncentiveValue : 0\n        let headLoadValue = purchaseV.headLoadValue && purchaseV.headLoadValue !== \"\" ? purchaseV.headLoadValue : 0\n        let vaccineValue = purchaseV.vaccineValue && purchaseV.vaccineValue !== \"\" ? purchaseV.vaccineValue : 0\n        let fodderValue = purchaseV.fodderValue && purchaseV.fodderValue !== \"\" ? purchaseV.fodderValue : 0\n        let testEquipMentValue = purchaseV.testEquipMentValue && purchaseV.testEquipMentValue !== \"\" ? purchaseV.testEquipMentValue : 0\n        let sourMilkValue = purchaseV.sourMilkValue && purchaseV.sourMilkValue !== \"\" ? purchaseV.sourMilkValue : 0\n        let cowLoanValue = purchaseV.cowLoanValue && purchaseV.cowLoanValue !== \"\" ? purchaseV.cowLoanValue : 0\n        let shareValue = purchaseV.shareValue && purchaseV.shareValue !== \"\" ? purchaseV.shareValue : 0\n        let arrearValue = purchaseV.arrearValue && purchaseV.arrearValue !== \"\" ? purchaseV.arrearValue : 0\n        let addAdvanceValue = purchaseV.addAdvanceValue && purchaseV.addAdvanceValue !== \"\" ? purchaseV.addAdvanceValue : 0\n        let deductAdvanceValue = purchaseV.deductAdvanceValue && purchaseV.deductAdvanceValue !== \"\" ? purchaseV.deductAdvanceValue : 0\n        let deductOthersValue = purchaseV.deductOthersValue && purchaseV.deductOthersValue !== \"\" ? purchaseV.deductOthersValue : 0\n        let adjustmentValue = purchaseV.adjustmentValue && purchaseV.adjustmentValue !== \"\" ? purchaseV.adjustmentValue : 0\n        let addOthersValue = purchaseV.addOthersValue && purchaseV.addOthersValue !== \"\" ? purchaseV.addOthersValue : 0\n        let totalAddition = parseFloat(commissionValue) + parseFloat(lateArrivalValue) + parseFloat(splIncentiveValue) + parseFloat(headLoadValue) + parseFloat(testEquipMentValue) + parseFloat(sourMilkValue) + parseFloat(arrearValue) + parseFloat(addAdvanceValue) + parseFloat(adjustmentValue) + parseFloat(addOthersValue)\n        let totalDeduction = parseFloat(mtevalue) + parseFloat(cattleFeedValue) + parseFloat(vaccineValue) + parseFloat(fodderValue) + parseFloat(cowLoanValue) + parseFloat(shareValue) + parseFloat(deductAdvanceValue) + parseFloat(deductOthersValue)\n        setField('totalAdditions', totalAddition)\n        setField('totalDeductions', totalDeduction)\n        val.totalAdditions = totalAddition\n        val.totalDeductions = totalDeduction\n        nowSetTotalValue(val, setField)\n    }\n\n    const additionOnChange = (val, index, setField) => {\n        nowSetTotalValue(val, setField)\n    }\n\n    const nowSetTotalValue = (val, setField) => {\n        let milkPrice = val.totalMilkprice ? (val.totalMilkprice !== \"\" ? val.totalMilkprice : 0) : 0\n        let totalAdditions = val.totalAdditions ? (val.totalAdditions !== \"\" ? val.totalAdditions : 0) : 0\n        let totalDeductions = val.totalDeductions ? (val.totalDeductions !== \"\" ? val.totalDeductions : 0) : 0\n        let netAmount = ((parseFloat(milkPrice) + parseFloat(totalAdditions)) - parseFloat(totalDeductions))\n        setField('netAmount', netAmount)\n        let autoAdj = parseFloat(netAmount).toFixed(0)\n        let getAdj = parseFloat(netAmount) - parseFloat(autoAdj)\n        let billTotal = 0\n        let adjustment = 0\n        if (parseFloat(getAdj) > 0) {\n            billTotal = autoAdj\n            adjustment = parseFloat(netAmount) - parseFloat(billTotal)\n        } else {\n            billTotal = parseFloat(autoAdj)\n            adjustment = parseFloat(billTotal) - parseFloat(netAmount)\n        }\n        setField('billTotal', billTotal)\n        setField('adjustment', adjustment)\n        // console.log(\"values.....................\", val)\n        val.netAmount = netAmount\n        val.billTotal = billTotal\n        val.adjustment = adjustment\n    }\n\n    const computeCommission = (values, setField) => {\n        let commisionValue = 0\n        if (commisionMisc) {\n            let commissionVal = commisionMisc.value\n            if (commisionMisc.operationOn === \"QTY(KG)\") {\n                let qty = values.totalQty === \"\" ? 0 : values.totalQty\n                commisionValue = parseFloat(qty) * parseFloat(commissionVal)\n            } else if (commisionMisc.operationOn === \"Milk Price\") {\n                let milkP = values.totalMilkprice === \"\" ? 0 : values.totalMilkprice\n                commisionValue = parseFloat(milkP) * parseFloat(commissionVal)\n            } else if (commisionMisc.operationOn === \"FAT/SNF(KG)\") {\n                let kgFatSNF = parseFloat(values.totalKgfat) + parseFloat(values.totalKgsnf)\n                commisionValue = parseFloat(kgFatSNF) * parseFloat(commissionVal)\n            }\n        }\n        setField('commissionValue', commisionValue)\n        values.commissionValue = commisionValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n\n    const computeHeadLoad = (values, setField) => {\n        // console.log(\"values...................\", values)\n        let qty = values.totalQty === \"\" ? 0 : values.totalQty\n        let headLoadValue = parseFloat(qty) * parseFloat(values.headLoadCalVal !== null && values.headLoadCalVal !== \"\" ? values.headLoadCalVal : 0)\n        setField('headLoadValue', headLoadValue)\n        values.headLoadValue = headLoadValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n\n\n    const computeSourMilk = (values, setField) => {\n        let sourMilkValue = 0\n        if (sourMilkMisc) {\n            let sourMilkVal = sourMilkMisc.value\n            let qty = values.totalSour === \"\" ? 0 : values.totalSour\n            // console.log(\"qty=======================\", qty)\n            sourMilkValue = parseFloat(qty) * parseFloat(sourMilkVal)\n        }\n        setField('sourMilkValue', sourMilkValue)\n        values.sourMilkValue = sourMilkValue\n        totalAdditionAndDeduction(values, 0, setField)\n    }\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={4}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>{params.title}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='txnContainer'>\n                <Formik id=\"purchaseForm\" size=\"large\" width={5}\n                    initialValues={purchase}\n                    onSubmit={(values, { resetForm }) => savePurchase(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeFormPurchase\" width={5} onSubmit={handleSubmit}>\n                            <Table style={{ width: '100%' }} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '5%' }}><label className=\"boldText\">Bill Id </label></Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <label className='boldLabel'>Auto</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}><label className=\"boldText\">Bill No </label></Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billNo\" label=' ' component={FormikInputComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}><label className=\"boldText\">Date </label></Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"billDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}><label className=\"boldText\">Period </label></Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodFromDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}><center><label className=\"boldText\">to</label></center></Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Form.Group widths={2}>\n                                                <Field name=\"periodToDate\" label=' ' component={FormikDateComponent} />\n                                            </Form.Group>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{ width: '100%' }} className='purchasetable' basic='very'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '10%' }}><label className=\"boldText\">Supplier </label></Table.Cell>\n                                        <Table.Cell style={{ width: '21%' }}>\n                                            <PartySelect name=\"partyM\" isLabel={false} label=\" \" isSelection={true} setState={setPartyId} userProps={{ setField: setFieldValue, setName: 'partyM' }} type='' />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}>\n                                            {partyId !== 0 ?\n                                                <PartyDisplayView partyId={partyId} />\n                                                :\n                                                <Button type='button' icon size='small' color='vk' title='Add Bank' style={{ visibility: 'hidden' }}><Icon name='eye' /></Button>\n                                            }\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '6%' }}>\n                                            <label className=\"boldText\">Rejected</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            <Field name=\"totalRejected\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '6%' }}>\n                                            <label className=\"boldText\">Sour</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            <Field name=\"totalSour\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <AddQuickVdetails setItemObject={setItemObjectAdd} index={''} setField={setFieldValue} values={values} setNextDate={setNextDate} nextDate={nextDate ? nextDate : values.periodFromDate} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <AddQuickVdetails setItemObject={setItemObjectEdit} index={'y'} voucherObj={values} setField={setFieldValue} values={values} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Button type=\"button\" className=\"CustomeBTNWithoutMargin\" color='google plus' style={{ float: 'right' }} onClick={() => setItemObjectDelete(values, setFieldValue)}>Delete</Button>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{ width: '100%' }} className='purchasetable'>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '100%', padding: '0px' }}>\n                                            <div className='outScrollX' style={{ width: '100%', height: '150px' }}>\n                                                <div className='outScrollY' style={{ width: '100%', height: '150px' }}>\n                                                    <Form.Group>\n                                                        {getVdArr()}\n                                                    </Form.Group>\n                                                </div>\n                                            </div>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{ width: '100%' }} className='purchasetable' fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <label className=\"boldText\">Fat(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Field name=\"totalKgfat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <label className=\"boldText\">SNF(Kg)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Field name=\"totalKgsnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <label className=\"boldText\">Fat(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Field name=\"totalFatAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <label className=\"boldText\">SNF(Rs.)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Field name=\"totalSnfAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <label className=\"boldText\">QTY(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '8%' }}>\n                                            <Field name=\"totalQty\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <label className=\"boldText\">Milk Price</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"totalMilkprice\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{ width: '100%' }} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='6' style={{ width: '50%' }} className='rightBorder'>\n                                            <center><label className=\"boldText\">Addition</label></center>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{ width: '50%' }}>\n                                            <center><label className=\"boldText\">Deduction</label></center>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Commision\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"commissionValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeCommission(values, setFieldValue)}>\n                                                <Icon name='question' />\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='commissionNarration' setField={setFieldValue} setValueFor={values.commissionNarration === \"\" ? (commisionMisc ? commisionMisc.description + \" \" + '' : '') : values.commissionNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Late Arrival\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"lateArrivalValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }} className='rightBorder'>\n                                            <AddNotesCommon name='lateArrivalNarration' setField={setFieldValue} setValueFor={values.lateArrivalNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            M.T.E\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"mtevalue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='mtenarration' setField={setFieldValue} setValueFor={values.mtenarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Cattle Feed\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"cattleFeedValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='cattleFeedNarration' setField={setFieldValue} setValueFor={values.cattleFeedNarration} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            S.Incentive\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"splIncentiveValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='splIncentiveNarration' setField={setFieldValue} setValueFor={values.splIncentiveNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Head Load\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"headLoadValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }} className='rightBorder'>\n                                            <AddHeadLoad name='headLoadCalVal' setField={setFieldValue} setValueFor={values.headLoadCalVal} afterWork={computeHeadLoad} sendValue={values} />\n                                            &nbsp;\n                                            <AddNotesCommon name='headLoadNarration' setField={setFieldValue} setValueFor={values.headLoadNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Vaccine\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"vaccineValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='vaccineNarration' setField={setFieldValue} setValueFor={values.vaccineNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Fodder Seed\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"fodderValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='fodderNarration' setField={setFieldValue} setValueFor={values.fodderNarration} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Testing Eqp\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"testEquipMentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='testEquipMentNarration' setField={setFieldValue} setValueFor={values.testEquipMentNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Sour Milk\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"sourMilkValue\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }} className='rightBorder'>\n                                            <Button type=\"button\" icon className='iconButtonCustom' color='vk' onClick={() => computeSourMilk(values, setFieldValue)}>\n                                                <Icon name='question' />\n                                            </Button>&nbsp;\n                                            <AddNotesCommon name='sourMilkNarration' setField={setFieldValue} setValueFor={values.sourMilkNarration === \"\" ? (sourMilkMisc ? sourMilkMisc.description + \" \" + values.totalSour : values.totalSour) : values.sourMilkNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Cow Loan\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"cowLoanValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='cowLoanNarration' setField={setFieldValue} setValueFor={values.cowLoanNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Share\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"shareValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='shareNarration' setField={setFieldValue} setValueFor={values.shareNarration} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Arrear\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"arrearValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='arrearNarration' setField={setFieldValue} setValueFor={values.arrearNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"addAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }} className='rightBorder'>\n                                            <AddNotesCommon name='addAdvanceNarration' setField={setFieldValue} setValueFor={values.addAdvanceNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Advance\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"deductAdvanceValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='deductAdvanceNarration' setField={setFieldValue} setValueFor={values.deductAdvanceNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"deductOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='deductOthersNarration' setField={setFieldValue} setValueFor={values.deductOthersNarration} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Adjustment\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"adjustmentValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }}>\n                                            <AddNotesCommon name='adjustmentNarration' setField={setFieldValue} setValueFor={values.adjustmentNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '14%' }}>\n                                            Other\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '7%' }}>\n                                            <Field name=\"addOthersValue\" label=' ' component={FormikAmountComponent} compute={totalAdditionAndDeduction} />\n                                        </Table.Cell>\n                                        <Table.Cell textAlign='right' style={{ width: '4%' }} className='rightBorder'>\n                                            <AddNotesCommon name='addOthersNarration' setField={setFieldValue} setValueFor={values.addOthersNarration} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{ width: '50%' }}></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table style={{ width: '100%' }} fixed>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '6%' }}>\n                                            Rate/Kg\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"totalAvgRateKg\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}>\n                                            Good\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '12%' }}>\n                                            <Field name=\"totalGoodFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '12%' }}>\n                                            <Field name=\"totalGoodSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            Additions\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"totalAdditions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            Net Amount\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"netAmount\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '6%' }}>\n                                            <label className=\"boldText\">Avg(KG)</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"totalAvgKg\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '5%' }}>\n                                            Bad\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '12%' }}>\n                                            <Field name=\"totalBadFat\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '12%' }}>\n                                            <Field name=\"totalBadSnf\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            Deductions\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"totalDeductions\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            Adjustments\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"adjustment\" label=' ' component={FormikAmountComponent} compute={additionOnChange} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell style={{ width: '6%' }}>\n                                            Notes\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='6' style={{ width: '69%' }}>\n                                            <Field name=\"notes\" label=' ' component={FormikTextAreaComponent} userProps={{ maxLength: 300, displayCount: false, height: 1 }} focus={true} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '10%' }}>\n                                            <label className=\"boldText\">Bill Total</label>\n                                        </Table.Cell>\n                                        <Table.Cell style={{ width: '15%' }}>\n                                            <Field name=\"billTotal\" label=' ' component={FormikAmountComponent} isReadonly={true} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <div className=\"stickeyDiv\">\n                                <Table className=\"purchasetable\" style={{ width: '100%' }} fixed>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>\n                                                <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTNWithoutMargin\" color='vk' style={{ float: 'right' }}>\n                                                    {params.submitButtonText}\n                                                    <Icon name={props.match.path === '/purchase/create' ? 'add circle' : 'arrow alternate circle up outline'} />\n                                                </Button>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </div>\n                            {console.log(\"text----------------\" + params.submitButtonText)}\n                            {savedPurchaseId && savedPurchaseId !== 0 ?\n                                <Notification id={savedPurchaseId} notifySelector={getNotification} notifyDoneAction={setNotifyDonePurchase} type='save' />\n                                :\n                                null}\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({ isOpen: false, keyWord: '' })}>\n                                <Modal.Header style={{ color: 'red' }}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({ isOpen: false, keyWord: '' })} negative labelPosition='right' icon='checkmark' content='Okay' />\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default PurchaseForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport PurchaseList from \"./components/purchaseList\"\nimport PurchaseForm from \"./components/purchaseForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Purchase = () => {\n    return (\n        <Container>\n            <Route path=\"/purchase/list\" component={withRouter(PurchaseList)} />\n            <Route path=\"/purchase/edit/:id\" component={PurchaseForm} />\n            <Route path=\"/purchase/create\" component={PurchaseForm} />\n        </Container>\n    )\n};\n\nexport default Purchase;\n\n","export const POST_REGISTER_SUMMARY = 'POST_REGISTER_SUMMARY'\nexport const POST_REGISTER_ALLPARTY = 'POST_REGISTER_ALLPARTY'\nexport const POST_REGISTER_SINGLEPARTY = 'POST_REGISTER_SINGLEPARTY'\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Field } from 'formik'\r\nimport { FormikMultiSelectComponent } from '../../../utilities/formUtils'\r\nimport { selectParty } from '../data/selectors'\r\n    \r\n\r\nconst MultiPartySelect = ({ name, isTxn, isLabel, label, isSelection, setState }, props) => {\r\n    \r\n    const opt = useSelector(state => selectParty(state, props))\r\n\r\n    const getSelectedValue = (values) => {\r\n        if(setState)\r\n            setState(values === \"\" ? 0 : values)\r\n    }\r\n\r\n    return (\r\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikMultiSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MultiPartySelect;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../data/model'\nimport { postSummaryDetails, postAllPartyDetails, postSinglePartyDetails } from '../data/actions' \nimport { Container, Header, Form, Button, Grid, Table, Icon, Modal } from 'semantic-ui-react'\nimport { Formik, Field, Form as FormikForm } from 'formik'\nimport { FormikDateComponent, FormikCheckBoxComponent } from '../../../utilities/formUtils'\nimport MultiPartySelect from '../../party/components/multiPartySelect'\nimport moment from 'moment'\n\n\nconst RegisterForm = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [modalState, setModalState] = useState({isOpen: false, keyWord: ''})\n\n    const postRegister = (values, resetForm) => {\n        if(values.fromDate !== \"\" && values.toDate !== \"\"){\n            let fromDt = moment(values.fromDate),\n                toDt = moment(values.toDate);\n            if(toDt >= fromDt){\n                if(values.type === \"Summary\"){\n                    let summaryData = values.fromDate+\"/\"+values.toDate\n                    dispatch(postSummaryDetails(summaryData))\n                    resetForm()\n                }else if(values.type === \"Detailed\"){\n                    if(values.partytype === \"All Suppliers\"){\n                        let allPartyData = values.fromDate+\"/\"+values.toDate\n                        dispatch(postAllPartyDetails(allPartyData))\n                        resetForm()\n                    }else if(values.partytype === \"Selected Supplier\"){\n                        values.partyid = values.partyid.toString()\n                        let singlePartyData = values.partyid+\"/\"+values.fromDate+\"/\"+values.toDate\n                        dispatch(postSinglePartyDetails(singlePartyData))\n                        resetForm()\n                    }\n                }\n            }else{\n                setModalState({isOpen: true, keyWord: 'datediff'})\n            }\n        }else{\n            setModalState({isOpen: true, keyWord: 'dateblank'})\n        }        \n    }\n\n    return (\n        <Container>\n            <Grid columns='equal' className=\"borderButtomTable\">\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Milk Purchase Register</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2} floated={'right'} align='right'></Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Container className='formContainer'>\n                <Formik id=\"registerForm\" size=\"large\" width={5}\n                    initialValues={register()}\n                    onSubmit={(values, { resetForm }) => postRegister(values, resetForm)}\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\n                            <Table>\n                                <Table.Body>\n                                    {console.log(values)}\n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">From Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"fromDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell style={{width: '20%'}}><label className=\"boldText\">To Date: </label></Table.Cell>\n                                        <Table.Cell style={{width: '30%'}}>\n                                            <Field name=\"toDate\" label=' ' component={FormikDateComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Summary'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"type\" userProps={{id: 'Detailed'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    {values.type === \"Detailed\" ? \n                                    <Table.Row>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'All Suppliers'}} defaultCheck={true} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='2' style={{width: '50%'}}>\n                                            <Field name=\"partytype\" userProps={{id: 'Selected Supplier'}} component={FormikCheckBoxComponent} />\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                    {values.partytype === \"Selected Supplier\" ? \n                                    <Table.Row>\n                                        <Table.Cell style={{width: '20%'}}>\n                                            <label className=\"boldText\">Party Name: </label>\n                                        </Table.Cell>\n                                        <Table.Cell colSpan='3' style={{width: '80%'}}>\n                                            <MultiPartySelect name=\"partyid\" isLabel={false} label=\" \" isSelection={true} type=''/>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    : null}\n                                </Table.Body>\n                            </Table>\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{float: 'right'}}>\n                                Print\n                                <Icon name='print'/>\n                            </Button>\n                            <br/><br/><br/><br/>\n                            <Modal open={modalState.isOpen} size='mini' onClose={() => setModalState({isOpen: false, keyWord: ''})}>\n                                <Modal.Header style={{color: 'red'}}>Warning</Modal.Header>\n                                <Modal.Content>\n                                    <p>\n                                        {modalState.keyWord === 'dateblank' ? 'From date and to date should not be blank' : (modalState.keyWord === 'datediff' ? 'To date should be greater than from date' : '')}\n                                    </p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => setModalState({isOpen: false, keyWord: ''})} negative labelPosition='right' icon='checkmark' content='Okay'/>\n                                </Modal.Actions>\n                            </Modal>\n                        </Form>\n                    )}\n                />\n            </Container>\n        </Container>\n    )\n}\n\nexport default RegisterForm;","import * as type from './types'\n\nexport function postSummaryDetails(register) {\n    return {\n        type: type.POST_REGISTER_SUMMARY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postAllPartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n\nexport function postSinglePartyDetails(register) {\n    return {\n        type: type.POST_REGISTER_ALLPARTY,\n        payload: register,\n        txn: 'initiated',\n    };\n}\n","\nexport const register =  () => ({\n    \"fromDate\": \"\",\n    \"toDate\": \"\",\n    \"type\": \"\",\n    \"partytype\": \"\",\n    \"partyid\": \"\"\n})\n\n","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport RegisterForm from \"./components/register\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Register = () => {\n    return (\n        <Container>\n            <Route path=\"/register/list\" component={withRouter(RegisterForm)} />\n        </Container>\n    )\n};\n\nexport default Register;\n\n","import * as Yup from 'yup';\nimport v4 from 'uuid';\nimport { parseDateFromFormats } from '../../../utilities/parseDate';\nimport moment from 'moment'\n\nexport const combination =  () => ({\n    \"setStandard\": \"\",\n    \"setRate\": \"\"\n})\n\n\nYup.addMethod(Yup.date, 'format', parseDateFromFormats);\nexport const combinationSchema = Yup.object().shape({\n    setStandard: Yup.string()\n        .required('This is a Required Field'),\n\n    setRate: Yup.string()\n        .required('This is a Required Field'),\n});\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Field } from 'formik'\nimport { FormikSelectComponent } from '../../../utilities/formUtils'\nimport * as select from '../data/selectors'\n    \n\nconst TypeSelect = ({ name, isTxn, isLabel, label, isSelection, userProps }, props) => {\n    \n    const opt = [{\n        key : \"Flush\",\n        value : \"Flush\",\n        text : \"Flush\"\n    },{\n        key : \"Lean\",\n        value : \"Lean\",\n        text : \"Lean\"\n    }]\n\n    const getSelectedValue = (values) => {\n        \n    }\n\n    return (\n        <Field name={name} isLabel={isLabel} isTxn={isTxn} label={label} isSelection={isSelection} component={FormikSelectComponent} userProps={{ options: opt, getValue: getSelectedValue }}> </Field>\n    )\n\n}\n\n\nexport default TypeSelect;\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { combinationSchema } from '../data/model'\r\nimport { Container, Header, Form, Button, Grid, Table, Icon } from 'semantic-ui-react'\r\nimport { Formik, Form as FormikForm } from 'formik'\r\nimport TypeSelect from './typeSelect'\r\nimport * as select from '../data/selectors'\r\nimport { editCombination, setNotifyDoneCombination } from '../data/actions'\r\nimport Notification from '../../../utilities/notificationUtils'\r\n\r\n\r\nconst CombinationForm = (props) => {\r\n    \r\n    const combination = useSelector(state => select.getCombination(state, '1'))\r\n    const savedCombinationId = useSelector(state => select.getSavedCombinationId(state, props))\r\n    const dispatch = useDispatch()\r\n    const saveCombination = (values, resetForm) => {\r\n        dispatch(editCombination(values))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns='equal' className=\"borderButtomTable\">\r\n                <Grid.Row>\r\n                    <Grid.Column width={4}>\r\n                        <Header as='h1' className=\"VerticalAlign\" align='left'>Set Combination</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6} floated={'right'} align='right'></Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Container className='formContainer'>\r\n                <Formik id=\"standardForm\" size=\"large\" width={5}\r\n                    initialValues={combination}\r\n                    validationSchema={combinationSchema}\r\n                    onSubmit={(values, { resetForm }, ) => saveCombination(values, resetForm)}\r\n                    render={({ handleSubmit, errors, onChange, values, handleChange, setFieldValue }) => (\r\n                        <Form as={FormikForm} size=\"small\" className=\"CustomeForm\" width={5} onSubmit={handleSubmit}>\r\n                            <Table>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Standard Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setStandard\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ width: '20%' }}><label className=\"boldText\">Milk Rate Type: </label></Table.Cell>\r\n                                        <Table.Cell colSpan={2} style={{ width: '80%' }}>\r\n                                            <Form.Group widths={2}>\r\n                                                <TypeSelect name=\"setRate\" isLabel={false} label=\" \" isSelection={true} type='' />\r\n                                            </Form.Group>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                            <Button type=\"submit\" icon labelPosition='right' className=\"CustomeBTN\" color='vk' style={{ float: 'right' }}>\r\n                                Update\r\n                                <Icon name='arrow alternate circle up outline' />\r\n                            </Button>\r\n                            <br /><br /><br /><br />\r\n                            {savedCombinationId && savedCombinationId !== 0 ? \r\n                            <Notification id={savedCombinationId} notifySelector={select.getNotification} notifyDoneAction={setNotifyDoneCombination} type='save'/>\r\n                            :\r\n                            null}\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CombinationForm;","import React from 'react'\nimport { Route, withRouter } from 'react-router'\nimport CombinationForm from \"./components/combinationForm\"\nimport { Container } from 'semantic-ui-react'\n\n\nconst Combination = () => {\n    return (\n        <Container>\n            <Route path=\"/combination/update\" component={withRouter(CombinationForm)} />\n        </Container>\n    )\n};\n\nexport default Combination;\n\n","import React from 'react';\nimport {Route} from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter} from 'connected-react-router'\nimport { history } from '../../configureStore'\nimport { menu } from './menu'\n\nimport Party from '../party/index'\nimport Bank from '../bank/index'\nimport Group from '../group/index'\nimport MilkRates from '../milkRates/index'\nimport Standard from '../standard/index'\nimport Misc from '../misc/index'\nimport FinYear from '../finyear/index'\nimport Purchase from '../purchase/index'\nimport Register from '../register/index'\nimport Combination from '../combination/index'\n\nimport 'semantic-ui-less/semantic.less'\nimport { Container, Dropdown, Menu, Header, Icon } from 'semantic-ui-react'\n\nconst App = ({ stores }) => (\n  <Provider store = {stores}>\n    <ConnectedRouter history={history} >\n      <Container className=\"paddingTopOnly widhtSection\">\n        <Menu attached='top'>\n          <Menu.Item as={Link} to=\"/\"><Icon name='home'/></Menu.Item>\n          <Dropdown item icon='list' simple>\n            <Dropdown.Menu>\n              { menu.map((m, index) => {\n                return(\n                    <Dropdown.Item>\n                      <Icon name='dropdown' />\n                      <span className='text'>{m.title}</span>\n                      <Dropdown.Menu>\n                        { m.submenu.map((s, sindex) => {\n                          return(\n                          <Dropdown.Item text={s.title} key={sindex} as={Link} to={s.list}/>\n                          )\n                        })}\n                      </Dropdown.Menu>\n                    </Dropdown.Item>\n                  )\n              })}\n            </Dropdown.Menu>    \n          </Dropdown>\n          <Menu.Menu position='right'>\n            <Container className='headerMenuRight'>\n              <Header as='h4' className=\"VerticalAlign topTen\" align='right'>Mayurakshi Co-operative Milk Producers' Union Ltd</Header>\n            </Container>\n            <Menu.Item as={Link} to=\"/\" onClick={() => window.location = \"http://localhost:8080/dairyfarm/logout\"}><Icon className=\"logoutRed\" name='power off'/></Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Route path=\"/party\" component={Party} />\n        <Route path=\"/bank\" component={Bank} />\n        <Route path=\"/group\" component={Group} />\n        <Route path=\"/milkRates\" component={MilkRates} />\n        <Route path=\"/standard\" component={Standard} />\n        <Route path=\"/misc\" component={Misc} />\n        <Route path=\"/finyear\" component={FinYear} />\n        <Route path=\"/purchase\" component={Purchase} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/combination\" component={Combination} />\n      </Container>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './modules/app/App';\nimport configureStore from './configureStore';\n\n\nimport './index.css';\n\n// Creating Store\nconst stores = configureStore()\nconst renderApp = () => ReactDOM.render(<App stores={stores}/>, document.getElementById('root'))\nrenderApp()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}